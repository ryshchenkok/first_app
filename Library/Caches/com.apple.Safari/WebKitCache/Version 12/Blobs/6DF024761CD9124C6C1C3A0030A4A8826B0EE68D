<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html lang="ru" xml:lang="ru" xmlns="http://www.w3.org/1999/xhtml"><head>  <title>Перевод Ruby on Rails Tutorial: Изучение Rails на Примерах | Ruby on Rails 3 Tutorial book and screencasts | by Michael Hartl</title>
<meta name="verification" content="a34fd0835be065ac4e649a0e5452b932" />
<meta http-equiv="Content-type" content="text/html; charset=utf-8" />
<meta name="robots" content="all" />
<meta name="MSSmartTagsPreventParsing" content="true" />
<meta name="description" content="Перевод Ruby on Rails Tutorial: Изучение Rails на Примерах by Michael Hartl" />
<meta name="keywords" content="Изучение Ruby Rails Учебник сайт разработка Rails 3" />
<meta name="author" content="Michael Hartl" />
<meta property="og:title" content="Ruby on Rails Tutorial: Learn Rails by Example"/>
<meta property="og:site_name" content="Ruby on Rails Tutorial"/>
<meta property="og:image" content="http://railstutorial.org/images/layout/logo.png"/>

<meta property="og:url" content="http://railstutorial.org/"/>
<meta property="og:type" content="article" />
<meta property="og:description" content="Ruby on Rails Tutorial: Learn Rails by Example by Michael Hartl teaches web development with Ruby on Rails. Rails Tutorial is fully up-to-date with Rails 3.0." />
<meta name='yandex-verification' content='59b3e8d1c368245d' />
<meta name="verify-reformal" content="4b7dc121caf2baf0963a0473" />
<meta name="google-site-verification" content="JMHh1fZ6uwuY-koyWFZpi3oA5NP3pqs39uaZCZJ3Mr4" />

<link href="/stylesheets/polytexnic.css?1438286578" media="screen" rel="stylesheet" type="text/css" />
<link href="/stylesheets/pygments.css?1438286578" media="screen" rel="stylesheet" type="text/css" />
<link href="/stylesheets/screen.css?1438286578" media="screen, projection" rel="stylesheet" type="text/css" />
<link href="/stylesheets/custom.css?1438286578" media="screen" rel="stylesheet" type="text/css" />
<script src="/javascripts/jquery-1.6.2.min.js?1438286578" type="text/javascript"></script>
<script src="/javascripts/show_origin.js?1438286578" type="text/javascript"></script>

<!--[if lte IE 7]><link href="/stylesheets/ie.css?1304201481" media="screen" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lt IE 7]>  <div style='border: 1px solid #F7941D; background: #FEEFDA; text-align: center; clear: both; height: 75px; position: relative;'>    <div style='position: absolute; right: 3px; top: 3px; font-family: courier new; font-weight: bold;'><a href='#' onclick='javascript:this.parentNode.parentNode.style.display="none"; return false;'><img src='http://www.ie6nomore.com/files/theme/ie6nomore-cornerx.jpg' style='border: none;' alt='Close this notice'/></a></div>    <div style='width: 640px; margin: 0 auto; text-align: left; padding: 0; overflow: hidden; color: black;'>      <div style='width: 75px; float: left;'><img src='http://www.ie6nomore.com/files/theme/ie6nomore-warning.jpg' alt='Warning!'/></div>      <div style='width: 275px; float: left; font-family: Arial, sans-serif;'>        <div style='font-size: 14px; font-weight: bold; margin-top: 12px;'>Вы используете устаревший браузер</div>        <div style='font-size: 12px; margin-top: 6px; line-height: 12px;'>Для того, чтобы получить от этого сайта максимум того, на что он способен, пожалуйста, обновите свой браузер.</div>      </div>      <div style='width: 75px; float: left;'><a href='http://www.firefox.com' target='_blank'><img src='http://www.ie6nomore.com/files/theme/ie6nomore-firefox.jpg' style='border: none;' alt='Get Firefox 3.5'/></a></div>      <div style='width: 75px; float: left;'><a href='http://www.browserforthebetter.com/download.html' target='_blank'><img src='http://www.ie6nomore.com/files/theme/ie6nomore-ie8.jpg' style='border: none;' alt='Get Internet Explorer 8'/></a></div>      <div style='width: 73px; float: left;'><a href='http://www.apple.com/safari/download/' target='_blank'><img src='http://www.ie6nomore.com/files/theme/ie6nomore-safari.jpg' style='border: none;' alt='Get Safari 4'/></a></div>      <div style='float: left;'><a href='http://www.google.com/chrome' target='_blank'><img src='http://www.ie6nomore.com/files/theme/ie6nomore-chrome.jpg' style='border: none;' alt='Get Google Chrome'/></a></div>    </div>  </div>  <![endif]-->
<link href='http://feeds.feedburner.com/railstutorial' rel='alternate' title='Rails Tutorial News' type='application/rss+xml' />

</head><body class="book"><div id="container"><div class="clearfix" id="header"><div id="title"><div id="logo"><a href="http://ruby.railstutorial.org/"><img alt="Logo" src="/images/layout/logo.png?1438286578" /></a></div><h1 id="name"><a href="http://ruby.railstutorial.org/">Ruby on Rails Tutorial</a></h1><br /><h2 id="authors"><a href="http://ruby.railstutorial.org/#author">by Michael Hartl</a></h2></div></div><div id="menu"><div class="links"><div class="box"><span><a href="http://ruby.railstutorial.org/">Оригинал</a></span><span class="division">|</span><span><a href="/chapters/4_0/beginning">Содержание</a></span><span class="division">|</span><span><a href="/4_0/help">Помощь</a></span></div></div></div><div id="content"><div id="sidebar"><div class="content"><div id="navtool"><table class="layout"><tr><td colspan="2"><a href="#book_menu"><img alt="Sb_button_up" src="/images/buttons/sb_button_up.png?1438286577" /></a></td></tr><tr><td><a href="user-microposts#top"><img alt="Previous Chapter" src="/images/buttons/sb_button_prev.png?1438286577" /></a></td><td><img alt="Next Chapter" src="/images/buttons/sb_button_next.png?1438286577" /></td></tr></table><br /><a href="http://ruby.railstutorial.org/#buy"><img alt="Sb_button_buy_screencasts_red" src="/images/buttons/sb_button_buy_screencasts_red.png?1438286577" /></a><div class="section"><div class="switcher custom"><span class="switcher_link title round"><a href="/chapters/4_0/beginning">Rails 4.0</a></span>&nbsp;•&nbsp; <span class="switcher_link "><a href="/chapters/3_2/beginning">Rails 3.2</a></span></div></div><a href="http://orphus.ru" id="orphus" rel="nofollow" target="_blank"><img alt="Система Orphus" border="0" height="31" src="/images/orphus.gif" width="88" /></a></div></div></div><div class="withsidebar" id="main"><div id="book_menu"><a href="#top">пропустить содержание</a></div><div id="book_wrap">
  <div id="book_top">
  </div>
    <div id="book">
      <h1 class="title">Ruby on Rails Tutorial </h1>


<h1 class="subtitle"> Изучение Rails на Примерах</h1>


<h2 class="author">Майкл Хартл</h2>


<h1 class="contents">Содержание</h1>


<div id="table_of_contents"><ol>
<li class="chapter"><a href="preface#top"> Предисловие к русскому изданию</a></li>
<li class="chapter"><a href="beginning#top"><span class="number">Глава 1</span> От нуля к развертыванию</a></li>
<li><ol><li class="section"><a href="beginning#sec-introduction"><span class="number">1.1</span> Введение</a></li>
<li><ol><li class="subsection"><a href="beginning#sec-comments_for_various_readers"><span class="number">1.1.1</span> Комментарии для разных читателей</a></li>
<li class="subsection"><a href="beginning#sec-1_1_2"><span class="number">1.1.2</span> &ldquo;Масштабирование&rdquo; Rails</a></li>
<li class="subsection"><a href="beginning#sec-conventions"><span class="number">1.1.3</span> Соглашения в этой книге</a></li>
</ol></li>
<li class="section"><a href="beginning#sec-up_and_running"><span class="number">1.2</span> За работу</a></li>
<li><ol><li class="subsection"><a href="beginning#sec-development_tools"><span class="number">1.2.1</span> Среда разработки</a></li>
<li><ol><li class="subsubsection"><a href="beginning#sec-1_2_1_1">Интегрированные Среды Разработки</a></li>
<li class="subsubsection"><a href="beginning#sec-1_2_1_2">Текстовые редакторы и инструменты командной строки</a></li>
<li class="subsubsection"><a href="beginning#sec-1_2_1_3">Браузеры</a></li>
<li class="subsubsection"><a href="beginning#sec-1_2_1_4">Примечание об инструментах</a></li>
</ol></li>
<li class="subsection"><a href="beginning#sec-rubygems"><span class="number">1.2.2</span> Ruby, RubyGems, Rails и Git</a></li>
<li><ol><li class="subsubsection"><a href="beginning#sec-rails_installer_windows">Rails Installer (Windows)</a></li>
<li class="subsubsection"><a href="beginning#sec-install_git">Установка Git</a></li>
<li class="subsubsection"><a href="beginning#sec-install_ruby">Установка Ruby</a></li>
<li class="subsubsection"><a href="beginning#sec-install_rubygems">Установка RubyGems</a></li>
<li class="subsubsection"><a href="beginning#sec-install_rails">Установка Rails</a></li>
</ol></li>
<li class="subsection"><a href="beginning#sec-the_first_application"><span class="number">1.2.3</span> Первое приложение</a></li>
<li class="subsection"><a href="beginning#sec-bundler"><span class="number">1.2.4</span> Bundler</a></li>
<li class="subsection"><a href="beginning#sec-rails_server"><span class="number">1.2.5</span> <tt>rails server</tt></a></li>
<li class="subsection"><a href="beginning#sec-mvc"><span class="number">1.2.6</span> Модель-представление-контроллер (MVC)</a></li></ol></li>
<li class="section"><a href="beginning#sec-version_control"><span class="number">1.3</span> Управление версиями с Git</a></li>
<li><ol><li class="subsection"><a href="beginning#sec-git_setup"><span class="number">1.3.1</span> Установка и настройка</a></li>
<li><ol><li class="subsubsection"><a href="beginning#sec-1_3_1_1">Первоначальная настройка системы</a></li>
<li class="subsubsection"><a href="beginning#sec-1_3_1_2">Первоначальная настройка репозитория</a></li></ol></li>
<li class="subsection"><a href="beginning#sec-adding_and_committing"><span class="number">1.3.2</span> Добавление и фиксация</a></li>
<li class="subsection"><a href="beginning#sec-1_3_3"><span class="number">1.3.3</span> Что хорошего Git делает для вас?</a></li>
<li class="subsection"><a href="beginning#sec-github"><span class="number">1.3.4</span> GitHub</a></li>
<li class="subsection"><a href="beginning#sec-git_commands"><span class="number">1.3.5</span> Ветвление, редактирование, фиксация, объединение</a></li>
<li><ol><li class="subsubsection"><a href="beginning#sec-git_branch">Ветвление</a></li>
<li class="subsubsection"><a href="beginning#sec-git_edit">Редактирование</a></li>
<li class="subsubsection"><a href="beginning#sec-git_commit">Фиксация</a></li>
<li class="subsubsection"><a href="beginning#sec-git_merge">Объединение</a></li>
<li class="subsubsection"><a href="beginning#sec-git_push">Отправка</a></li></ol></li></ol></li>
<li class="section"><a href="beginning#sec-deploying"><span class="number">1.4</span> Развертывание</a></li>
<li><ol><li class="subsection"><a href="beginning#sec-heroku_setup"><span class="number">1.4.1</span> Установка Heroku</a></li>
<li class="subsection"><a href="beginning#sec-heroku_step_one"><span class="number">1.4.2</span> Развертывание на Heroku, шаг первый</a></li>
<li class="subsection"><a href="beginning#sec-1_4_3"><span class="number">1.4.3</span> Развертывание на Heroku, шаг второй</a></li>
<li class="subsection"><a href="beginning#sec-heroku_commands"><span class="number">1.4.4</span> Команды Heroku</a></li></ol></li>
<li class="section"><a href="beginning#sec-beginning_conclusion"><span class="number">1.5</span> Заключение</a></li></ol></li>
<li class="chapter"><a href="a-demo-app#top"><span class="number">Глава 2</span> demo app</a></li>
<li><ol><li class="section"><a href="a-demo-app#sec-planning_the_application"><span class="number">2.1</span> Планирование приложения</a></li>
<li><ol><li class="subsection"><a href="a-demo-app#sec-modeling_demo_users"><span class="number">2.1.1</span> Моделирование пользователей</a></li>
<li class="subsection"><a href="a-demo-app#sec-modeling_demo_microposts"><span class="number">2.1.2</span> Моделирование микросообщений</a></li></ol></li>
<li class="section"><a href="a-demo-app#sec-demo_users_resource"><span class="number">2.2</span> Ресурс Users</a></li>
<li><ol><li class="subsection"><a href="a-demo-app#sec-a_user_tour"><span class="number">2.2.1</span> Обзор пользователя</a></li>
<li class="subsection"><a href="a-demo-app#sec-mvc_in_action"><span class="number">2.2.2</span> MVC в действии</a></li>
<li class="subsection"><a href="a-demo-app#sec-weaknesses_of_this_users_resource"><span class="number">2.2.3</span> Недостатки данного ресурса Users</a></li></ol></li>
<li class="section"><a href="a-demo-app#sec-microposts_resource"><span class="number">2.3</span> Ресурс Microposts</a></li>
<li><ol><li class="subsection"><a href="a-demo-app#sec-a_micropost_microtour"><span class="number">2.3.1</span> Микрообзор микросообщений</a></li>
<li class="subsection"><a href="a-demo-app#sec-putting_the_micro_in_microposts"><span class="number">2.3.2</span> Помещение <em>micro</em> в микросообщения</a></li>
<li class="subsection"><a href="a-demo-app#sec-demo_user_has_many_microposts"><span class="number">2.3.3</span> Пользователь <code>has_many</code> микросообщений</a></li>
<li class="subsection"><a href="a-demo-app#sec-inheritance_hierarchies"><span class="number">2.3.4</span> Иерархия наследования</a></li>
<li class="subsection"><a href="a-demo-app#sec-deploying_the_demo_app"><span class="number">2.3.5</span> Развертывание демонстрационного приложения</a></li></ol></li>
<li class="section"><a href="a-demo-app#sec-2_4"><span class="number">2.4</span> Заключение</a></li></ol></li>
<li class="chapter"><a href="static-pages#top"><span class="number">Глава 3</span> В основном статические страницы</a></li>
<li><ol><li class="section"><a href="static-pages#sec-static_pages"><span class="number">3.1</span> Статические страницы</a></li>
<li class="section"><a href="static-pages#sec-first_tests"><span class="number">3.2</span> Наши первые тесты</a></li>
<li><ol><li class="subsection"><a href="static-pages#sec-TDD"><span class="number">3.2.1</span> Разработка через тестирование</a></li>
<li class="subsection"><a href="static-pages#sec-adding_a_page"><span class="number">3.2.2</span> Добавление страницы</a></li>
<li><ol><li class="subsubsection"><a href="static-pages#sec-red" style="color: red;">Красный</a></li>
<li class="subsubsection"><a href="static-pages#sec-green" style="color: green;">Зеленый</a></li>
<li class="subsubsection"><a href="static-pages#sec-refactor">Refactor (реорганизация)</a></li></ol></li></ol></li>
<li class="section"><a href="static-pages#sec-slightly_dynamic_pages"><span class="number">3.3</span> Немного динамические страницы</a></li>
<li><ol><li class="subsection"><a href="static-pages#sec-testing_a_title_change"><span class="number">3.3.1</span> Тестирование изменения заголовка</a></li>
<li class="subsection"><a href="static-pages#sec-passing_title_tests"><span class="number">3.3.2</span> Прохождение тестов заголовка</a></li>
<li class="subsection"><a href="static-pages#sec-embedded_ruby"><span class="number">3.3.3</span> Встроенный Ruby</a></li>
<li class="subsection"><a href="static-pages#sec-layouts"><span class="number">3.3.4</span> Устранение дублирования шаблонами</a></li></ol></li>
<li class="section"><a href="static-pages#sec-static_pages_conclusion"><span class="number">3.4</span> Заключение</a></li>
<li class="section"><a href="static-pages#sec-static_pages_exercises"><span class="number">3.5</span> Упражнения</a></li>
<li class="section"><a href="static-pages#sec-advanced_setup"><span class="number">3.6</span> Продвинутые настройки</a></li>
<li><ol><li class="subsection"><a href="static-pages#sec-eliminating_bundle_exec"><span class="number">3.6.1</span> Избавляемся от <tt>bundle exec</tt></a></li>
<li><ol><li class="subsubsection"><a href="static-pages#sec-rvm_bundler_integration">RVM Bundler интеграция</a></li>
<li class="subsubsection"><a href="static-pages#sec-binstubs">binstubs</a></li></ol></li>
<li class="subsection"><a href="static-pages#sec-guard"><span class="number">3.6.2</span> Автоматизируем тесты с Guard</a></li>
<li class="subsection"><a href="static-pages#sec-spork"><span class="number">3.6.3</span> Ускоряем тесты с помощью Spork</a></li>
<li><ol><li class="subsubsection"><a href="static-pages#sec-spork_and_guard">Guard и Spork</a></li></ol></li>
<li class="subsection"><a href="static-pages#sec-tests_inside_sublime_text"><span class="number">3.6.4</span> Запускаем тесты внутри Sublime Text</a></li></ol></li></ol></li>
<li class="chapter"><a href="rails-flavored-ruby#top"><span class="number">Глава 4</span> Rails-приправленный Ruby</a></li>
<li><ol><li class="section"><a href="rails-flavored-ruby#sec-motivation"><span class="number">4.1</span> Причины</a></li>
<li class="section"><a href="rails-flavored-ruby#sec-strings_and_methods"><span class="number">4.2</span> Строки и методы</a></li>
<li><ol><li class="subsection"><a href="rails-flavored-ruby#sec-comments"><span class="number">4.2.1</span> Комментарии</a></li>
<li class="subsection"><a href="rails-flavored-ruby#sec-strings"><span class="number">4.2.2</span> Строки</a></li>
<li><ol><li class="subsubsection"><a href="rails-flavored-ruby#sec-printing">Вывод на экран</a></li>
<li class="subsubsection"><a href="rails-flavored-ruby#sec-single_quoted_strings">Строки в одинарных кавычках</a></li></ol></li>
<li class="subsection"><a href="rails-flavored-ruby#sec-objects_and_message_passing"><span class="number">4.2.3</span> Объекты и передача сообщений</a></li>
<li class="subsection"><a href="rails-flavored-ruby#sec-method_definitions"><span class="number">4.2.4</span> Определение методов</a></li>
<li class="subsection"><a href="rails-flavored-ruby#sec-back_to_the_title_helper"><span class="number">4.2.5</span> Возвращение к <code>title</code> хелперу</a></li></ol></li>
<li class="section"><a href="rails-flavored-ruby#sec-other_data_structures"><span class="number">4.3</span> Другие структуры данных</a></li>
<li><ol><li class="subsection"><a href="rails-flavored-ruby#sec-arrays_and_ranges"><span class="number">4.3.1</span> Массивы и диапазоны</a></li>
<li class="subsection"><a href="rails-flavored-ruby#sec-blocks"><span class="number">4.3.2</span> Блоки</a></li>
<li class="subsection"><a href="rails-flavored-ruby#sec-hashes_and_symbols"><span class="number">4.3.3</span> Хэши и символы</a></li>
<li class="subsection"><a href="rails-flavored-ruby#sec-css_revisited"><span class="number">4.3.4</span> Вновь CSS</a></li></ol></li>
<li class="section"><a href="rails-flavored-ruby#sec-ruby_classes"><span class="number">4.4</span> Ruby классы</a></li>
<li><ol><li class="subsection"><a href="rails-flavored-ruby#sec-constructors"><span class="number">4.4.1</span> Конструкторы</a></li>
<li class="subsection"><a href="rails-flavored-ruby#sec-a_class_of_our_own"><span class="number">4.4.2</span> Наследование классов</a></li>
<li class="subsection"><a href="rails-flavored-ruby#sec-modifying_built_in_classes"><span class="number">4.4.3</span> Изменение встроенных классов</a></li>
<li class="subsection"><a href="rails-flavored-ruby#sec-a_controller_class"><span class="number">4.4.4</span> Класс контроллер</a></li>
<li class="subsection"><a href="rails-flavored-ruby#sec-a_user_class"><span class="number">4.4.5</span> Класс User</a></li></ol></li>
<li class="section"><a href="rails-flavored-ruby#sec-conclusion"><span class="number">4.5</span> Заключение</a></li>
<li class="section"><a href="rails-flavored-ruby#sec-exercises"><span class="number">4.6</span> Упражнения</a></li></ol></li>
<li class="chapter"><a href="filling-in-the-layout#top"><span class="number">Глава 5</span> Заполнение шаблона</a></li>
<li><ol><li class="section"><a href="filling-in-the-layout#sec-structure"><span class="number">5.1</span> Добавление некоторых структур</a></li>
<li><ol><li class="subsection"><a href="filling-in-the-layout#sec-adding_to_the_layout"><span class="number">5.1.1</span> Навигация по сайту</a></li>
<li class="subsection"><a href="filling-in-the-layout#sec-custom_css"><span class="number">5.1.2</span> Bootstrap и кастомные CSS</a></li>
<li class="subsection"><a href="filling-in-the-layout#sec-partials"><span class="number">5.1.3</span> Частичные шаблоны (partials)</a></li></ol></li>
<li class="section"><a href="filling-in-the-layout#sec-sass_and_the_asset_pipeline"><span class="number">5.2</span> Sass и файлопровод (asset pipeline)</a></li>
<li><ol><li class="subsection"><a href="filling-in-the-layout#sec-the_asset_pipeline"><span class="number">5.2.1</span> Файлопровод</a></li>
<li><ol><li class="subsubsection"><a href="filling-in-the-layout#sec-5_2_1_1">Директории ассетов</a></li>
<li class="subsubsection"><a href="filling-in-the-layout#sec-5_2_1_2">Файлы-манифесты</a></li>
<li class="subsubsection"><a href="filling-in-the-layout#sec-5_2_1_3">Препроцессоры</a></li>
<li class="subsubsection"><a href="filling-in-the-layout#sec-5_2_1_4">Производительность в продакшен</a></li></ol></li>
<li class="subsection"><a href="filling-in-the-layout#sec-sass"><span class="number">5.2.2</span> Синтаксически обалденные таблицы стилей</a></li>
<li><ol><li class="subsubsection"><a href="filling-in-the-layout#sec-5_2_2_1">Вложение</a></li>
<li class="subsubsection"><a href="filling-in-the-layout#sec-5_2_2_2">Переменные</a></li></ol></li></ol></li>
<li class="section"><a href="filling-in-the-layout#sec-layout_links"><span class="number">5.3</span> Ссылки в шаблоне</a></li>
<li><ol><li class="subsection"><a href="filling-in-the-layout#sec-route_tests"><span class="number">5.3.1</span> Тестирование маршрутов</a></li>
<li class="subsection"><a href="filling-in-the-layout#sec-rails_routes"><span class="number">5.3.2</span> Rails маршруты</a></li>
<li class="subsection"><a href="filling-in-the-layout#sec-named_routes"><span class="number">5.3.3</span> Именованные маршруты</a></li>
<li class="subsection"><a href="filling-in-the-layout#sec-pretty_rspec"><span class="number">5.3.4</span> Приятный RSpec</a></li></ol></li>
<li class="section"><a href="filling-in-the-layout#sec-user_signup"><span class="number">5.4</span> Регистрация пользователей: Первый шаг</a></li>
<li><ol><li class="subsection"><a href="filling-in-the-layout#sec-users_controller"><span class="number">5.4.1</span> Контроллер Users</a></li>
<li class="subsection"><a href="filling-in-the-layout#sec-signup_url"><span class="number">5.4.2</span> URL для регистрации</a></li></ol></li>
<li class="section"><a href="filling-in-the-layout#sec-layout_conclusion"><span class="number">5.5</span> Заключение</a></li>
<li class="section"><a href="filling-in-the-layout#sec-layout_exercises"><span class="number">5.6</span> Упражнения</a></li></ol></li>
<li class="chapter"><a href="modeling-users#top"><span class="number">Глава 6</span> Моделирование пользователей</a></li>
<li><ol><li class="section"><a href="modeling-users#sec-user_model"><span class="number">6.1</span> Модель User</a></li>
<li><ol><li class="subsection"><a href="modeling-users#sec-database_migrations"><span class="number">6.1.1</span> Миграции базы данных</a></li>
<li class="subsection"><a href="modeling-users#sec-the_model_file"><span class="number">6.1.2</span> Файл модели</a></li>
<li class="subsection"><a href="modeling-users#sec-creating_user_objects"><span class="number">6.1.3</span> Создание объектов user</a></li>
<li class="subsection"><a href="modeling-users#sec-finding_user_objects"><span class="number">6.1.4</span> Поиск объектов user</a></li>
<li class="subsection"><a href="modeling-users#sec-updating_user_objects"><span class="number">6.1.5</span> Обновление объектов user</a></li></ol></li>
<li class="section"><a href="modeling-users#sec-user_validations"><span class="number">6.2</span> Валидации User</a></li>
<li><ol><li class="subsection"><a href="modeling-users#sec-initial_user_tests"><span class="number">6.2.1</span> Начальные тесты для пользователей</a></li>
<li class="subsection"><a href="modeling-users#sec-presence_validation"><span class="number">6.2.2</span> Валидация наличия</a></li>
<li class="subsection"><a href="modeling-users#sec-length_validation"><span class="number">6.2.3</span> Валидация длины</a></li>
<li class="subsection"><a href="modeling-users#sec-format_validation"><span class="number">6.2.4</span> Валидация формата</a></li>
<li class="subsection"><a href="modeling-users#sec-uniqueness_validation"><span class="number">6.2.5</span> Валидация уникальности</a></li>
<li><ol><li class="subsubsection"><a href="modeling-users#sec-the_caveat">Предостережение уникальности</a></li></ol></li></ol></li>
<li class="section"><a href="modeling-users#sec-adding_a_secure_password"><span class="number">6.3</span> Добавление безопасного пароля</a></li>
<li><ol><li class="subsection"><a href="modeling-users#sec-an_encrypted_password"><span class="number">6.3.1</span> Зашифрованный пароль</a></li>
<li class="subsection"><a href="modeling-users#sec-password_and_confirmation"><span class="number">6.3.2</span> Пароль и подтверждение</a></li>
<li class="subsection"><a href="modeling-users#sec-user_authentication"><span class="number">6.3.3</span> Аутентификация пользователя</a></li>
<li class="subsection"><a href="modeling-users#sec-has_secure_password"><span class="number">6.3.4</span> У пользователя есть безопасный пароль</a></li>
<li class="subsection"><a href="modeling-users#sec-creating_a_user"><span class="number">6.3.5</span> Создание пользователя</a></li></ol></li>
<li class="section"><a href="modeling-users#sec-6_4"><span class="number">6.4</span> Заключение</a></li>
<li class="section"><a href="modeling-users#sec-6_5"><span class="number">6.5</span> Упражнения</a></li></ol></li>
<li class="chapter"><a href="sign-up#top"><span class="number">Chapter 7</span> Регистрация</a></li>
<li><ol><li class="section"><a href="sign-up#sec-showing_users"><span class="number">7.1</span> Демонстрация пользователей</a></li>
<li><ol><li class="subsection"><a href="sign-up#sec-rails_environments"><span class="number">7.1.1</span> Отладка и окружения Rails</a></li>
<li class="subsection"><a href="sign-up#sec-a_users_resource"><span class="number">7.1.2</span> A Ресурс Users</a></li>
<li class="subsection"><a href="sign-up#sec-tests_with_factories"><span class="number">7.1.3</span> Тестирование страницы показывающей пользователя (с фабриками)</a></li>
<li class="subsection"><a href="sign-up#sec-a_gravatar_image"><span class="number">7.1.4</span> Изображение Gravatar и боковая панель</a></li></ol></li>
<li class="section"><a href="sign-up#sec-signup_form"><span class="number">7.2</span> Форма регистрации</a></li>
<li><ol><li class="subsection"><a href="sign-up#sec-tests_for_user_signup"><span class="number">7.2.1</span> Тесты для регистрации пользователя</a></li>
<li class="subsection"><a href="sign-up#sec-using_form_for"><span class="number">7.2.2</span> Применение <tt>form_for</tt></a></li>
<li class="subsection"><a href="sign-up#sec-the_form_html"><span class="number">7.2.3</span> HTML формы</a></li></ol></li>
<li class="section"><a href="sign-up#sec-signup_failure"><span class="number">7.3</span> Провальная регистрация</a></li>
<li><ol><li class="subsection"><a href="sign-up#sec-a_working_form"><span class="number">7.3.1</span> Рабочая форма</a></li>
<li class="subsection"><a href="sign-up#sec-strong_parameters"><span class="number">7.3.2</span> Строгие параметры</a></li>
<li class="subsection"><a href="sign-up#sec-signup_error_messages"><span class="number">7.3.3</span> Сообщения об ошибках при регистрации</a></li></ol></li>
<li class="section"><a href="sign-up#sec-signup_success"><span class="number">7.4</span> Успешная регистрация</a></li>
<li><ol><li class="subsection"><a href="sign-up#sec-the_finished_signup_form"><span class="number">7.4.1</span> Завершенная форма регистрации</a></li>
<li class="subsection"><a href="sign-up#sec-the_flash"><span class="number">7.4.2</span> Флэш</a></li>
<li class="subsection"><a href="sign-up#sec-the_first_signup"><span class="number">7.4.3</span> Первая регистрация</a></li>
<li class="subsection"><a href="sign-up#sec-deploying_to_production_with_ssl"><span class="number">7.4.4</span> Развертывание приложения на сервере с SSL</a></li></ol></li>
<li class="section"><a href="sign-up#sec-7_5"><span class="number">7.5</span> Заключение</a></li>
<li class="section"><a href="sign-up#sec-signup_exercises"><span class="number">7.6</span> Упражнения</a></li></ol></li>
<li class="chapter"><a href="sign-in-sign-out#top"><span class="number">Глава 8</span> Войти, выйти</a></li>
<li><ol><li class="section"><a href="sign-in-sign-out#sec-signin_failure"><span class="number">8.1</span> Сессии и провальный вход</a></li>
<li><ol><li class="subsection"><a href="sign-in-sign-out#sec-sessions_controller"><span class="number">8.1.1</span> Sessions контроллер</a></li>
<li class="subsection"><a href="sign-in-sign-out#sec-signin_tests"><span class="number">8.1.2</span> Тестирование входа</a></li>
<li class="subsection"><a href="sign-in-sign-out#sec-signin_form"><span class="number">8.1.3</span> Форма для входа</a></li>
<li class="subsection"><a href="sign-in-sign-out#sec-reviewing_form_submission"><span class="number">8.1.4</span> Обзор отправки формы</a></li>
<li class="subsection"><a href="sign-in-sign-out#sec-rendering_with_a_flash_message"><span class="number">8.1.5</span> Рендеринг
с флэш сообщением</a></li></ol></li>
<li class="section"><a href="sign-in-sign-out#sec-signin_success"><span class="number">8.2</span> Успешный вход</a></li>
<li><ol><li class="subsection"><a href="sign-in-sign-out#sec-remember_me"><span class="number">8.2.1</span> Запомнить меня</a></li>
<li class="subsection"><a href="sign-in-sign-out#sec-a_working_sign_in_method"><span class="number">8.2.2</span> Рабочий метод <tt>sign_in</tt></a></li>
<li class="subsection"><a href="sign-in-sign-out#sec-current_user"><span class="number">8.2.3</span> Текущий пользователь</a></li>
<li class="subsection"><a href="sign-in-sign-out#sec-changing_the_layout_links"><span class="number">8.2.4</span> Изменение ссылок шаблона</a></li>
<li class="subsection"><a href="sign-in-sign-out#sec-signin_upon_signup"><span class="number">8.2.5</span> Вход после регистрации</a></li>
<li class="subsection"><a href="sign-in-sign-out#sec-signing_out"><span class="number">8.2.6</span> Выход</a></li></ol></li>
<li class="section"><a href="sign-in-sign-out#sec-cucumber"><span class="number">8.3</span> Введение в Cucumber (опционально)</a></li>
<li><ol><li class="subsection"><a href="sign-in-sign-out#sec-installation_and_setup"><span class="number">8.3.1</span> Установка и настройка</a></li>
<li class="subsection"><a href="sign-in-sign-out#sec-features_and_steps"><span class="number">8.3.2</span> Фичи и шаги</a></li>
<li class="subsection"><a href="sign-in-sign-out#sec-rspec_custom_matchers"><span class="number">8.3.3</span> Контрапункт: кастомные проверки RSpec</a></li></ol></li>
<li class="section"><a href="sign-in-sign-out#sec-8_4"><span class="number">8.4</span> Заключение</a></li>
<li class="section"><a href="sign-in-sign-out#sec-sign_in_out_exercises"><span class="number">8.5</span> Упражнения</a></li></ol></li>

<li class="chapter"><a href="updating-showing-and-deleting-users#top"><span class="number">Глава 9</span> Обновление, демонстрация и удаление пользователей</a></li>
<li><ol><li class="section"><a href="updating-showing-and-deleting-users#sec-updating_users"><span class="number">9.1</span> Обновление пользователей</a></li>
<li><ol><li class="subsection"><a href="updating-showing-and-deleting-users#sec-edit_form"><span class="number">9.1.1</span> Форма для редактирования</a></li>
<li class="subsection"><a href="updating-showing-and-deleting-users#sec-unsuccessful_edits"><span class="number">9.1.2</span> Провальное редактирование</a></li>
<li class="subsection"><a href="updating-showing-and-deleting-users#sec-successful_edits"><span class="number">9.1.3</span> Успешное редактирование</a></li></ol></li>
<li class="section"><a href="updating-showing-and-deleting-users#sec-authorization"><span class="number">9.2</span> Авторизация</a></li>
<li><ol><li class="subsection"><a href="updating-showing-and-deleting-users#sec-requiring_signed_in_users"><span class="number">9.2.1</span> Требование входа пользователей</a></li>
<li class="subsection"><a href="updating-showing-and-deleting-users#sec-requiring_the_right_user"><span class="number">9.2.2</span> Требование правильного пользователя</a></li>
<li class="subsection"><a href="updating-showing-and-deleting-users#sec-friendly_forwarding"><span class="number">9.2.3</span> Дружелюбная переадресация</a></li></ol></li>
<li class="section"><a href="updating-showing-and-deleting-users#sec-showing_all_users"><span class="number">9.3</span> Отображение всех пользователей</a></li>
<li><ol><li class="subsection"><a href="updating-showing-and-deleting-users#sec-user_index"><span class="number">9.3.1</span> Список пользователей</a></li>
<li class="subsection"><a href="updating-showing-and-deleting-users#sec-sample_users"><span class="number">9.3.2</span> Образцы пользователей</a></li>
<li class="subsection"><a href="updating-showing-and-deleting-users#sec-pagination"><span class="number">9.3.3</span> Пагинация</a></li>
<li class="subsection"><a href="updating-showing-and-deleting-users#sec-partial_refactoring"><span class="number">9.3.4</span> Частичный рефакторинг</a></li></ol></li>
<li class="section"><a href="updating-showing-and-deleting-users#sec-destroying_users"><span class="number">9.4</span> Уничтожение пользователей</a></li>
<li><ol><li class="subsection"><a href="updating-showing-and-deleting-users#sec-administrative_users"><span class="number">9.4.1</span> Административные пользователи</a></li>
<li><ol><li class="subsubsection"><a href="updating-showing-and-deleting-users#sec-revisiting_strong_parameters">Возвращение к строгим параметрам</a></li></ol></li>
<li class="subsection"><a href="updating-showing-and-deleting-users#sec-the_destroy_action"><span class="number">9.4.2</span> <tt>Destroy</tt> действие</a></li></ol></li>
<li class="section"><a href="updating-showing-and-deleting-users#sec-updating_and_deleting_users_conclusion"><span class="number">9.5</span> Заключение</a></li>
<li class="section"><a href="updating-showing-and-deleting-users#sec-updating_deleting_exercises"><span class="number">9.6</span> Упражнения</a></li></ol></li>

<li class="chapter"><a href="user-microposts#top"><span class="number">Глава 10</span> Микросообщения пользователей</a></li>
<li><ol><li class="section"><a href="user-microposts#sec-a_micropost_model"><span class="number">10.1</span> Модель Micropost</a></li>
<li><ol><li class="subsection"><a href="user-microposts#sec-the_basic_model"><span class="number">10.1.1</span> Базовая модель</a></li>
<li class="subsection"><a href="user-microposts#sec-first_micropost_validation"><span class="number">10.1.2</span> Первая валидация</a></li>
<li class="subsection"><a href="user-microposts#sec-user_micropost_associations"><span class="number">10.1.3</span> Ассоциации Пользователь/Микросообщения</a></li>
<li class="subsection"><a href="user-microposts#sec-ordering_and_dependency"><span class="number">10.1.4</span> Улучшение микросообщений</a></li>
<li><ol><li class="subsubsection"><a href="user-microposts#sec-default_scope">Дефолтное пространство (scope)</a></li>
<li class="subsubsection"><a href="user-microposts#sec-dependent_destroy">Dependent: destroy</a></li></ol></li>
<li class="subsection"><a href="user-microposts#sec-micropost_validations"><span class="number">10.1.5</span> Валидации контента</a></li></ol></li>
<li class="section"><a href="user-microposts#sec-showing_microposts"><span class="number">10.2</span> Просмотр микросообщений</a></li>
<li><ol><li class="subsection"><a href="user-microposts#sec-augmenting_the_user_show_page"><span class="number">10.2.1</span> Дополнение страницы показывающей пользователя</a></li>
<li class="subsection"><a href="user-microposts#sec-sample_microposts"><span class="number">10.2.2</span> Образцы микросообщений</a></li></ol></li>
<li class="section"><a href="user-microposts#sec-manipulating_microposts"><span class="number">10.3</span> Манипулирование микросообщениями</a></li>
<li><ol><li class="subsection"><a href="user-microposts#sec-access_control"><span class="number">10.3.1</span> Контроль доступа</a></li>
<li class="subsection"><a href="user-microposts#sec-creating_microposts"><span class="number">10.3.2</span> Создание микросообщений</a></li>
<li class="subsection"><a href="user-microposts#sec-a_proto_feed"><span class="number">10.3.3</span> Предварительная реализация потока сообщений</a></li>
<li class="subsection"><a href="user-microposts#sec-destroying_microposts"><span class="number">10.3.4</span> Уничтожение микросообщений</a></li></ol></li>
<li class="section"><a href="user-microposts#sec-10_4"><span class="number">10.4</span> Заключение</a></li>
<li class="section"><a href="user-microposts#sec-micropost_exercises"><span class="number">10.5</span> Упражнения</a></li></ol></li>
<li class="chapter"><a href="following-users#top"><span class="number">Глава 11</span> Слежение за сообщениями пользователей</a></li>
<li><ol><li class="section"><a href="following-users#sec-the_relationship_model"><span class="number">11.1</span> Модель Relationship</a></li>
<li><ol><li class="subsection"><a href="following-users#sec-a_problem_with_the_data_model"><span class="number">11.1.1</span> Проблема с моделью данных (и ее решение)</a></li>
<li class="subsection"><a href="following-users#sec-relationship_user_associations"><span class="number">11.1.2</span> Ассоциации пользователь/взаимоотношение</a></li>
<li class="subsection"><a href="following-users#sec-relationship_validations"><span class="number">11.1.3</span> Валидации</a></li>
<li class="subsection"><a href="following-users#sec-following"><span class="number">11.1.4</span> Читаемые пользователи</a></li>
<li class="subsection"><a href="following-users#sec-followers"><span class="number">11.1.5</span> Читатели пользователя</a></li></ol></li>
<li class="section"><a href="following-users#sec-a_web_interface_for_following_and_followers"><span class="number">11.2</span> Веб-интерфейс для читаемых пользователей</a></li>
<li><ol><li class="subsection"><a href="following-users#sec-sample_following_data"><span class="number">11.2.1</span> Образцы данных</a></li>
<li class="subsection"><a href="following-users#sec-stats_and_a_follow_form"><span class="number">11.2.2</span> Статистика и форма для слежения за сообщениями пользователя</a></li>
<li class="subsection"><a href="following-users#sec-following_and_followers_pages"><span class="number">11.2.3</span> Страницы с читаемыми и читателями</a></li>
<li class="subsection"><a href="following-users#sec-a_working_follow_button_the_standard_way"><span class="number">11.2.4</span> Стандартный способ реализации кнопки "читать" (follow)</a></li>
<li class="subsection"><a href="following-users#sec-a_working_follow_button_with_ajax"><span class="number">11.2.5</span> Реализация кнопки "читать" (follow) с Ajax</a></li></ol></li>
<li class="section"><a href="following-users#sec-the_status_feed"><span class="number">11.3</span> Поток сообщений</a></li>
<li><ol><li class="subsection"><a href="following-users#sec-motivation_and_strategy"><span class="number">11.3.1</span> Мотивация и стратегия</a></li>
<li class="subsection"><a href="following-users#sec-a_first_feed_implementation"><span class="number">11.3.2</span> Первая реализация потока сообщений</a></li>
<li class="subsection"><a href="following-users#sec-scopes_subselects_and_a_lambda"><span class="number">11.3.3</span> Подзапросы</a></li>
<li class="subsection"><a href="following-users#sec-the_new_status_feed"><span class="number">11.3.4</span> Новый поток сообщений</a></li></ol></li>
<li class="section"><a href="following-users#sec-following_conclusion"><span class="number">11.4</span> Заключение</a></li>
<li><ol><li class="subsection"><a href="following-users#sec-extensions_to_the_sample_application"><span class="number">11.4.1</span> Расширения к примеру приложения</a></li>
<li><ol><li class="subsubsection"><a href="following-users#sec-replies">Реплики</a></li>
<li class="subsubsection"><a href="following-users#sec-messaging">Обмен сообщениями</a></li>
<li class="subsubsection"><a href="following-users#sec-follower_notifications">Уведомления о новых читателях</a></li>
<li class="subsubsection"><a href="following-users#sec-password_reminders">Напоминание пароля</a></li>
<li class="subsubsection"><a href="following-users#sec-signup_confirmation">Подтверждение регистрации</a></li>
<li class="subsubsection"><a href="following-users#sec-rss_feed">RSS канал</a></li>
<li class="subsubsection"><a href="following-users#sec-rest_api">REST API</a></li>
<li class="subsubsection"><a href="following-users#sec-search">Поиск</a></li></ol></li>
<li class="subsection"><a href="following-users#sec-guide_to_further_resources"><span class="number">11.4.2</span> Руководство по дальнейшим ресурсам</a></li></ol></li>
<li class="section"><a href="following-users#sec-following_exercises"><span class="number">11.5</span> Упражнения</a></li></ol></li></ol></div>

      <div id="main_content"></div>


<p> <span class="preamble">
 <span id="foreword">
<strong> Предисловие</strong> <br />
 </span>
 </span></p>

<p>Моя компания (CD Baby) была одной из первых громко перешедших на Ruby on Rails, а затем еще громче вернувшейся обратно на PHP (Google расскажет вам об этой драме). Эту книгу, написанную Майклом Хартлом так высоко рекомендовали, что я должен был попробовать её, и <em>Ruby on Rails Tutorial</em> это всё, что я использовал, чтобы вернуться к Rails.</p>

<p>Хотя я уже прошел через много книг по Rails, это одна из немногих, что, наконец, зацепила меня. Было много написано книг типа &laquo;Путь Rails&raquo; — после которых я чувствовал себя неестественно, но после этой книги я наконец почувствовал себя естественно. Это также единственная книга по Rails, которая соблюдает методику &laquo;разработка через тестирование&raquo; на всем своем протяжении, этот подход строго рекомендуется специалистами, но он никогда не был так чётко продемонстрирован ранее. Наконец, Git, GitHub и Heroku присутствуют в демо-примерах, автор действительно дает вам почувствовать, что он хотел сделать реальный проект. Учебный код примеров не изолирован.</p>

<p>Линейное повествование — отличный формат. Лично я прошел Rails Tutorial в течении трёх долгих дней, делая все примеры и задачи в конце каждой главы. Делайте всё от начала до конца, не прыгая, и вы получите максимальную пользу.</p>

<p>Наслаждайтесь!</p>

<p><a href="http://sivers.org/">Derek Sivers</a> (<a href="http://sivers.org/">sivers.org</a>) <br />
<em>Основатель </em> <a href="http://www.cdbaby.com/"><em>CD Baby</em></a> <br /></p>

<p> <span class="preamble">
<strong> Благодарности</strong> <br />
 </span></p>

<p><em>Ruby On Rails Учебник</em> во многом обязан моей предыдущей книге по Rails, <em>RailsSpace</em> и, следовательно, моему соавтору <a  href="http://aure.com/">Aurelius Prochazka</a>. Я хотел бы поблагодарить Aure как за работу, которую он проделал над прошлой книгой, так и за поддержку этой. Я также хотел бы поблагодарить Debra Williams Cauley, редактора обеих книг <em>RailsSpace</em> и <em>Rails Tutorial</em>; до тех пор, пока она не прекратит брать меня на бейсбол, я буду продолжать писать книги для нее.</p>

<p>Я хотел бы поблагодарить огромное количество Рубистов учивших и вдохновлявших меня на протяжении многих лет: David Heinemeier Hansson, Yehuda Katz, Carl Lerche, Jeremy Kemper, Xavier Noria, Ryan Bates, Geoffrey Grosenbach, Peter Cooper, Matt Aimonetti, Gregg Pollack, Wayne&nbsp;E. Seguin, Amy Hoy, Dave Chelimsky, Pat Maddox, Tom Preston-Werner, Chris Wanstrath, Chad Fowler, Josh Susser, Obie Fernandez, Ian McFarland, Steven Bristol, Pratik Naik, Sarah Mei, Sarah Allen, Wolfram Arnold, Alex Chaffee, Giles Bowkett, Evan Dorn, Long Nguyen, James Lindenbaum, Adam Wiggins, Tikhon Bernstam, Ron Evans, Wyatt Greene, Miles Forrest, хороших людей из Pivotal Labs, команду Heroku, thoughtbot ребят, и команду GitHub. Наконец, многих, многих читателей - слишком много чтобы перечислять их здесь - внёсших большое количество предложений по улучшению и сообщивших об ошибках во время написания этой книги, и я с благодарностью признаю их помощь в написании ее настолько хорошей, насколько это было возможно. <br /></p>

<p> <span class="preamble">
 <span id="author">
<strong> Об авторе</strong> <br />
 </span>
 </span></p>

<p><a href="http://michaelhartl.com/">Майкл Хартл</a> &#8211; автор <a href="http://ruby.railstutorial.org/"><em>Ruby on Rails Tutorial</em></a>, лидирующего введения в веб разработку на <a href="http://rubyonrails.org/">Ruby on Rails</a>. Его предыдущий опыт включает в себя написание и разработку <em>RailsSpace</em> - чрезвычайно устаревшего учебника по Rails и разработку Insoshi - некогда популярной, а ныне устаревшей платформы для социальных сетей написанной на Ruby on Rails. В 2011, Майкл получил <a href="http://rubyheroes.com/heroes">Ruby Hero Award</a> за его вклад в Ruby сообщество. Он закончил <a href="http://college.harvard.edu/">Harvard College</a>, имеет <a href="http://resolver.caltech.edu/CaltechETD:etd-05222003-161626">степень Кандидата Физических Наук</a> присвоенную в <a href="http://www.caltech.edu/">Caltech</a> и является выпускником предпринимательских курсов <a href="http://ycombinator.com/">Y&nbsp;Combinator</a>. <br /></p>

<p> <span id="license" class="preamble">
<strong> Копирайт и лицензия</strong> <br />
 </span></p>

<p><em>Ruby on Rails Tutorial: Learn Web Development with Rails</em>. Copyright &copy; 2012 by Michael Hartl. Весь исходный код в <em>Ruby on Rails Tutorial</em> доступен под <a href="http://opensource.org/licenses/MIT">MIT License</a> и <a href="http://people.freebsd.org/~phk/">Beerware License</a>.</p>

<div class="code"><div class="highlight">

<pre>Лицензия MIT

Copyright (c) 2013 Michael Hartl

Данная лицензия разрешает лицам, получившим копию данного программного
обеспечения и сопутствующей документации (в дальнейшем именуемыми
«Программное Обеспечение»), безвозмездно использовать Программное
Обеспечение без ограничений, включая неограниченное право на использование,
копирование, изменение, добавление, публикацию, распространение,
сублицензирование и/или продажу копий Программного Обеспечения, также
как и лицам, которым предоставляется данное Программное Обеспечение,
при соблюдении следующих условий:

Указанное выше уведомление об авторском праве и данные условия должны быть
включены во все копии или значимые части данного Программного Обеспечения.

ДАННОЕ ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ «КАК ЕСТЬ», БЕЗ КАКИХ-ЛИБО
ГАРАНТИЙ, ЯВНО ВЫРАЖЕННЫХ ИЛИ ПОДРАЗУМЕВАЕМЫХ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ
ГАРАНТИЯМИ ТОВАРНОЙ ПРИГОДНОСТИ, СООТВЕТСТВИЯ ПО ЕГО КОНКРЕТНОМУ НАЗНАЧЕНИЮ И
ОТСУТСТВИЯ НАРУШЕНИЙ ПРАВ. НИ В КАКОМ СЛУЧАЕ АВТОРЫ ИЛИ ПРАВООБЛАДАТЕЛИ НЕ
НЕСУТ ОТВЕТСТВЕННОСТИ ПО ИСКАМ О ВОЗМЕЩЕНИИ УЩЕРБА, УБЫТКОВ ИЛИ ДРУГИХ
ТРЕБОВАНИЙ ПО ДЕЙСТВУЮЩИМ КОНТРАКТАМ, ДЕЛИКТАМ ИЛИ ИНОМУ, ВОЗНИКШИМ ИЗ,
ИМЕЮЩИМ ПРИЧИНОЙ ИЛИ СВЯЗАННЫМ С ПРОГРАММНЫМ ОБЕСПЕЧЕНИЕМ ИЛИ ИСПОЛЬЗОВАНИЕМ
ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ ИЛИ ИНЫМИ ДЕЙСТВИЯМИ С ПРОГРАММНЫМ ОБЕСПЕЧЕНИЕМ.
</pre></div>
</div>


<div class="code"><div class="highlight"><pre>/*
 * ----------------------------------------------------------------------------
 * &quot;ПИВНАЯ ЛИЦЕНЗИЯ&quot; (Ревизия 42):
 * Весь код написан Майклом Хартлом. До тех пор пока вы осознаете это,
 * вы можете делать с ним все что захотите. Если мы когда нибудь
 * встретимся, и если это того стоило, вы можете купить мне
 * пиво в ответ.
 * ----------------------------------------------------------------------------
 */
</pre></div>
</div>

      <div id="top"></div>


<h1 class="chapter"><a id="sec-11" href="following-users#top" class="heading"><span class="number">Глава 11</span> Слежение за сообщениями  пользователей</a></h1>


<p>В этой главе мы завершим ядро примера приложения, добавив социальный слой, что позволит пользователям читать (и не читать) сообщения других пользователей <sup class="footnote" id="fnref-11_15"><a href="#fn-11_15">17</a></sup>, в результате чего на главной странице каждого пользователя будет  отображаться список микросообщений тех пользователей, сообщения которых он читает. Мы также сделаем представления для отображения  читающих и читаемых пользователей. Мы узнаем, как смоделировать взаимоотношения между пользователями в <a class="ref" href="following-users#sec-the_relationship_model">Разделе&nbsp;11.1</a>, а затем сделаем веб-интерфейс в <a class="ref" href="following-users#sec-a_web_interface_for_following_and_followers">Разделе&nbsp;11.2</a> (включая введение в Ajax). Наконец, мы закончим, разработав полнофункциональный поток сообщений в <a class="ref" href="following-users#sec-the_status_feed">Разделе&nbsp;11.3</a>.</p>

<p>Эта последняя глава содержит несколько из наиболее сложных материалов учебника, в том числе, сложные модели данных и несколько Ruby / SQL хитростей для создания потока сообщений. С помощью этих примеров вы увидите как Rails может обрабатывать даже весьма сложные модели данных, что должно вам пригодиться, так как вы двигаетесь к разработке собственных приложений с их собственными требованиями. Чтобы помочь с переходом от учебника к самостоятельной разработке, <a class="ref" href="following-users#sec-following_conclusion">Раздел&nbsp;11.4</a> содержит рекомендуемые расширения к ядру примера приложения, а также ссылки на более продвинутые ресурсы.</p>

<p>Как обычно, Git пользователи должны создать новую тему ветки:</p>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> git checkout -b following-users
</pre></div>
</div>


<p>Так как материал этой главы особенно сложен, прежде чем писать код, мы <a href='http://ru.wiktionary.org/wiki/улучить'>улучим</a> момент и сделаем небольшой обзор интерфейса. Как и в предыдущих главах, на этом раннем этапе мы будем представлять страницы используя наброски.<sup class="footnote" id="fnref-11_1"><a href="#fn-11_1">1</a></sup>  Полная последовательность страниц работает следующим образом: пользователь, (John Calvin) начинает на странице своего профиля (<a class="ref" href="following-users#fig-page_flow_profile_mockup">Рис.&nbsp;11.1</a>) и переходит на страницу со списком пользователей (<a class="ref" href="following-users#fig-page_flow_user_index_mockup">Рис.&nbsp;11.2</a>) для того, чтобы выбрать пользователя, сообщения которого он будет читать. Calvin переходит на страницу профиля выбранного пользователя, Thomas-а Hobbes-а (<a class="ref" href="following-users#fig-page_flow_other_profile_follow_button_mockup">Рис.&nbsp;11.3</a>), кликает по кнопке &ldquo;Follow&rdquo;, чтобы читать сообщения этого пользователя. Это изменяет кнопку &ldquo;Follow&rdquo; на &ldquo;Unfollow&rdquo;, и увеличивает количество &ldquo;followers&rdquo; товарища Hobbes-а на единицу (<a class="ref" href="following-users#fig-page_flow_other_profile_unfollow_button_mockup">Рис.&nbsp;11.4</a>). Вернувшись на свою главную страницу, Calvin теперь видит увеличившееся количество &ldquo;following&rdquo; и обнаруживает микросообщения Hobbes-а в своем потоке сообщений (<a class="ref" href="following-users#fig-page_flow_home_page_feed_mockup">Рис.&nbsp;11.5</a>). Остальная часть этой главы посвящена реализации этой последовательности.</p>

<div class="label" id="fig-page_flow_profile_mockup"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/page_flow_profile_mockup_bootstrap.png" alt="page_flow_profile_mockup_bootstrap" /></span></div><div class="caption"><span class="header">Рисунок 11.1: </span><span class="description">Профиль текущего пользователя.&nbsp;<a href="http://railstutorial.org/images/figures/page_flow_profile_mockup_bootstrap-full.png">(полный размер)</a></span></div></div>




<div class="label" id="fig-page_flow_user_index_mockup"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/page_flow_user_index_mockup_bootstrap.png" alt="page_flow_user_index_mockup_bootstrap" /></span></div><div class="caption"><span class="header">Рисунок 11.2: </span><span class="description">Поиск пользователя для чтения его сообщений.&nbsp;<a href="http://railstutorial.org/images/figures/page_flow_user_index_mockup_bootstrap-full.png">(полный размер)</a></span></div></div>




<div class="label" id="fig-page_flow_other_profile_follow_button_mockup"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/page_flow_other_profile_follow_button_mockup_bootstrap.png" alt="page_flow_other_profile_follow_button_mockup_bootstrap" /></span></div><div class="caption"><span class="header">Рисунок 11.3: </span><span class="description">Профиль другого пользователя с &ldquo;Follow&rdquo; кнопкой.&nbsp;<a href="http://railstutorial.org/images/figures/page_flow_other_profile_follow_button_mockup_bootstrap-full.png">(полный размер)</a></span></div></div>




<div class="label" id="fig-page_flow_other_profile_unfollow_button_mockup"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/page_flow_other_profile_unfollow_button_mockup_bootstrap.png" alt="page_flow_other_profile_unfollow_button_mockup_bootstrap" /></span></div><div class="caption"><span class="header">Рисунок 11.4: </span><span class="description">Профиля с &ldquo;Unfollow&rdquo; кнопкой и увеличившимся количеством читателей.&nbsp;<a href="http://railstutorial.org/images/figures/page_flow_other_profile_unfollow_button_mockup_bootstrap-full.png">(полный размер)</a></span></div></div>




<div class="label" id="fig-page_flow_home_page_feed_mockup"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/page_flow_home_page_feed_mockup_bootstrap.png" alt="page_flow_home_page_feed_mockup_bootstrap" /></span></div><div class="caption"><span class="header">Рисунок 11.5: </span><span class="description">Главная страница с лентой сообщений и увеличившимся количеством читаемых пользователей.&nbsp;<a href="http://railstutorial.org/images/figures/page_flow_home_page_feed_mockup_bootstrap-full.png">(полный размер)</a></span></div></div>




<div class="label" id="sec-the_relationship_model"></div>


<h2><a id="sec-11_1" href="following-users#sec-the_relationship_model" class="heading"><span class="number">11.1</span> Модель Relationship</a></h2>


<p>Наш первый шаг в реализации слежения за сообщениями пользователей, заключается в построении модели данных, которая не так проста, как кажется.  Na&iuml;vely, кажется, что <code>has_many</code> отношение должно сработать: пользователь <code>has_many</code> (имеет_много) читаемых и <code>has_many</code> (имеет_много) читателей. Как мы увидим, в этом подходе есть проблема, и мы узнаем как ее исправить используя <code>has_many through</code>. Вполне вероятно, что многие идеи этого раздела окажутся непонятыми с первого раза, и может потребоваться некоторое время для осознания довольно сложной модели данных. Если вы обнаружите что запутались, попробуйте пройти главу до конца, а затем прочитать этот раздел еще раз, чтобы прояснить для себя некоторые вещи.</p>

<div class="label" id="sec-a_problem_with_the_data_model"></div>


<h3><a id="sec-11_1_1" href="following-users#sec-a_problem_with_the_data_model" class="heading"><span class="number">11.1.1</span> Проблема с моделью данных (и ее решение)</a></h3>


<p>В качестве первого шага на пути построения модели данных для слежения за сообщениями пользователей, давайте рассмотрим следующий типичный случай. Возьмем, в качестве примера, пользователя, который следит за сообщениями второго пользователя: мы могли бы сказать, что, например, Кальвин читает сообщения Гоббса, и Гоббс читается Кальвином, таким образом, Кальвин является <em>читателем</em>, а Гоббс является <em>читаемым</em>. При использовании дефолтной Rails&rsquo; плюрализации, множество таких читаемых пользователей называлось бы <em>followers</em>, и <code>user.followers</code> был бы массивом таких пользователей. К сожалению, реверс не сработает: по умолчанию, множество всех читаемых пользователей называлось бы <em>followeds</em>, что является безграмотной неуклюжестью. Мы могли бы назвать их <em>following</em>, но это тоже сомнительная идея: в нормальном английском, &ldquo;following&rdquo; это множество людей, следящих за <em>вами</em>, т.e., ваши последователи &mdash; с точностью до наоборот от предполагаемого значения. Хотя мы будем использовать &ldquo;following&rdquo; в качестве метки, как в &ldquo;50 following, 75 followers&rdquo;, мы будем использовать &ldquo;followed users&rdquo; для самих пользователей, с соответствующим массивом <code>user.followed_users</code>.<sup class="footnote" id="fnref-11_2"><a href="#fn-11_2">2</a></sup></p>

<p>Это предполагает моделирование <em>читаемых</em> пользователей как на <a class="ref" href="following-users#fig-naive_user_has_many_following">Рис.&nbsp;11.6</a>, с <code>followed_users</code> таблицей и <code>has_many</code> ассоциацией. Поскольку <code>user.followed_users</code> должно быть массивом пользователей, каждая строка таблицы <code>followed_users</code> должна быть пользователем, идентифицируемым с помощью <code>followed_id</code>, совместно с <code>follower_id</code> для установления ассоциации.<sup class="footnote" id="fnref-11_3"><a href="#fn-11_3">3</a></sup> Кроме того, так как каждая строка является пользователем, мы должны были бы включить другие атрибуты пользователя, включая имя, пароль и т.д.</p>

<div class="label" id="fig-naive_user_has_many_following"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/naive_user_has_many_followed_users.png" alt="naive_user_has_many_followed_users" /></span></div><div class="caption"><span class="header">Рисунок 11.6: </span><span class="description">Наивная реализация слежения за сообщениями пользователя.</span></div></div>


<p>Проблема модели данных из <a class="ref" href="following-users#fig-naive_user_has_many_following">Рис.&nbsp;11.6</a> в том, что она ужасно избыточна: каждая строка содержит не только id каждого читаемого пользователя, но и всю остальную информацию, <em>уже</em> содержащуюся в таблице <code>users</code>. Еще хуже то, что для моделирования <em>читателей</em> пользователя нам потребуется отдельная <code>followers</code> таблица. Наконец, эта модель данных кошмарно неудобна в эксплуатации, так как каждый раз при изменении пользователем (скажем) своего имени, нам пришлось бы обновлять запись пользователя не только в <code>users</code> таблице, но также <em>каждую строку, содержащую этого пользователя</em> в обоих <code>followed_users</code> и <code>followers</code> таблицах.</p>

<p>Проблема здесь в том, что нам не хватает лежащей в основе абстракции. Один из способов найти правильную абстракцию, это рассмотреть, как мы могли бы реализовать <em>чтение сообщений пользователя</em> в веб-приложении. Вспомним из <a class="ref" href="sign-up#sec-a_users_resource">Раздела&nbsp;7.1.2</a>, что REST архитектура включает в себя <em>ресурсы</em> которые создаются и уничтожаются. Это приводит нас к двум вопросам: Что создается, когда пользователь начинает читать сообщения другого пользователя? Что уничтожается, когда пользователь прекращает следить за сообщениями другого пользователя?</p>

<p>Поразмыслив, мы видим, что в этих случаях приложение должно создать либо разрушить <em>взаимоотношение</em> между двумя пользователями. Затем пользователь <code>has_many :relationships</code> (имеет_много :взаимоотношений), и имеет много <code>followed_users</code> (или <code>followers</code>) <em>через</em> эти взаимоотношения. Действительно, <a class="ref" href="following-users#fig-naive_user_has_many_following">Рис.&nbsp;11.6</a> уже содержит бОльшую часть реализации: поскольку каждый читаемый пользователь уникально идентифицирован посредством <code>followed_id</code>, мы можем преобразовать <code>followed_users</code> в таблицу <code>relationships</code>, опустив информацию о пользователе, и использовав <code>followed_id</code> для получения читаемых пользователей из <code>users</code> таблицы. Кроме того, приняв во внимание  <em>обратные</em> взаимоотношения, мы могли бы использовать <code>follower_id</code> столбец для извлечения массива читателей пользователя.</p>

<p>Для того, чтобы создать массив пользователей <code>followed_users</code>, мы могли бы вытянуть массив атрибутов <code>followed_id</code>, а затем найти пользователя для каждого из них. Однако, как и следовало ожидать, в Rails есть более удобный способ для этой процедуры; соответствующая техника известна как <code>has_many through</code>. Как мы увидим в <a class="ref" href="following-users#sec-following">Разделе&nbsp;11.1.4</a>, Rails позволяет нам сказать, что пользователь следит за сообщениями многих пользователей <em>через</em> таблицу взаимоотношений, используя краткий код</p>

<div class="code"><div class="highlight"><pre><span class="n">has_many</span> <span class="ss">:followed_users</span><span class="p">,</span> <span class="ss">through:</span> <span class="ss">:relationships</span><span class="p">,</span> <span class="ss">source:</span> <span class="ss">:followed</span>
</pre></div>
</div>


<p>Этот код автоматически заполняет <code>user.followed_users</code> массивом читаемых пользователей. Схема модели данных представлена на <a class="ref" href="following-users#fig-user_has_many_following">Рис.&nbsp;11.7</a>.</p>

<div class="label" id="fig-user_has_many_following"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/user_has_many_followed_users.png" alt="user_has_many_followed_users" /></span></div><div class="caption"><span class="header">Рисунок 11.7: </span><span class="description">Модель слежения пользователя за сообщениями через взаимоотношения.</span></div></div>


<p>Чтобы начать работу над реализацией, мы сначала генерируем модель Relationship следующим образом:</p>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> rails generate model Relationship follower_id:integer followed_id:integer
</pre></div>
</div>


<p>Возможно при этом была сгенерирована фабрика Relationship которую вам следует удалить:</p>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> rm -f spec/factories/relationship.rb
</pre></div>
</div>


<p>Так как мы будем искать взаимоотношения по <code>follower_id</code> и по <code>followed_id</code>, мы должны добавить индекс на каждой колонке для повышения эффективности поиска, как показано в <a class="ref" href="following-users#code-relationships_migration">Листинге&nbsp;11.1</a>.</p>

<div class="label" id="code-relationships_migration"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.1.</span> <span class="description">Добавление индексов для <code>relationships</code> таблицы. <br /> <code>db/migrate/[timestamp]_create_relationships.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">CreateRelationships</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord::Migration</span>
  <span class="k">def</span> <span class="nf">change</span>
    <span class="n">create_table</span> <span class="ss">:relationships</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:follower_id</span>
      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:followed_id</span>

      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
    <span class="k">end</span>
    <span class="n">add_index</span> <span class="ss">:relationships</span><span class="p">,</span> <span class="ss">:follower_id</span>
    <span class="n">add_index</span> <span class="ss">:relationships</span><span class="p">,</span> <span class="ss">:followed_id</span>
    <span class="n">add_index</span> <span class="ss">:relationships</span><span class="p">,</span> <span class="o">[</span><span class="ss">:follower_id</span><span class="p">,</span> <span class="ss">:followed_id</span><span class="o">]</span><span class="p">,</span> <span class="ss">unique:</span> <span class="kp">true</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p><a class="ref" href="following-users#code-relationships_migration">Листинг&nbsp;11.1</a> включает также <em>составной</em> индекс, который обеспечивает уникальность пар (<code>follower_id</code>, <code>followed_id</code>), так что пользователь не может следить за сообщениями другого пользователя более одного раза:</p>

<div class="code"><div class="highlight"><pre><span class="n">add_index</span> <span class="ss">:relationships</span><span class="p">,</span> <span class="o">[</span><span class="ss">:follower_id</span><span class="p">,</span> <span class="ss">:followed_id</span><span class="o">]</span><span class="p">,</span> <span class="ss">unique:</span> <span class="kp">true</span>
</pre></div>
</div>


<p>(Сравните с индексом уникальности email из <a class="ref" href="modeling-users#code-email_uniqueness_index">Листинга&nbsp;6.19</a>.) Как мы увидим в <a class="ref" href="following-users#sec-following">Разделе&nbsp;11.1.4</a>, наш пользовательский интерфейс не позволит этому случиться, но добавление индекса уникальности позволит избежать ошибки в случае, если пользователь попытается дублировать взаимотношения любым другим способом (используя, например, инструмент командной строки, такой как <tt>curl</tt>). Мы могли бы также добавить валидацию уникальности к модели Relationship, но, так как дублирование взаимоотношений  является ошибкой <em>всегда</em>, для наших целей вполне достаточно индекса уникальности.</p>

<p>Для создания таблицы <code>relationships</code>, мы мигрируем базу данных и подготавливаем тестовую бд, как обычно:</p>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> bundle <span class="nb">exec </span>rake db:migrate
<span class="gp">$</span> bundle <span class="nb">exec </span>rake <span class="nb">test</span>:prepare
</pre></div>
</div>


<p>Результирующая модель данных Relationship показана на <a class="ref" href="following-users#fig-relationship_model">Рис.&nbsp;11.8</a>.</p>

<div class="label" id="fig-relationship_model"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/relationship_model.png" alt="relationship_model" /></span></div><div class="caption"><span class="header">Рисунок 11.8: </span><span class="description">Модель данных Relationship.</span></div></div>




<div class="label" id="sec-relationship_user_associations"></div>


<h3><a id="sec-11_1_2" href="following-users#sec-relationship_user_associations" class="heading"><span class="number">11.1.2</span> Ассоциации пользователь/взаимоотношение</a></h3>


<p>Прежде чем приступить к реализации читателей и читаемых, нам вначале необходимо установить ассоциацию между пользователями и взаимоотношениями. Пользователь <code>has_many</code> (имеет_много) взаимоотношений, и, так как взаимоотношения включают  <em>двух</em> пользователей&nbsp;&mdash;&nbsp;взаимоотношение <code>belongs_to</code> (принадлежит_к) читающим и читаемым пользователям.</p>

<p>Как и с микросообщениями в <a class="ref" href="user-microposts#sec-user_micropost_associations">Разделе&nbsp;10.1.3</a>, мы будем создавать новые взаимоотношения используя ассоциацию, с помощью такого кода</p>

<div class="code"><div class="highlight"><pre><span class="n">user</span><span class="o">.</span><span class="n">relationships</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="ss">followed_id:</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="p">)</span>
</pre></div>
</div>


<p>Мы начнем с базовых тестов валидации показанных в <a class="ref" href="following-users#code-relationship_create_test">Листинге&nbsp;11.2</a>.</p>

<div class="label" id="code-relationship_create_test"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.2.</span> <span class="description">Тестирование создания Relationship и атрибутов. <br /> <code>spec/models/relationship_spec.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>

<span class="n">describe</span> <span class="no">Relationship</span> <span class="k">do</span>

  <span class="n">let</span><span class="p">(</span><span class="ss">:follower</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:followed</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:relationship</span><span class="p">)</span> <span class="p">{</span> <span class="n">follower</span><span class="o">.</span><span class="n">relationships</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="ss">followed_id:</span> <span class="n">followed</span><span class="o">.</span><span class="n">id</span><span class="p">)</span> <span class="p">}</span>

  <span class="n">subject</span> <span class="p">{</span> <span class="n">relationship</span> <span class="p">}</span>

  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">be_valid</span> <span class="p">}</span>
<span class="k">end</span>
</pre></div>
</div></div>

<p>Обратите внимание, что, в отличие от тестов для моделей User и Micropost, которые использовали <code>@user</code> и <code>@micropost</code>, соответственно, <a class="ref" href="following-users#code-relationship_create_test">Листинг&nbsp;11.2</a> использует <code>let</code> вместо переменных экземпляра. Отличия между ними редко имеют значение,<sup class="footnote" id="fnref-11_4"><a href="#fn-11_4">4</a></sup> но я считаю <code>let</code> более чистым решением, нежели переменные экземпляра. Ранее мы применяли переменные экземпляра из-за того что нам важно было как можно раньше ввести переменные экземпляра, а также потому что <code>let</code> является немного более продвинутой техникой.</p>

<p>Мы также должны протестировать атрибут <code>relationships</code> модели User как это показано в <a class="ref" href="following-users#code-user_relationships_method_test">Листинге&nbsp;11.3</a>.</p>

<div class="label" id="code-user_relationships_method_test"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.3.</span> <span class="description">Тестирование атрибута <code>user.relationships</code>. <br /> <code>spec/models/user_spec.rb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>

<span class="n">describe</span> <span class="no">User</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:feed</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:relationships</span><span class="p">)</span> <span class="p">}</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>В этой точке вы, возможно, ожидаете код приложения как в <a class="ref" href="user-microposts#sec-user_micropost_associations">Разделе&nbsp;10.1.3</a> - и он действительно похож, но есть одно важное отличие: в случае с моделью Micropost мы могли сказать</p>

<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">Micropost</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord::Base</span>
  <span class="n">belongs_to</span> <span class="ss">:user</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div>


<p>и</p>

<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord::Base</span>
  <span class="n">has_many</span> <span class="ss">:microposts</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div>


<p>поскольку у таблицы <code>microposts</code> есть атрибут <code>user_id</code> для идентификации пользователя (<a class="ref" href="user-microposts#sec-the_basic_model">Раздел&nbsp;10.1.1</a>). Id используемый таким способом для связи двух таблиц базы данных, известен как <em>внешний ключ</em>, и когда внешним ключом для объекта модели  User является <code>user_id</code>, Rails может вывести ассоциацию автоматически: по умолчанию, Rails ожидает <em>внешний ключ</em> в форме <code>&lt;class&gt;_id</code>, где <code>&lt;class&gt;</code> является строчной версией имени класса.<sup class="footnote" id="fnref-11_5"><a href="#fn-11_5">5</a></sup> В данном случае, несмотря на то, что мы по прежнему имеем дело с пользователями, они теперь отождествляются с внешним ключом <code>follower_id</code>, поэтому мы должны сообщить об этом Rails, как показано в <a class="ref" href="following-users#code-user_relationships_association">Листинге&nbsp;11.4</a>.<sup class="footnote" id="fnref-11_6"><a href="#fn-11_6">6</a></sup></p>

<div class="label" id="code-user_relationships_association"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.4.</span> <span class="description">Реализация <code>has_many</code> ассоциации пользователь/взаимоотношение. <br /> <code>app/models/user.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord::Base</span>
  <span class="n">has_many</span> <span class="ss">:microposts</span><span class="p">,</span> <span class="ss">dependent:</span> <span class="ss">:destroy</span>
  <span class="n">has_many</span> <span class="ss">:relationships</span><span class="p">,</span> <span class="ss">foreign_key:</span> <span class="s2">&quot;follower_id&quot;</span><span class="p">,</span> <span class="ss">dependent:</span> <span class="ss">:destroy</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>(Поскольку уничтожение пользователя должно также уничтожить его взаимоотношения мы пошли еще дальше и добавили <code>dependent: :destroy</code> к ассоциации; написание теста на это останется в качестве упражнения (<a class="ref" href="following-users#sec-following_exercises">Section&nbsp;11.5</a>).)</p>

<p>Как и у модели Micropost, у Relationship модели есть <code>belongs_to</code> взаимоотношения с пользователями; в данном случае, объект взаимоотношение принадлежит к обоим <code>follower</code> и <code>followed</code> пользователям, что мы и  тестируем в <a class="ref" href="following-users#code-relationships_belongs_to_test">Листинге&nbsp;11.5</a>.</p>

<div class="label" id="code-relationships_belongs_to_test"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.5.</span> <span class="description">Тестирование <code>belongs_to</code> ассоциации пользователь/взаимоотношения. <br /> <code>spec/models/relationship_spec.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="n">describe</span> <span class="no">Relationship</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">describe</span> <span class="s2">&quot;follower methods&quot;</span> <span class="k">do</span>
    <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:follower</span><span class="p">)</span> <span class="p">}</span>
    <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:followed</span><span class="p">)</span> <span class="p">}</span>
    <span class="n">its</span><span class="p">(</span><span class="ss">:follower</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="n">eq</span> <span class="n">follower</span> <span class="p">}</span>
    <span class="n">its</span><span class="p">(</span><span class="ss">:followed</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="n">eq</span> <span class="n">followed</span> <span class="p">}</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Чтобы написать код приложения, мы определяем <code>belongs_to</code> взаимоотношения как обычно. Rails выводит названия внешних ключей из соответствующих символов (т.e., <code>follower_id</code> из <code>:follower</code>, и <code>followed_id</code> из <code>:followed</code>), но, так как нет ни Followed ни Follower моделей, мы должны  снабдить их именем класса <code>User</code>. Результат показан в <a class="ref" href="following-users#code-relationship_belongs_to">Листинге&nbsp;11.6</a>. Обратите внимание, что, в отличие от дефолтно сгенерированной модели Relationship, в данном случае доступным является только <code>followed_id</code>.</p>

<div class="label" id="code-relationship_belongs_to"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.6.</span> <span class="description">Добавление <code>belongs_to</code> ассоциаций к модели Relationship. <br /> <code>app/models/relationship.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">Relationship</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord::Base</span>
  <span class="n">belongs_to</span> <span class="ss">:follower</span><span class="p">,</span> <span class="ss">class_name:</span> <span class="s2">&quot;User&quot;</span>
  <span class="n">belongs_to</span> <span class="ss">:followed</span><span class="p">,</span> <span class="ss">class_name:</span> <span class="s2">&quot;User&quot;</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Ассоциация <code>followed</code> на самом деле не потребуется до <a class="ref" href="following-users#sec-followers">Раздела&nbsp;11.1.5</a>, но параллельность структуры читатели/читаемые  лучше видна при одновременной реализации.</p>

<p>В этой точке тесты из <a class="ref" href="following-users#code-relationship_create_test">Листинга&nbsp;11.2</a> и <a class="ref" href="following-users#code-user_relationships_method_test">Листинга&nbsp;11.3</a> должны пройти.</p>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> bundle <span class="nb">exec </span>rspec spec/
</pre></div>
</div>




<div class="label" id="sec-relationship_validations"></div>


<h3><a id="sec-11_1_3" href="following-users#sec-relationship_validations" class="heading"><span class="number">11.1.3</span> Валидации</a></h3>


<p>Прежде чем двигаться дальше, мы добавим пару валидаций модели Relationship для комплектности. Тесты (<a class="ref" href="following-users#code-relationship_validation_tests">Листинг&nbsp;11.7</a>) и код приложения (<a class="ref" href="following-users#code-relationship_validations">Листинг&nbsp;11.8</a>) просты.</p>

<div class="label" id="code-relationship_validation_tests"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.7.</span> <span class="description">Тестирование валидаций модели Relationship. <br /> <code>spec/models/relationship_spec.rb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="n">describe</span> <span class="no">Relationship</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">describe</span> <span class="s2">&quot;when followed id is not present&quot;</span> <span class="k">do</span>
    <span class="n">before</span> <span class="p">{</span> <span class="n">relationship</span><span class="o">.</span><span class="n">followed_id</span> <span class="o">=</span> <span class="kp">nil</span> <span class="p">}</span>
    <span class="n">it</span> <span class="p">{</span> <span class="n">should_not</span> <span class="n">be_valid</span> <span class="p">}</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">&quot;when follower id is not present&quot;</span> <span class="k">do</span>
    <span class="n">before</span> <span class="p">{</span> <span class="n">relationship</span><span class="o">.</span><span class="n">follower_id</span> <span class="o">=</span> <span class="kp">nil</span> <span class="p">}</span>
    <span class="n">it</span> <span class="p">{</span> <span class="n">should_not</span> <span class="n">be_valid</span> <span class="p">}</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>




<div class="label" id="code-relationship_validations"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.8.</span> <span class="description">Добавление валидаций модели Relationship. <br /> <code>app/models/relationship.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">Relationship</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord::Base</span>
  <span class="n">belongs_to</span> <span class="ss">:follower</span><span class="p">,</span> <span class="ss">class_name:</span> <span class="s2">&quot;User&quot;</span>
  <span class="n">belongs_to</span> <span class="ss">:followed</span><span class="p">,</span> <span class="ss">class_name:</span> <span class="s2">&quot;User&quot;</span>
  <span class="n">validates</span> <span class="ss">:follower_id</span><span class="p">,</span> <span class="ss">presence:</span> <span class="kp">true</span>
  <span class="n">validates</span> <span class="ss">:followed_id</span><span class="p">,</span> <span class="ss">presence:</span> <span class="kp">true</span>
<span class="k">end</span>
</pre></div>
</div></div>




<div class="label" id="sec-following"></div>


<h3><a id="sec-11_1_4" href="following-users#sec-following" class="heading"><span class="number">11.1.4</span> Читаемые пользователи</a></h3>


<p>Теперь мы переходим к сердцу ассоциаций Relationship: <code>followed_users</code> и <code>followers</code>. Мы начнем с <code>followed_users</code>,  как показано в <a class="ref" href="following-users#code-user_following_test">Листинге&nbsp;11.9</a>.</p>

<div class="label" id="code-user_following_test"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.9.</span> <span class="description">Тест для атрибута <code>user.followed_users</code>. <br /> <code>spec/models/user_spec.rb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>

<span class="n">describe</span> <span class="no">User</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:relationships</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:followed_users</span><span class="p">)</span> <span class="p">}</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Реализация впервые использует <code>has_many through</code>: пользователь имеет много читаемых (пользователей)  <em>через</em> взаимоотношения, как показано на <a class="ref" href="following-users#fig-user_has_many_following">Рис.&nbsp;11.7</a>. По умолчанию, в ассоциации <code>has_many through</code> Rails ищет внешний ключ, соответствующий ассоциации в единственном числе; другими словами, код</p>

<div class="code"><div class="highlight"><pre><span class="n">has_many</span> <span class="ss">:followeds</span><span class="p">,</span> <span class="ss">through:</span> <span class="ss">:relationships</span>
</pre></div>
</div>


<p>будет составлять массив, используя <code>followed_id</code> в таблице <code>relationships</code>. Но, как отмечалось в <a class="ref" href="following-users#sec-a_problem_with_the_data_model">Разделе&nbsp;11.1.1</a>, <code>user.followeds</code> это довольно неуклюже; гораздо более естественным будет использование &ldquo;followed users&rdquo; в качестве множественного числа для &ldquo;followed&rdquo;, и написание <code>user.followed_users</code> для массива читаемых пользователей. Естественно, Rails позволяет переопределить умолчание, в данном случае с помощью <code>:source</code> параметра (<a class="ref" href="following-users#code-has_many_following_through_relationships">Листинг&nbsp;11.10</a>), который явно говорит Rails, что источником массива <code>followed_users</code> является множество <code>followed</code>&nbsp;ids.</p>

<div class="label" id="code-has_many_following_through_relationships"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.10.</span> <span class="description">Добавление к модели User ассоциации <code>followed_users</code>.<br /> <code>app/models/user.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord::Base</span>
  <span class="n">has_many</span> <span class="ss">:microposts</span><span class="p">,</span> <span class="ss">dependent:</span> <span class="ss">:destroy</span>
  <span class="n">has_many</span> <span class="ss">:relationships</span><span class="p">,</span> <span class="ss">foreign_key:</span> <span class="s2">&quot;follower_id&quot;</span><span class="p">,</span> <span class="ss">dependent:</span> <span class="ss">:destroy</span>
  <span class="n">has_many</span> <span class="ss">:followed_users</span><span class="p">,</span> <span class="ss">through:</span> <span class="ss">:relationships</span><span class="p">,</span> <span class="ss">source:</span> <span class="ss">:followed</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Для того, чтобы создавать взаимоотношение с читаемым (пользователем), мы введем служебный метод <code>follow!</code> с тем чтобы мы могли написать <code>user.follow!(other_user)</code>. (Этот метод <code>follow!</code> должен работать всегда, так что, как и с <code>create!</code> и с <code>save!</code>, мы обозначаем восклицательным знаком что при неудачном создании будет брошено исключение.) Мы также добавим связанный булев метод <code>following?</code> для того чтобы иметь возможность проверять - читает ли пользователь сообщения других пользователей.<sup class="footnote" id="fnref-11_7"><a href="#fn-11_7">7</a></sup> Тесты в <a class="ref" href="following-users#code-utility_method_tests">Листинге&nbsp;11.11</a> показывают как мы планируем использовать эти методы на практике.</p>

<div class="label" id="code-utility_method_tests"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.11.</span> <span class="description">Тесты для некоторых служебных методов &ldquo;following&rdquo;. <br /> <code>spec/models/user_spec.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>

<span class="n">describe</span> <span class="no">User</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:followed_users</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:following?</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:follow!</span><span class="p">)</span> <span class="p">}</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">describe</span> <span class="s2">&quot;following&quot;</span> <span class="k">do</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:other_user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
    <span class="n">before</span> <span class="k">do</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">follow!</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">be_following</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span> <span class="p">}</span>
    <span class="n">its</span><span class="p">(</span><span class="ss">:followed_users</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="kp">include</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span> <span class="p">}</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>В коде приложения, метод <code>following?</code> принимает пользователя, названного <code>other_user</code> и проверяет, существует ли он в базе данных; метод <code>follow!</code> вызывает <code>create!</code> через <code>relationships</code> ассоциацию для создания взаимоотношения с читаемым. Результаты представлены в <a class="ref" href="following-users#code-following_p_follow_bang">Листинге&nbsp;11.12</a>.</p>

<div class="label" id="code-following_p_follow_bang"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.12.</span> <span class="description">Служебные методы <code>following?</code> и <code>follow!</code>. <br /> <code>app/models/user.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord::Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">feed</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">following?</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span>
    <span class="n">relationships</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">followed_id:</span> <span class="n">other_user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">follow!</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span>
    <span class="n">relationships</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">followed_id:</span> <span class="n">other_user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Отметим, что в <a class="ref" href="following-users#code-following_p_follow_bang">Листинге&nbsp;11.12</a> мы опустили самого пользователя, написав просто</p>

<div class="code"><div class="highlight"><pre><span class="n">relationships</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="p">)</span>
</pre></div>
</div>


<p>вместо эквивалентного кода</p>

<div class="code"><div class="highlight"><pre><span class="nb">self</span><span class="o">.</span><span class="n">relationships</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="p">)</span>
</pre></div>
</div>


<p>Явное включение или невключение <code>self</code> в данном случае дело вкуса.</p>

<p>Конечно, пользователи должны иметь возможность прекратить слежение за сообщениями других пользователей, что приводит нас к немного предсказуемому методу <code>unfollow!</code>, как показано в <a class="ref" href="following-users#code-user_unfollow_test">Листинге&nbsp;11.13</a>.</p>

<div class="label" id="code-user_unfollow_test"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.13.</span> <span class="description">Тест для прекращения слежения за сообщениями пользователя. <br /> <code>spec/models/user_spec.rb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>

<span class="n">describe</span> <span class="no">User</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:follow!</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:unfollow!</span><span class="p">)</span> <span class="p">}</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">describe</span> <span class="s2">&quot;following&quot;</span> <span class="k">do</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="n">describe</span> <span class="s2">&quot;and unfollowing&quot;</span> <span class="k">do</span>
      <span class="n">before</span> <span class="p">{</span> <span class="vi">@user</span><span class="o">.</span><span class="n">unfollow!</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span> <span class="p">}</span>

      <span class="n">it</span> <span class="p">{</span> <span class="n">should_not</span> <span class="n">be_following</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span> <span class="p">}</span>
      <span class="n">its</span><span class="p">(</span><span class="ss">:followed_users</span><span class="p">)</span> <span class="p">{</span> <span class="n">should_not</span> <span class="kp">include</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span> <span class="p">}</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Код для  <code>unfollow!</code> прост: нужно просто найти взаимоотношение по followed&nbsp;id и уничтожить его (<a class="ref" href="following-users#code-user_unfollow">Листинг&nbsp;11.14</a>).</p>

<div class="label" id="code-user_unfollow"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.14.</span> <span class="description">Прекращение слежения за сообщениями пользователя посредством уничтожения взаимоотношения. <br /> <code>app/models/user.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord::Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">following?</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span>
    <span class="n">relationships</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">followed_id:</span> <span class="n">other_user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">follow!</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span>
    <span class="n">relationships</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">followed_id:</span> <span class="n">other_user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">unfollow!</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span>
    <span class="n">relationships</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">followed_id:</span> <span class="n">other_user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span><span class="o">.</span><span class="n">destroy!</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>




<div class="label" id="sec-followers"></div>


<h3><a id="sec-11_1_5" href="following-users#sec-followers" class="heading"><span class="number">11.1.5</span> Читатели пользователя</a></h3>


<p>Последней частью пазла взаимоотношений является  метод <code>user.followers</code> сопутствующий <code>user.followed_users</code>. Вы могли заметить в <a class="ref" href="following-users#fig-user_has_many_following">Рис.&nbsp;11.7</a> что все сведения, необходимые для извлечения массива читателей уже присутствуют в таблице  <code>relationships</code>. Действительно, техника та же, что и для читаемых пользователей, но с реверсированием ролей <code>follower_id</code> и <code>followed_id</code>. Это говорит о том, что, если бы мы смогли как-то организовать таблицу <code>reverse_relationships</code>, поменяв местами эти два столбца (<a class="ref" href="following-users#fig-user_has_many_followers">Рис.&nbsp;11.9</a>), то мы бы с легкостью реализовали <code>user.followers</code>.</p>

<div class="label" id="fig-user_has_many_followers"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/user_has_many_followers_2nd_ed.png" alt="user_has_many_followers_2nd_ed" /></span></div><div class="caption"><span class="header">Рисунок 11.9: </span><span class="description">Модель данных для читателей пользователя, использующая реверсированную модель Relationship.</span></div></div>


<p>Начнем с тестов, веря, что магия Rails выручит нас (когда дело дойдет до реализации) (<a class="ref" href="following-users#code-reverse_relationships_test">Листинг&nbsp;11.15</a>).</p>

<div class="label" id="code-reverse_relationships_test"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.15.</span> <span class="description">Тестирование перевернутых взаимоотношений. <br /> <code>spec/models/user_spec.rb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>

<span class="n">describe</span> <span class="no">User</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:relationships</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:followed_users</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:reverse_relationships</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:followers</span><span class="p">)</span> <span class="p">}</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>

  <span class="n">describe</span> <span class="s2">&quot;following&quot;</span> <span class="k">do</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">be_following</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span> <span class="p">}</span>
    <span class="n">its</span><span class="p">(</span><span class="ss">:followed_users</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="kp">include</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span> <span class="p">}</span>

    <span class="n">describe</span> <span class="s2">&quot;followed user&quot;</span> <span class="k">do</span>
      <span class="n">subject</span> <span class="p">{</span> <span class="n">other_user</span> <span class="p">}</span>
      <span class="n">its</span><span class="p">(</span><span class="ss">:followers</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="kp">include</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span> <span class="p">}</span>
    <span class="k">end</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Обратите внимание на то, как мы изменили субъект с помощью метода <code>subject</code>, замена <code>@user</code> на <code>other_user</code>, позволяет нам протестировать взаимоотношение с читателями естесственным образом:</p>

<div class="code"><div class="highlight"><pre><span class="n">subject</span> <span class="p">{</span> <span class="n">other_user</span> <span class="p">}</span>
<span class="n">its</span><span class="p">(</span><span class="ss">:followers</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="kp">include</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span> <span class="p">}</span>
</pre></div>
</div>


<p>Как вы наверное подозреваете, мы не будем создавать полную таблицу в базе данных только для того чтобы просто произвести реверс взаимоотношений. Вместо этого мы воспользуемся базовой симметрией между читаемыми и читателями для симуляции таблицы  <code>reverse_relationships</code>, передав <code>followed_id</code> в качестве внешнего ключа. Иными словами, там где ассоциация <code>relationships</code> использует внешний ключ <code>follower_id</code>,</p>

<div class="code"><div class="highlight"><pre><span class="n">has_many</span> <span class="ss">:relationships</span><span class="p">,</span> <span class="ss">foreign_key:</span> <span class="s2">&quot;follower_id&quot;</span>
</pre></div>
</div>


<p>ассоциация <code>reverse_relationships</code> использует <code>followed_id</code>:</p>

<div class="code"><div class="highlight"><pre><span class="n">has_many</span> <span class="ss">:reverse_relationships</span><span class="p">,</span> <span class="ss">foreign_key:</span> <span class="s2">&quot;followed_id&quot;</span>
</pre></div>
</div>


<p>Ассоциация <code>followers</code> затем строится через реверсированные взаимоотношения, как показано в <a class="ref" href="following-users#code-user_reverse_relationships">Листинге&nbsp;11.16</a>.</p>

<div class="label" id="code-user_reverse_relationships"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.16.</span> <span class="description">Реализация <code>user.followers</code> использующая реверсированные взаимоотношения. <br /> <code>app/models/user.rb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord::Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">has_many</span> <span class="ss">:reverse_relationships</span><span class="p">,</span> <span class="ss">foreign_key:</span> <span class="s2">&quot;followed_id&quot;</span><span class="p">,</span>
                                   <span class="ss">class_name:</span>  <span class="s2">&quot;Relationship&quot;</span><span class="p">,</span>
                                   <span class="ss">dependent:</span>   <span class="ss">:destroy</span>
  <span class="n">has_many</span> <span class="ss">:followers</span><span class="p">,</span> <span class="ss">through:</span> <span class="ss">:reverse_relationships</span><span class="p">,</span> <span class="ss">source:</span> <span class="ss">:follower</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>(Как и с <a class="ref" href="following-users#code-user_relationships_association">Листингом&nbsp;11.4</a>, тест для <code>dependent :destroy</code> остается в качестве упражнения (<a class="ref" href="following-users#sec-following_exercises">Раздел&nbsp;11.5</a>).) Обратите внимание, что мы должны включить имя  <em>класса</em> для этой ассоциации, т.e.,</p>

<div class="code"><div class="highlight"><pre><span class="n">has_many</span> <span class="ss">:reverse_relationships</span><span class="p">,</span> <span class="ss">foreign_key:</span> <span class="s2">&quot;followed_id&quot;</span><span class="p">,</span>
                                 <span class="ss">class_name:</span> <span class="s2">&quot;Relationship&quot;</span>
</pre></div>
</div>


<p>потому что иначе Rails будет искать несуществующий класс <code>ReverseRelationship</code>.</p>

<p>Стоит также отметить, что мы могли бы в этом случае пропустить <code>:source</code>, используя просто</p>

<div class="code"><div class="highlight"><pre><span class="n">has_many</span> <span class="ss">:followers</span><span class="p">,</span> <span class="ss">through:</span> <span class="ss">:reverse_relationships</span>
</pre></div>
</div>


<p>поскольку Rails будет автоматически искать внешний ключ <code>follower_id</code> в данном случае. Я сохранил ключ <code>:source</code> для того чтобы подчеркнуть параллельность со структурой ассоциации <code>has_many :followed_users</code>, но вы можете пропустить его.</p>

<p>С кодом в <a class="ref" href="following-users#code-user_reverse_relationships">Листинге&nbsp;11.16</a>, ассоциации читаемые/читатели завершены, и все тесты должны пройти:</p>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> bundle <span class="nb">exec </span>rspec spec/
</pre></div>
</div>


<p>Этот раздел предъявил довольно высокие требования к вашим навыкам моделирования данных, и это нормально, если для его усвоения потребуется некоторое время. Фактически, одним из самых лучших способов понять ассоциации является их использование в веб интерфейсе, как мы увидим в следующем разделе.</p>

<div class="label" id="sec-a_web_interface_for_following_and_followers"></div>


<h2><a id="sec-11_2" href="following-users#sec-a_web_interface_for_following_and_followers" class="heading"><span class="number">11.2</span> Веб-интерфейс для читаемых пользователей</a></h2>


<p>Во введении к этой главе, мы сделали предварительный обзор страниц, необходимых для слежения за сообщениями пользователей. В этом разделе мы реализуем базовый интерфейс и читать/не читать функциональность, показанные в тех макетах. Мы также сделаем отдельные страницы для демонстрации массивов читателей и читаемых. В <a class="ref" href="following-users#sec-the_status_feed">Разделе&nbsp;11.3</a>, мы завершим наш пример приложения, добавив поток сообщений пользователя.</p>

<div class="label" id="sec-sample_following_data"></div>


<h3><a id="sec-11_2_1" href="following-users#sec-sample_following_data" class="heading"><span class="number">11.2.1</span> Образцы данных</a></h3>


<p>Как и в предыдущих главах, нам удобно будет использовать Rake задачу для заполнения базы данных образцами взаимоотношений. Это позволит нам заняться в первую очередь внешним видом страниц, временно отложив серверную часть функциональности.</p>

<p>Когда мы последний раз видели заполнитель образцов данных в <a class="ref" href="user-microposts#code-sample_microposts">Листинге&nbsp;10.20</a>, он был немного суматошным. Поэтому мы начнем с определения отдельных методов для создания пользователей и микросообщений, а затем добавим образцы данных взаимоотношений используя новый метод <code>make_relationships</code>. Результаты показаны в <a class="ref" href="following-users#code-sample_relationships">Листинге&nbsp;11.17</a>.</p>

<div class="label" id="code-sample_relationships"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.17.</span> <span class="description">Добавление читатели/читаемые взаимоотношений в образцы данных. <br /> <code>lib/tasks/sample_data.rake</code></span></div>
<div class="code"><div class="highlight"><pre><span class="n">namespace</span> <span class="ss">:db</span> <span class="k">do</span>
  <span class="n">desc</span> <span class="s2">&quot;Fill database with sample data&quot;</span>
  <span class="n">task</span> <span class="ss">populate:</span> <span class="ss">:environment</span> <span class="k">do</span>
    <span class="n">make_users</span>
    <span class="n">make_microposts</span>
    <span class="n">make_relationships</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">make_users</span>
  <span class="n">admin</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span>     <span class="s2">&quot;Example User&quot;</span><span class="p">,</span>
                       <span class="ss">email:</span>    <span class="s2">&quot;example@railstutorial.org&quot;</span><span class="p">,</span>
                       <span class="ss">password:</span> <span class="s2">&quot;foobar&quot;</span><span class="p">,</span>
                       <span class="ss">password_confirmation:</span> <span class="s2">&quot;foobar&quot;</span><span class="p">,</span>
                       <span class="ss">admin:</span> <span class="kp">true</span><span class="p">)</span>
  <span class="mi">99</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
    <span class="nb">name</span>  <span class="o">=</span> <span class="ss">Faker::Name</span><span class="o">.</span><span class="n">name</span>
    <span class="n">email</span> <span class="o">=</span> <span class="s2">&quot;example-</span><span class="si">#{</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="s2">@railstutorial.org&quot;</span>
    <span class="n">password</span>  <span class="o">=</span> <span class="s2">&quot;password&quot;</span>
    <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span>     <span class="nb">name</span><span class="p">,</span>
                 <span class="ss">email:</span>    <span class="n">email</span><span class="p">,</span>
                 <span class="ss">password:</span> <span class="n">password</span><span class="p">,</span>
                 <span class="ss">password_confirmation:</span> <span class="n">password</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">make_microposts</span>
  <span class="n">users</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">all</span><span class="p">(</span><span class="ss">limit:</span> <span class="mi">6</span><span class="p">)</span>
  <span class="mi">50</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
    <span class="n">content</span> <span class="o">=</span> <span class="ss">Faker::Lorem</span><span class="o">.</span><span class="n">sentence</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
    <span class="n">users</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">user</span><span class="o">|</span> <span class="n">user</span><span class="o">.</span><span class="n">microposts</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">content:</span> <span class="n">content</span><span class="p">)</span> <span class="p">}</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">make_relationships</span>
  <span class="n">users</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">all</span>
  <span class="n">user</span>  <span class="o">=</span> <span class="n">users</span><span class="o">.</span><span class="n">first</span>
  <span class="n">followed_users</span> <span class="o">=</span> <span class="n">users</span><span class="o">[</span><span class="mi">2</span><span class="o">.</span><span class="n">.</span><span class="mi">50</span><span class="o">]</span>
  <span class="n">followers</span>      <span class="o">=</span> <span class="n">users</span><span class="o">[</span><span class="mi">3</span><span class="o">.</span><span class="n">.</span><span class="mi">40</span><span class="o">]</span>
  <span class="n">followed_users</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">followed</span><span class="o">|</span> <span class="n">user</span><span class="o">.</span><span class="n">follow!</span><span class="p">(</span><span class="n">followed</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">followers</span><span class="o">.</span><span class="n">each</span>      <span class="p">{</span> <span class="o">|</span><span class="n">follower</span><span class="o">|</span> <span class="n">follower</span><span class="o">.</span><span class="n">follow!</span><span class="p">(</span><span class="n">user</span><span class="p">)</span> <span class="p">}</span>
<span class="k">end</span>
</pre></div>
</div></div>

<p>Здесь образцы взаимоотношений создаются с помощью кода</p>

<div class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">make_relationships</span>
  <span class="n">users</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">all</span>
  <span class="n">user</span>  <span class="o">=</span> <span class="n">users</span><span class="o">.</span><span class="n">first</span>
  <span class="n">followed_users</span> <span class="o">=</span> <span class="n">users</span><span class="o">[</span><span class="mi">2</span><span class="o">.</span><span class="n">.</span><span class="mi">50</span><span class="o">]</span>
  <span class="n">followers</span>      <span class="o">=</span> <span class="n">users</span><span class="o">[</span><span class="mi">3</span><span class="o">.</span><span class="n">.</span><span class="mi">40</span><span class="o">]</span>
  <span class="n">followed_users</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">followed</span><span class="o">|</span> <span class="n">user</span><span class="o">.</span><span class="n">follow!</span><span class="p">(</span><span class="n">followed</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">followers</span><span class="o">.</span><span class="n">each</span>      <span class="p">{</span> <span class="o">|</span><span class="n">follower</span><span class="o">|</span> <span class="n">follower</span><span class="o">.</span><span class="n">follow!</span><span class="p">(</span><span class="n">user</span><span class="p">)</span> <span class="p">}</span>
<span class="k">end</span>
</pre></div>
</div>


<p>Мы несколько произвольно организовали слежение первого пользователя за сообщениями пользователей с&nbsp;3 по 51, а затем принудили пользователей с 4 по 41 читать сообщения первого пользователя. Полученных в результате взаимоотношений будет вполне достаточно для разработки интерфейса приложения.</p>

<p>Чтобы выполнить код <a class="ref" href="following-users#code-sample_relationships">Листинга&nbsp;11.17</a>, заполним базу данных как обычно:</p>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> bundle <span class="nb">exec </span>rake db:reset
<span class="gp">$</span> bundle <span class="nb">exec </span>rake db:populate
<span class="gp">$</span> bundle <span class="nb">exec </span>rake <span class="nb">test</span>:prepare
</pre></div>
</div>




<div class="label" id="sec-stats_and_a_follow_form"></div>


<h3><a id="sec-11_2_2" href="following-users#sec-stats_and_a_follow_form" class="heading"><span class="number">11.2.2</span> Статистика и форма для слежения за сообщениями пользователя</a></h3>


<p>Теперь, когда  у наших образцов пользователей есть массивы читателей и читаемых, нам нужно обновить главные страницы и страницы профилей, чтобы отразить это. Мы начнем с создания партиала для отображения статистики читаемых и читателей на странице профиля и на главной странице. Затем мы добавим читать/не читать форму, и сделаем отдельные страницы для отображения читаемых и читающих пользователей.</p>

<p>Как было отмечено в <a class="ref" href="following-users#sec-a_problem_with_the_data_model">Разделе&nbsp;11.1.1</a>, слово &ldquo;following&rdquo; является двусмысленным при использовании в качестве атрибута (где <code>user.following</code> могло бы означать или читаемых пользователей или читателей пользователя), но оно вполне подходит в качестве метки, как в &ldquo;50 following&rdquo;. Кроме того, это метка которой пользуется сам Twitter, использование принятое в набросках начиная с <a class="ref" href="following-users#fig-page_flow_profile_mockup">Рис.&nbsp;11.1</a> и показанное крупным планом на <a class="ref" href="following-users#fig-stats_partial_mockup">Рис.&nbsp;11.10</a>.</p>

<div class="label" id="fig-stats_partial_mockup"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/stats_partial_mockup.png" alt="stats_partial_mockup" /></span></div><div class="caption"><span class="header">Рисунок 11.10: </span><span class="description">Набросок партиала статистики.</span></div></div>


<p>Статистика на <a class="ref" href="following-users#fig-stats_partial_mockup">Рис.&nbsp;11.10</a> содержит и количество читаемых пользователей,  и количество его читателей, каждое из чисел должно быть ссылкой на соответствующую специальную страницу для их отображения. В <a class="ref" href="filling-in-the-layout#top">Главе&nbsp;5</a>, мы временно заглушали подобные ссылки знаком&nbsp;<code>&rsquo;#&rsquo;</code>, но это было до того, как мы набрались опыта с маршрутами. Сейчас, несмотря на то, что мы отложили сами страницы до <a class="ref" href="following-users#sec-following_and_followers_pages">Раздела&nbsp;11.2.3</a>, мы сделаем маршруты сейчас, как показано в <a class="ref" href="following-users#code-following_followers_actions_routes">Листинге&nbsp;11.18</a>. Этот код использует метод <code>:member</code> внутри <em>блока</em> <code>resources</code>, с которым мы ранее не были знакомы, но посмотрим, сможете ли вы угадать, что он делает. (<em>Примечание</em>: код в <a class="ref" href="following-users#code-following_followers_actions_routes">Листинге&nbsp;11.18</a> должен <em>заменить</em> <code>resources :users</code>.)</p>

<div class="label" id="code-following_followers_actions_routes"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.18.</span> <span class="description">Добавление действий  <code>following</code> и <code>followers</code> в контроллер Users. <br /> <code>config/routes.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="ss">SampleApp::Application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="n">resources</span> <span class="ss">:users</span> <span class="k">do</span>
    <span class="n">member</span> <span class="k">do</span>
      <span class="n">get</span> <span class="ss">:following</span><span class="p">,</span> <span class="ss">:followers</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Вы возможно догадываетесь, что URL для читаемых и читающих пользователей будут выглядеть как <tt>/users/1/following</tt> и <tt>/users/1/followers</tt>, и это именно то, что делает код в <a class="ref" href="following-users#code-following_followers_actions_routes">Листинге&nbsp;11.18</a>. Поскольку обе страницы будут отображать данные, мы используем  <code>get</code> для того чтобы организовать ответ URL на запросы <tt>GET</tt> (что требуется конвенцией  REST для подобных страниц), и метод <code>member</code> означает, что маршруты отвечают на URL, содержащие id пользователя. (Другой возможный метод, <code>collection</code>, работает без id, так что</p>

<div class="code"><div class="highlight"><pre><span class="n">resources</span> <span class="ss">:users</span> <span class="k">do</span>
  <span class="n">collection</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:tigers</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div>


<p>будет отвечать на URL /users/tigers (presumably to display all the tigers in our application). &nbsp;&mdash;&nbsp;предположительно для отображения всех тигров нашего приложения. Узнать больше об этой опции можно из <a href="http://www.rusrails.ru/rails-routing">Ruby on Rails по-русски &ldquo;Роутинг в Rails&rdquo;</a>. Таблица маршрутов, сгенерированных <a class="ref" href="following-users#code-following_followers_actions_routes">Листингом&nbsp;11.18</a> представлена в <a class="ref" href="following-users#table-following_routes">Таблице&nbsp;11.1</a>; обратите внимание на именнованные маршруты для страниц с читателями и читаемыми, которые мы вскоре будем использовать. Неудачное гибридное применение в маршруте &ldquo;following&rdquo; обусловлено нашим решением использовать недвусмысленную терминологию &ldquo;followed users&rdquo; наряду с применением &ldquo;following&rdquo; взятым у Twitter. Поскольку предыдущий привел бы нас к маршрутам вида <code>followed_users_user_path</code>, что звучит довольно странно, мы выбрали последний в контексте <a class="ref" href="following-users#table-following_routes">Таблицы&nbsp;11.1</a>, что привело к <code>following_user_path</code>.</p>

<div class="label" id="table-following_routes"></div>


<div class="table"><div class="center">
<table class="tabular"><tr><th class="align_left"><strong>HTTP request</strong></th><th class="align_left"><strong>URL</strong></th><th class="align_left"><strong>Действие</strong></th><th class="align_left"><strong>Именованный маршрут</strong></th></tr><tr class="top_bar"><td class="align_left"><tt>GET</tt></td><td class="align_left">/users/1/following</td><td class="align_left"><code>following</code></td><td class="align_left"><code>following_user_path(1)</code></td></tr><tr><td class="align_left"><tt>GET</tt></td><td class="align_left">/users/1/followers</td><td class="align_left"><code>followers</code></td><td class="align_left"><code>followers_user_path(1)</code></td></tr></table></div><div class="caption"><span class="header">Table 11.1: </span><span class="description">RESTful маршруты предоставленные кастомными правилами в ресурсе из <a class="ref" href="following-users#code-following_followers_actions_routes">Листинга&nbsp;11.18</a>.</span></div></div>


<p>Определив маршруты мы готовы сделать тесты партиала статистики. (Мы могли бы начать с тестов, но именованные маршруты было бы трудно объяснить без обновленного файла маршрутов.) Партиал появится на странице профиля и на странице Home;</p>

<div class="label" id="code-stats_view_test"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.19.</span> <span class="description">Тестирование статистики читатели/читаемые на Home странице. <br /> <code>spec/requests/static_pages_spec.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>

<span class="n">describe</span> <span class="s2">&quot;Static pages&quot;</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">describe</span> <span class="s2">&quot;Home page&quot;</span> <span class="k">do</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="n">describe</span> <span class="s2">&quot;for signed-in users&quot;</span> <span class="k">do</span>
      <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
      <span class="n">before</span> <span class="k">do</span>
        <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:micropost</span><span class="p">,</span> <span class="ss">user:</span> <span class="n">user</span><span class="p">,</span> <span class="ss">content:</span> <span class="s2">&quot;Lorem&quot;</span><span class="p">)</span>
        <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:micropost</span><span class="p">,</span> <span class="ss">user:</span> <span class="n">user</span><span class="p">,</span> <span class="ss">content:</span> <span class="s2">&quot;Ipsum&quot;</span><span class="p">)</span>
        <span class="n">sign_in</span> <span class="n">user</span>
        <span class="n">visit</span> <span class="n">root_path</span>
      <span class="k">end</span>

      <span class="n">it</span> <span class="s2">&quot;should render the user&#39;s feed&quot;</span> <span class="k">do</span>
        <span class="n">user</span><span class="o">.</span><span class="n">feed</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
          <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_selector</span><span class="p">(</span><span class="s2">&quot;li#</span><span class="si">#{</span><span class="n">item</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span> <span class="ss">text:</span> <span class="n">item</span><span class="o">.</span><span class="n">content</span><span class="p">)</span>
        <span class="k">end</span>
      <span class="k">end</span>

      <span class="n">describe</span> <span class="s2">&quot;follower/following counts&quot;</span> <span class="k">do</span>
        <span class="n">let</span><span class="p">(</span><span class="ss">:other_user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
        <span class="n">before</span> <span class="k">do</span>
          <span class="n">other_user</span><span class="o">.</span><span class="n">follow!</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
          <span class="n">visit</span> <span class="n">root_path</span>
        <span class="k">end</span>

        <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_link</span><span class="p">(</span><span class="s2">&quot;0 following&quot;</span><span class="p">,</span> <span class="ss">href:</span> <span class="n">following_user_path</span><span class="p">(</span><span class="n">user</span><span class="p">))</span> <span class="p">}</span>
        <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_link</span><span class="p">(</span><span class="s2">&quot;1 followers&quot;</span><span class="p">,</span> <span class="ss">href:</span> <span class="n">followers_user_path</span><span class="p">(</span><span class="n">user</span><span class="p">))</span> <span class="p">}</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Ядром этих тестов является предположение, что количество читателей и читаемых представлено на странице совместно с правильными URL:</p>

<div class="code"><div class="highlight"><pre><span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_link</span><span class="p">(</span><span class="s2">&quot;0 following&quot;</span><span class="p">,</span> <span class="ss">href:</span> <span class="n">following_user_path</span><span class="p">(</span><span class="n">user</span><span class="p">))</span> <span class="p">}</span>
<span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_link</span><span class="p">(</span><span class="s2">&quot;1 followers&quot;</span><span class="p">,</span> <span class="ss">href:</span> <span class="n">followers_user_path</span><span class="p">(</span><span class="n">user</span><span class="p">))</span> <span class="p">}</span>
</pre></div>
</div>


<p>Здесь мы использовали именованные маршруты, показанные в <a class="ref" href="following-users#table-following_routes">Таблице&nbsp;11.1</a> для проверки того, что ссылки имеют правильные адреса. Также обратите внимание на то, что в данном случае слово &ldquo;followers&rdquo; работает как <em>метка</em>, так что мы сохраним его во множественном числе, даже если будет только один читатель.</p>

<p>Код приложения для партиала статистики это просто несколько ссылок внутри div, как показано в <a class="ref" href="following-users#code-stats_partial">Листинге&nbsp;11.20</a>.</p>

<div class="label" id="code-stats_partial"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.20.</span> <span class="description">Партиал для отображения статистики. <br /> <code>app/views/shared/_stats.html.erb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%</span> <span class="vi">@user</span> <span class="o">||=</span> <span class="n">current_user</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;stats&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;</span><span class="cp">&lt;%=</span> <span class="n">following_user_path</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="s">&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;strong</span> <span class="na">id=</span><span class="s">&quot;following&quot;</span> <span class="na">class=</span><span class="s">&quot;stat&quot;</span><span class="nt">&gt;</span>
      <span class="cp">&lt;%=</span> <span class="vi">@user</span><span class="o">.</span><span class="n">followed_users</span><span class="o">.</span><span class="n">count</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;/strong&gt;</span>
    following
  <span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;</span><span class="cp">&lt;%=</span> <span class="n">followers_user_path</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="s">&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;strong</span> <span class="na">id=</span><span class="s">&quot;followers&quot;</span> <span class="na">class=</span><span class="s">&quot;stat&quot;</span><span class="nt">&gt;</span>
      <span class="cp">&lt;%=</span> <span class="vi">@user</span><span class="o">.</span><span class="n">followers</span><span class="o">.</span><span class="n">count</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;/strong&gt;</span>
    followers
  <span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
</div></div>


<p>Поскольку мы включим статистику и на профиле пользователя и на Home странице, первая строка <a class="ref" href="following-users#code-stats_partial">Листинга&nbsp;11.20</a> выбирает правильное с помощью</p>

<div class="code"><div class="highlight"><pre><span class="cp">&lt;%</span> <span class="vi">@user</span> <span class="o">||=</span> <span class="n">current_user</span> <span class="cp">%&gt;</span>
</pre></div>
</div>


<p>Как обсуждалось в <a class="ref" href="sign-in-sign-out#sidebar-or_equals">Блоке&nbsp;8.2</a>, если <code>@user</code> не является <code>nil</code>, то ничего не происходит (как и на странице профиля), но когда он существует (как на странице Home), он назначает <code>@user</code> равным текущему пользователю.</p>

<p>Обратите внимание также на то, что количество читаемых/читателей подсчитывается через ассоциацию с помощью</p>

<div class="code"><div class="highlight"><pre><span class="vi">@user</span><span class="o">.</span><span class="n">followed_users</span><span class="o">.</span><span class="n">count</span>
</pre></div>
</div>


<p>и</p>

<div class="code"><div class="highlight"><pre><span class="vi">@user</span><span class="o">.</span><span class="n">followers</span><span class="o">.</span><span class="n">count</span>
</pre></div>
</div>


<p>Сравните это с подсчетом количества микросообщений из <a class="ref" href="user-microposts#code-user_show_microposts">Листинга&nbsp;10.17</a>, где мы писали</p>

<div class="code"><div class="highlight"><pre><span class="vi">@user</span><span class="o">.</span><span class="n">microposts</span><span class="o">.</span><span class="n">count</span>
</pre></div>
</div>


<p>для подсчета микросообщений.</p>

<p>Одна последняя деталь которую стоит отметить - наличие CSS id у некоторых элементов, как в</p>

<div class="code"><div class="highlight"><pre><span class="nt">&lt;strong</span> <span class="na">id=</span><span class="s">&quot;following&quot;</span> <span class="na">class=</span><span class="s">&quot;stat&quot;</span><span class="nt">&gt;</span>
...
<span class="nt">&lt;/strong&gt;</span>
</pre></div>
</div>


<p>Это сделано в угоду Ajax реализации из <a class="ref" href="following-users#sec-a_working_follow_button_with_ajax">Раздела&nbsp;11.2.5</a>, которая получает доступ к элементам страницы используя их уникальные id.</p>

<p>С готовым партиалом включить статистику в  Home страницу проще простого, как показано в <a class="ref" href="following-users#code-home_page_stats">Листинге&nbsp;11.21</a>. (Это также приводит к прохождению тестов из <a class="ref" href="following-users#code-stats_view_test">Листинга&nbsp;11.19</a>.)</p>

<div class="label" id="code-home_page_stats"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.21.</span> <span class="description">Добавление статистики к Home странице. <br /> <code>app/views/static_pages/home.html.erb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">signed_in?</span> <span class="cp">%&gt;</span>
      .
      .
      .
      <span class="nt">&lt;section&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">&#39;shared/user_info&#39;</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;/section&gt;</span>
      <span class="nt">&lt;section&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">&#39;shared/stats&#39;</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;/section&gt;</span>
      <span class="nt">&lt;section&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">&#39;shared/micropost_form&#39;</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;/section&gt;</span>
      .
      .
      .
<span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span>
  .
  .
  .
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
</div></div>


<p>Для того чтобы придать статистике стиль, мы добавим немного SCSS, как это показано в <a class="ref" href="following-users#code-stats_css">Листинге&nbsp;11.22</a> (который содержит весь код таблиц стилей необходимый в этой главе). Результат представлен на <a class="ref" href="following-users#fig-home_page_follow_stats">Рис.&nbsp;11.11</a>.</p>

<div class="label" id="code-stats_css"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.22.</span> <span class="description">SCSS для боковой панели страницы Home. <br /> <code>app/assets/stylesheets/custom.css.scss</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>

<span class="o">/*</span> <span class="nt">sidebar</span> <span class="o">*/</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.stats</span> <span class="p">{</span>
  <span class="na">overflow</span><span class="o">:</span> <span class="no">auto</span><span class="p">;</span>
  <span class="nt">a</span> <span class="p">{</span>
    <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span class="p">;</span>
    <span class="na">padding</span><span class="o">:</span> <span class="mi">0</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
    <span class="na">border-left</span><span class="o">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="no">solid</span> <span class="nv">$grayLighter</span><span class="p">;</span>
    <span class="na">color</span><span class="o">:</span> <span class="nb">gray</span><span class="p">;</span>
    <span class="k">&amp;</span><span class="nd">:first-child</span> <span class="p">{</span>
      <span class="na">padding-left</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
      <span class="na">border</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">&amp;</span><span class="nd">:hover</span> <span class="p">{</span>
      <span class="na">text-decoration</span><span class="o">:</span> <span class="no">none</span><span class="p">;</span>
      <span class="na">color</span><span class="o">:</span> <span class="nv">$blue</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="nt">strong</span> <span class="p">{</span>
    <span class="na">display</span><span class="o">:</span> <span class="no">block</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nc">.user_avatars</span> <span class="p">{</span>
  <span class="na">overflow</span><span class="o">:</span> <span class="no">auto</span><span class="p">;</span>
  <span class="na">margin-top</span><span class="o">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
  <span class="nc">.gravatar</span> <span class="p">{</span>
    <span class="na">margin</span><span class="o">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="mi">1</span><span class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
</pre></div>
</div></div>




<div class="label" id="fig-home_page_follow_stats"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/home_page_follow_stats_bootstrap.png" alt="home_page_follow_stats_bootstrap" /></span></div><div class="caption"><span class="header">Рисунок 11.11: </span><span class="description">Home страница (<a href="http://localhost:3000/">/</a>) со статистикой.&nbsp;<a href="http://railstutorial.org/images/figures/home_page_follow_stats_bootstrap-full.png">(полный размер)</a></span></div></div>


<p>Мы подключим статистику к странице профиля через мгновение, но вначале давайте сделааем партиал для follow/unfollow кнопки,  как показано в <a class="ref" href="following-users#code-follow_form_partial">Листинге&nbsp;11.23</a>.</p>

<div class="label" id="code-follow_form_partial"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.23.</span> <span class="description">Партиал для формы follow/unfollow. <br /> <code>app/views/users/_follow_form.html.erb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%</span> <span class="k">unless</span> <span class="n">current_user?</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;follow_form&quot;</span><span class="nt">&gt;</span>
  <span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">current_user</span><span class="o">.</span><span class="n">following?</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">&#39;unfollow&#39;</span> <span class="cp">%&gt;</span>
  <span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">&#39;follow&#39;</span> <span class="cp">%&gt;</span>
  <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
</div></div>


<p>Этот партиал ничего не делает кроме перекладывания реальной работы на <code>follow</code> и <code>unfollow</code> партиалы, которым нужен новый файл маршрутов чьи правила для ресурса Relationships, следуют примеру ресурса Microposts (<a class="ref" href="user-microposts#code-microposts_resource">Листинг&nbsp;10.22</a>), как показано в  <a class="ref" href="following-users#code-relationships_resource">Листинге&nbsp;11.24</a>.</p>

<div class="label" id="code-relationships_resource"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.24.</span> <span class="description">Добавление маршрутов для пользовательских взаимоотношений. <br /> <code>config/routes.rb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="ss">SampleApp::Application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">resources</span> <span class="ss">:sessions</span><span class="p">,</span>      <span class="ss">only:</span> <span class="o">[</span><span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span><span class="p">,</span> <span class="ss">:destroy</span><span class="o">]</span>
  <span class="n">resources</span> <span class="ss">:microposts</span><span class="p">,</span>    <span class="ss">only:</span> <span class="o">[</span><span class="ss">:create</span><span class="p">,</span> <span class="ss">:destroy</span><span class="o">]</span>
  <span class="n">resources</span> <span class="ss">:relationships</span><span class="p">,</span> <span class="ss">only:</span> <span class="o">[</span><span class="ss">:create</span><span class="p">,</span> <span class="ss">:destroy</span><span class="o">]</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Сами партиалы follow/unfollow показаны в <a class="ref" href="following-users#code-follow_form">Листинге&nbsp;11.25</a> и <a class="ref" href="following-users#code-unfollow_form">Листинге&nbsp;11.26</a>.</p>

<div class="label" id="code-follow_form"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.25.</span> <span class="description">Форма для слежения за сообщениями пользователя. <br /> <code>app/views/users/_follow.html.erb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span class="n">current_user</span><span class="o">.</span><span class="n">relationships</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="ss">followed_id:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">id</span><span class="p">))</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;div&gt;</span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">hidden_field</span> <span class="ss">:followed_id</span> <span class="cp">%&gt;</span><span class="nt">&lt;/div&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="s2">&quot;Follow&quot;</span><span class="p">,</span> <span class="ss">class:</span> <span class="s2">&quot;btn btn-large btn-primary&quot;</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
</div></div>




<div class="label" id="code-unfollow_form"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.26.</span> <span class="description">Форма для отписки от сообщений пользователя. <br /> <code>app/views/users/_unfollow.html.erb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span class="n">current_user</span><span class="o">.</span><span class="n">relationships</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">followed_id:</span> <span class="vi">@user</span><span class="p">),</span>
             <span class="ss">html:</span> <span class="p">{</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:delete</span> <span class="p">})</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="s2">&quot;Unfollow&quot;</span><span class="p">,</span> <span class="ss">class:</span> <span class="s2">&quot;btn btn-large&quot;</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
</div></div>


<p>Обе эти формы используют <code>form_for</code> для манипуляций с объектом модели Relationship; основное отличие между ними заключается в том, что <a class="ref" href="following-users#code-follow_form">Листинг&nbsp;11.25</a> строит <em>новое</em> взаимоотношение, тогда как <a class="ref" href="following-users#code-unfollow_form">Листинг&nbsp;11.26</a> ищет существующее взаимоотношение. Естественно, первый отправляет <tt>POST</tt> запрос к контроллеру Relationships для <code>create</code> взаимоотношения, в то время как последний отправляет <tt>DELETE</tt> запрос для <code>destroy</code> взаимоотношения. (Мы напишем эти действия в <a class="ref" href="following-users#sec-a_working_follow_button_the_standard_way">Разделе&nbsp;11.2.4</a>.) Наконец, отметьте что форма follow/unfollow не содержит никакого контента кроме кнопки, но нам все еще необходимо отправить <code>followed_id</code>, чего мы можем добиться с помощью метода <code>hidden_field</code> из <a class="ref" href="following-users#code-follow_form">Листинга&nbsp;11.25</a>; который производит HTML вида</p>

<div class="code"><div class="highlight"><pre><span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">&quot;relationship_followed_id&quot;</span>
<span class="na">name=</span><span class="s">&quot;relationship[followed_id]&quot;</span>
<span class="na">type=</span><span class="s">&quot;hidden&quot;</span> <span class="na">value=</span><span class="s">&quot;3&quot;</span> <span class="nt">/&gt;</span>
</pre></div>
</div>


<p>Тег &ldquo;hidden&rdquo; <code>input</code> поместит соответствующую информацию на странице не отображая ее в браузере.</p>

<p>Теперь мы можем включить форму чтения и статистику на страницу профиля пользователя простым рендерингом партиалов, как показано в <a class="ref" href="following-users#code-user_follow_form_profile_stats">Листинге&nbsp;11.27</a>. Профили с follow и unfollow кнопками, соответственно, представлены на <a class="ref" href="following-users#fig-profile_follow_button">Рис.&nbsp;11.12</a> и <a class="ref" href="following-users#fig-profile_unfollow_button">Рис.&nbsp;11.13</a>.</p>

<div class="label" id="code-user_follow_form_profile_stats"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.27.</span> <span class="description">Добавление формы слежения за сообщениями пользователя и статистики на страницу профиля пользователя. <br /> <code>app/views/users/show.html.erb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%</span> <span class="n">provide</span><span class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="vi">@user</span><span class="o">.</span><span class="n">name</span><span class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;row&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;aside</span> <span class="na">class=</span><span class="s">&quot;span4&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;section&gt;</span>
      <span class="nt">&lt;h1&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">gravatar_for</span> <span class="vi">@user</span> <span class="cp">%&gt;</span>
        <span class="cp">&lt;%=</span> <span class="vi">@user</span><span class="o">.</span><span class="n">name</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;/section&gt;</span>
    <span class="nt">&lt;section&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">&#39;shared/stats&#39;</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;/section&gt;</span>
  <span class="nt">&lt;/aside&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;span8&quot;</span><span class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">&#39;follow_form&#39;</span> <span class="k">if</span> <span class="n">signed_in?</span> <span class="cp">%&gt;</span>
    .
    .
    .
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
</div></div>




<div class="label" id="fig-profile_follow_button"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/profile_follow_button_bootstrap.png" alt="profile_follow_button_bootstrap" /></span></div><div class="caption"><span class="header">Рисунок 11.12: </span><span class="description">Профиль пользователя с follow кнопкой (<a href="http://localhost:3000/users/2">/users/2</a>).&nbsp;<a href="http://railstutorial.org/images/figures/profile_follow_button_bootstrap-full.png">(полный размер)</a></span></div></div>




<div class="label" id="fig-profile_unfollow_button"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/profile_unfollow_button_bootstrap.png" alt="profile_unfollow_button_bootstrap" /></span></div><div class="caption"><span class="header">Рисунок 11.13: </span><span class="description">Профиль пользователя с unfollow кнопкой (<a href="http://localhost:3000/users/8">/users/6</a>).&nbsp;<a href="http://railstutorial.org/images/figures/profile_unfollow_button_bootstrap-full.png">(полный размер)</a></span></div></div>


<p>Мы вскоре сделаем эти кнопки рабочими, фактически, мы сделаем это двумя способами, стандартным способом (<a class="ref" href="following-users#sec-a_working_follow_button_the_standard_way">Раздел&nbsp;11.2.4</a>) и с помощью Ajax (<a class="ref" href="following-users#sec-a_working_follow_button_with_ajax">Раздел&nbsp;11.2.5</a>), но вначале мы закончим  HTML интерфейс, создав страницы для списков читающих и читаемых.</p>

<div class="label" id="sec-following_and_followers_pages"></div>


<h3><a id="sec-11_2_3" href="following-users#sec-following_and_followers_pages" class="heading"><span class="number">11.2.3</span> Страницы с читаемыми и читателями</a></h3>


<p>Страницы для отображения читающих сообщения пользователя и читаемых им пользователей будут напоминать гибрид страницы профиля пользователя и страницы со списком пользователей (<a class="ref" href="updating-showing-and-deleting-users#sec-user_index">Раздел&nbsp;9.3.1</a>), с сайдбаром пользовательской информации (включая статистику слежения за сообщениями) и таблицу пользователей. Кроме того, мы включим  сетку пользовательских профильных изображений-ссылок в сайдбаре. Набросок соответствующий этим требованиям представлен на <a class="ref" href="following-users#fig-following_mockup">Рис.&nbsp;11.14</a> (читаемые) и <a class="ref" href="following-users#fig-followers_mockup">Рис.&nbsp;11.15</a> (читатели).</p>

<div class="label" id="fig-following_mockup"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/following_mockup_bootstrap.png" alt="following_mockup_bootstrap" /></span></div><div class="caption"><span class="header">Рисунок 11.14: </span><span class="description">Набросок страницы со списком читаемых пользователей.&nbsp;<a href="http://railstutorial.org/images/figures/following_mockup_bootstrap-full.png">(полный размер)</a></span></div></div>




<div class="label" id="fig-followers_mockup"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/followers_mockup_bootstrap.png" alt="followers_mockup_bootstrap" /></span></div><div class="caption"><span class="header">Рисунок 11.15: </span><span class="description">Набросок страницы со списком читателей.&nbsp;<a href="http://railstutorial.org/images/figures/followers_mockup_bootstrap-full.png">(полный размер)</a></span></div></div>


<p>Нашим первым шагом будет получение рабочих ссылок following (читаемые) и followers (читатели). Мы будем следовать примеру Твиттера и обе страницы будут требовать входа пользователя, как было протестировано в <a class="ref" href="following-users#code-following_followers_authorization_test">Листинге&nbsp;11.28</a>. Для вошедших пользователей, страницы должны иметь ссылки на читаемых и читателей, соответственно, как протестировано в <a class="ref" href="following-users#code-following_followers_tests">Листинге&nbsp;11.29</a>.</p>

<div class="label" id="code-following_followers_authorization_test"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.28.</span> <span class="description">Тестирование авторизации страниц читаемых и читателей. <br /> <code>spec/requests/authentication_pages_spec.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>

<span class="n">describe</span> <span class="s2">&quot;Authentication&quot;</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">describe</span> <span class="s2">&quot;authorization&quot;</span> <span class="k">do</span>

    <span class="n">describe</span> <span class="s2">&quot;for non-signed-in users&quot;</span> <span class="k">do</span>
      <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

      <span class="n">describe</span> <span class="s2">&quot;in the Users controller&quot;</span> <span class="k">do</span>
        <span class="o">.</span>
        <span class="o">.</span>
        <span class="o">.</span>
        <span class="n">describe</span> <span class="s2">&quot;visiting the following page&quot;</span> <span class="k">do</span>
          <span class="n">before</span> <span class="p">{</span> <span class="n">visit</span> <span class="n">following_user_path</span><span class="p">(</span><span class="n">user</span><span class="p">)</span> <span class="p">}</span>
          <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_title</span><span class="p">(</span><span class="s1">&#39;Sign in&#39;</span><span class="p">)</span> <span class="p">}</span>
        <span class="k">end</span>

        <span class="n">describe</span> <span class="s2">&quot;visiting the followers page&quot;</span> <span class="k">do</span>
          <span class="n">before</span> <span class="p">{</span> <span class="n">visit</span> <span class="n">followers_user_path</span><span class="p">(</span><span class="n">user</span><span class="p">)</span> <span class="p">}</span>
          <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_title</span><span class="p">(</span><span class="s1">&#39;Sign in&#39;</span><span class="p">)</span> <span class="p">}</span>
        <span class="k">end</span>
      <span class="k">end</span>
      <span class="o">.</span>
      <span class="o">.</span>
      <span class="o">.</span>
    <span class="k">end</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>




<div class="label" id="code-following_followers_tests"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.29.</span> <span class="description">Тесты для <code>followed_users</code> и <code>followers</code> страниц. <br /> <code>spec/requests/user_pages_spec.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>

<span class="n">describe</span> <span class="s2">&quot;User pages&quot;</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">describe</span> <span class="s2">&quot;following/followers&quot;</span> <span class="k">do</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:other_user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
    <span class="n">before</span> <span class="p">{</span> <span class="n">user</span><span class="o">.</span><span class="n">follow!</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span> <span class="p">}</span>

    <span class="n">describe</span> <span class="s2">&quot;followed users&quot;</span> <span class="k">do</span>
      <span class="n">before</span> <span class="k">do</span>
        <span class="n">sign_in</span> <span class="n">user</span>
        <span class="n">visit</span> <span class="n">following_user_path</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
      <span class="k">end</span>

      <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_title</span><span class="p">(</span><span class="n">full_title</span><span class="p">(</span><span class="s1">&#39;Following&#39;</span><span class="p">))</span> <span class="p">}</span>
      <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_selector</span><span class="p">(</span><span class="s1">&#39;h3&#39;</span><span class="p">,</span> <span class="ss">text:</span> <span class="s1">&#39;Following&#39;</span><span class="p">)</span> <span class="p">}</span>
      <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_link</span><span class="p">(</span><span class="n">other_user</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="ss">href:</span> <span class="n">user_path</span><span class="p">(</span><span class="n">other_user</span><span class="p">))</span> <span class="p">}</span>
    <span class="k">end</span>

    <span class="n">describe</span> <span class="s2">&quot;followers&quot;</span> <span class="k">do</span>
      <span class="n">before</span> <span class="k">do</span>
        <span class="n">sign_in</span> <span class="n">other_user</span>
        <span class="n">visit</span> <span class="n">followers_user_path</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span>
      <span class="k">end</span>

      <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_title</span><span class="p">(</span><span class="n">full_title</span><span class="p">(</span><span class="s1">&#39;Followers&#39;</span><span class="p">))</span> <span class="p">}</span>
      <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_selector</span><span class="p">(</span><span class="s1">&#39;h3&#39;</span><span class="p">,</span> <span class="ss">text:</span> <span class="s1">&#39;Followers&#39;</span><span class="p">)</span> <span class="p">}</span>
      <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_link</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="ss">href:</span> <span class="n">user_path</span><span class="p">(</span><span class="n">user</span><span class="p">))</span> <span class="p">}</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Единственно сложная часть реализации это осуществление потребности добавления двух новых действий к контроллеру Users; основанных на маршрутах, определенных в <a class="ref" href="following-users#code-following_followers_actions_routes">Листинге&nbsp;11.18</a>, нам нужно назвать их <code>following</code> и <code>followers</code>. Каждому действию нужно установить заголовок, найти пользователя, вытянуть <code>@user.followed_users</code> или <code>@user.followers</code> (в пагинированной форме), а затем отренедерить страницу. Результат представлен в <a class="ref" href="following-users#code-following_followers_actions">Листинге&nbsp;11.30</a>.</p>

<div class="label" id="code-following_followers_actions"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.30.</span> <span class="description">Действия <code>following</code> и <code>followers</code>. <br /> <code>app/controllers/users_controller.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">UsersController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:signed_in_user</span><span class="p">,</span>
                <span class="ss">only:</span> <span class="o">[</span><span class="ss">:index</span><span class="p">,</span> <span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span class="p">,</span> <span class="ss">:destroy</span><span class="p">,</span> <span class="ss">:following</span><span class="p">,</span> <span class="ss">:followers</span><span class="o">]</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">following</span>
    <span class="vi">@title</span> <span class="o">=</span> <span class="s2">&quot;Following&quot;</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
    <span class="vi">@users</span> <span class="o">=</span> <span class="vi">@user</span><span class="o">.</span><span class="n">followed_users</span><span class="o">.</span><span class="n">paginate</span><span class="p">(</span><span class="ss">page:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:page</span><span class="o">]</span><span class="p">)</span>
    <span class="n">render</span> <span class="s1">&#39;show_follow&#39;</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">followers</span>
    <span class="vi">@title</span> <span class="o">=</span> <span class="s2">&quot;Followers&quot;</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
    <span class="vi">@users</span> <span class="o">=</span> <span class="vi">@user</span><span class="o">.</span><span class="n">followers</span><span class="o">.</span><span class="n">paginate</span><span class="p">(</span><span class="ss">page:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:page</span><span class="o">]</span><span class="p">)</span>
    <span class="n">render</span> <span class="s1">&#39;show_follow&#39;</span>
  <span class="k">end</span>

  <span class="kp">private</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Отметим здесь, что оба действия делают <em>явный</em> вызов <code>render</code>, в данном случае делая рендеринг представления, названного <code>show_follow</code>, которое мы должны создать. Причина создания общего представления в том, что  ERb является практически идентичным для обоих случаев, и <a class="ref" href="following-users#code-show_follow_view">Листинг&nbsp;11.31</a> охватывает их.</p>

<div class="label" id="code-show_follow_view"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.31.</span> <span class="description">Представление <code>show_follow</code> используемое для рендеринга читаемых и читателей. <br /> <code>app/views/users/show_follow.html.erb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%</span> <span class="n">provide</span><span class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="vi">@title</span><span class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;row&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;aside</span> <span class="na">class=</span><span class="s">&quot;span4&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;section&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">gravatar_for</span> <span class="vi">@user</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;h1&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@user</span><span class="o">.</span><span class="n">name</span> <span class="cp">%&gt;</span><span class="nt">&lt;/h1&gt;</span>
      <span class="nt">&lt;span&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">&quot;view my profile&quot;</span><span class="p">,</span> <span class="vi">@user</span> <span class="cp">%&gt;</span><span class="nt">&lt;/span&gt;</span>
      <span class="nt">&lt;span&gt;&lt;b&gt;</span>Microposts:<span class="nt">&lt;/b&gt;</span> <span class="cp">&lt;%=</span> <span class="vi">@user</span><span class="o">.</span><span class="n">microposts</span><span class="o">.</span><span class="n">count</span> <span class="cp">%&gt;</span><span class="nt">&lt;/span&gt;</span>
    <span class="nt">&lt;/section&gt;</span>
    <span class="nt">&lt;section&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">&#39;shared/stats&#39;</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%</span> <span class="k">if</span> <span class="vi">@users</span><span class="o">.</span><span class="n">any?</span> <span class="cp">%&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;user_avatars&quot;</span><span class="nt">&gt;</span>
          <span class="cp">&lt;%</span> <span class="vi">@users</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">user</span><span class="o">|</span> <span class="cp">%&gt;</span>
            <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">gravatar_for</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="ss">size:</span> <span class="mi">30</span><span class="p">),</span> <span class="n">user</span> <span class="cp">%&gt;</span>
          <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
      <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;/section&gt;</span>
  <span class="nt">&lt;/aside&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;span8&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;h3&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@title</span> <span class="cp">%&gt;</span><span class="nt">&lt;/h3&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">if</span> <span class="vi">@users</span><span class="o">.</span><span class="n">any?</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">&quot;users&quot;</span><span class="nt">&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="vi">@users</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;/ul&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">will_paginate</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
</div></div>


<p>С этим тесты должны пройти, а страницы должны выглядеть как на <a class="ref" href="following-users#fig-user_following">Рис.&nbsp;11.16</a> (читаемые) и <a class="ref" href="following-users#fig-user_followers">Рис.&nbsp;11.17</a> (читатели).</p>

<div class="label" id="fig-user_following"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/user_following_bootstrap.png" alt="user_following_bootstrap" /></span></div><div class="caption"><span class="header">Рисунок 11.16: </span><span class="description">Отображение пользователей, читаемых текущим пользователем.&nbsp;<a href="http://railstutorial.org/images/figures/user_following_bootstrap-full.png">(полный размер)</a></span></div></div>




<div class="label" id="fig-user_followers"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/user_followers_bootstrap.png" alt="user_followers_bootstrap" /></span></div><div class="caption"><span class="header">Рисунок 11.17: </span><span class="description">Отображение читателей текущего пользователя.&nbsp;<a href="http://railstutorial.org/images/figures/user_followers_bootstrap-full.png">(полный размер)</a></span></div></div>




<div class="label" id="sec-a_working_follow_button_the_standard_way"></div>


<h3><a id="sec-11_2_4" href="following-users#sec-a_working_follow_button_the_standard_way" class="heading"><span class="number">11.2.4</span> Стандартный способ реализации кнопки "читать" (follow)</a></h3>


<p>Теперь, когда наши представления в порядке, пришло время получить рабочие follow/unfollow кнопки. Тесты для этих кнопок комбинируют множество техник тестирования о которых было рассказано в этом учебнике и представляют из себя хорошее упражнение в чтении кода. Изучайте <a class="ref" href="following-users#code-follow_unfollow_button_tests">Листинг&nbsp;11.32</a> до тех пор пока не убедитесь что вы понимаете что и почему мы тестируем. (<a class="ref" href="following-users#code-follow_unfollow_button_tests">Листинг&nbsp;11.32</a> содержит одно небольшое упущение в безопасности; посмотрим, сможете ли вы выявить его. Мы скоро расскажем о нем.) Особенно обратите внимание на использование метода <code>have_xpath</code> использующего продвинутую и мощную технику <a href="http://ru.wikipedia.org/wiki/XPath">XPath</a> для навигации по XML документам (включая HTML5). Вы можете узнать больше о XPath с помощью поискового запроса <a href="http://www.w3schools.com/xpath/xpath_syntax.asp">XPath syntax</a>.</p>

<div class="label" id="code-follow_unfollow_button_tests"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.32.</span> <span class="description">Тесты для Follow/Unfollow кнопки. <br /> <code>spec/requests/user_pages_spec.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>

<span class="n">describe</span> <span class="s2">&quot;User pages&quot;</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">describe</span> <span class="s2">&quot;profile page&quot;</span> <span class="k">do</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="n">describe</span> <span class="s2">&quot;follow/unfollow buttons&quot;</span> <span class="k">do</span>
      <span class="n">let</span><span class="p">(</span><span class="ss">:other_user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
      <span class="n">before</span> <span class="p">{</span> <span class="n">sign_in</span> <span class="n">user</span> <span class="p">}</span>

      <span class="n">describe</span> <span class="s2">&quot;following a user&quot;</span> <span class="k">do</span>
        <span class="n">before</span> <span class="p">{</span> <span class="n">visit</span> <span class="n">user_path</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span> <span class="p">}</span>

        <span class="n">it</span> <span class="s2">&quot;should increment the followed user count&quot;</span> <span class="k">do</span>
          <span class="n">expect</span> <span class="k">do</span>
            <span class="n">click_button</span> <span class="s2">&quot;Follow&quot;</span>
          <span class="k">end</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">followed_users</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
        <span class="k">end</span>

        <span class="n">it</span> <span class="s2">&quot;should increment the other user&#39;s followers count&quot;</span> <span class="k">do</span>
          <span class="n">expect</span> <span class="k">do</span>
            <span class="n">click_button</span> <span class="s2">&quot;Follow&quot;</span>
          <span class="k">end</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="n">other_user</span><span class="o">.</span><span class="n">followers</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
        <span class="k">end</span>

        <span class="n">describe</span> <span class="s2">&quot;toggling the button&quot;</span> <span class="k">do</span>
          <span class="n">before</span> <span class="p">{</span> <span class="n">click_button</span> <span class="s2">&quot;Follow&quot;</span> <span class="p">}</span>
          <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_xpath</span><span class="p">(</span><span class="s2">&quot;//input[@value=&#39;Unfollow&#39;]&quot;</span><span class="p">)</span> <span class="p">}</span>
        <span class="k">end</span>
      <span class="k">end</span>

      <span class="n">describe</span> <span class="s2">&quot;unfollowing a user&quot;</span> <span class="k">do</span>
        <span class="n">before</span> <span class="k">do</span>
          <span class="n">user</span><span class="o">.</span><span class="n">follow!</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span>
          <span class="n">visit</span> <span class="n">user_path</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span>
        <span class="k">end</span>

        <span class="n">it</span> <span class="s2">&quot;should decrement the followed user count&quot;</span> <span class="k">do</span>
          <span class="n">expect</span> <span class="k">do</span>
            <span class="n">click_button</span> <span class="s2">&quot;Unfollow&quot;</span>
          <span class="k">end</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">followed_users</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="k">end</span>

        <span class="n">it</span> <span class="s2">&quot;should decrement the other user&#39;s followers count&quot;</span> <span class="k">do</span>
          <span class="n">expect</span> <span class="k">do</span>
            <span class="n">click_button</span> <span class="s2">&quot;Unfollow&quot;</span>
          <span class="k">end</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="n">other_user</span><span class="o">.</span><span class="n">followers</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="k">end</span>

        <span class="n">describe</span> <span class="s2">&quot;toggling the button&quot;</span> <span class="k">do</span>
          <span class="n">before</span> <span class="p">{</span> <span class="n">click_button</span> <span class="s2">&quot;Unfollow&quot;</span> <span class="p">}</span>
          <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_xpath</span><span class="p">(</span><span class="s2">&quot;//input[@value=&#39;Follow&#39;]&quot;</span><span class="p">)</span> <span class="p">}</span>
        <span class="k">end</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>

<p><a class="ref" href="following-users#code-follow_unfollow_button_tests">Листинг&nbsp;11.32</a> тестирует кнопки кликая по ним и проверяя соответствующее поведение. Написание реализации подразумевает чуть более глубокое погружения в тему: following и unfollowing включает <em>создание</em> и <em>уничтожение</em> взаимоотношений, что означает необходимость определения <code>create</code> и <code>destroy</code> действий в контроллере Relationships (который нам еще нужно создать). Хотя кнопки появляются только для вошедших пользователей, что дает нам безопасность верхнего уровня, тесты в <a class="ref" href="following-users#code-follow_unfollow_button_tests">Листинге&nbsp;11.32</a> упускают из виду безопасность на уровне контроллера, а именно: сами <code>create</code> и <code>destroy</code> должны быть доступны только для вошедших пользователей. (Это та самая уязвимость о которой мы говорили выше.) <a class="ref" href="following-users#code-relationships_controller_authorization_test">Листинг&nbsp;11.33</a> выражает эти требования с помощью <code>post</code> и <code>delete</code> методов вызывающих эти действия напрямую.</p>

<div class="label" id="code-relationships_controller_authorization_test"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.33.</span> <span class="description">Тестирование авторизации контроллера Relationships. <br /> <code>spec/requests/authentication_pages_spec.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>

<span class="n">describe</span> <span class="s2">&quot;Authentication&quot;</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">describe</span> <span class="s2">&quot;authorization&quot;</span> <span class="k">do</span>

    <span class="n">describe</span> <span class="s2">&quot;for non-signed-in users&quot;</span> <span class="k">do</span>
      <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
      <span class="o">.</span>
      <span class="o">.</span>
      <span class="o">.</span>
      <span class="n">describe</span> <span class="s2">&quot;in the Relationships controller&quot;</span> <span class="k">do</span>
        <span class="n">describe</span> <span class="s2">&quot;submitting to the create action&quot;</span> <span class="k">do</span>
          <span class="n">before</span> <span class="p">{</span> <span class="n">post</span> <span class="n">relationships_path</span> <span class="p">}</span>
          <span class="n">specify</span> <span class="p">{</span> <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">redirect_to</span><span class="p">(</span><span class="n">signin_path</span><span class="p">)</span> <span class="p">}</span>
        <span class="k">end</span>

        <span class="n">describe</span> <span class="s2">&quot;submitting to the destroy action&quot;</span> <span class="k">do</span>
          <span class="n">before</span> <span class="p">{</span> <span class="n">delete</span> <span class="n">relationship_path</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">}</span>
          <span class="n">specify</span> <span class="p">{</span> <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">redirect_to</span><span class="p">(</span><span class="n">signin_path</span><span class="p">)</span> <span class="p">}</span>
        <span class="k">end</span>
      <span class="k">end</span>
      <span class="o">.</span>
      <span class="o">.</span>
      <span class="o">.</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Обратите внимание, что, для того чтобы избежать лишней работы по созданию практически бесполезного объекта Relationship, тест <code>delete</code> хардкодит id&nbsp;<code>1</code> в именованном маршруте:</p>

<div class="code"><div class="highlight"><pre><span class="n">before</span> <span class="p">{</span> <span class="n">delete</span> <span class="n">relationship_path</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">}</span>
</pre></div>
</div>


<p>Это работает из-за того что пользователь должен быть перенаправлен прежде чем приложение даже попытается обратиться к взаимоотношению с этим&nbsp;id.</p>

<p>Код контроллера, необходимый для прохождения этих тестов удивительно краток: мы просто вытягиваем читаемого или читающего пользователя, а затем читаем или не читаем его сообщения используя соответствующий служебный метод. Полная реализация представлена в <a class="ref" href="following-users#code-relationships_controller">Листинге&nbsp;11.34</a>.</p>

<div class="label" id="code-relationships_controller"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.34.</span> <span class="description">Контроллер Relationships. <br /> <code>app/controllers/relationships_controller.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">RelationshipsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:signed_in_user</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:relationship</span><span class="o">][</span><span class="ss">:followed_id</span><span class="o">]</span><span class="p">)</span>
    <span class="n">current_user</span><span class="o">.</span><span class="n">follow!</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
    <span class="n">redirect_to</span> <span class="vi">@user</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">Relationship</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">followed</span>
    <span class="n">current_user</span><span class="o">.</span><span class="n">unfollow!</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
    <span class="n">redirect_to</span> <span class="vi">@user</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>

<p>В <a class="ref" href="following-users#code-relationships_controller">Листинге&nbsp;11.34</a> мы можем видеть почему уязвимость отмеченная выше является незначительной: если невошедший пользователь попробовал бы обратиться к любому из действий напрямую (например, с помощью инструмента командной строки вроде <tt>curl</tt>), <code>current_user</code> был бы <code>nil</code> и в обоих случаях вторая строка действий вызвала бы исключение, что привело бы к ошибке, но не нанесло бы вреда приложению или его данным. Однако лучше на это не полагаться, так что мы предприняли дополнительный шаг и добавили дополнительный уровень безопасности.</p>

<p>С этим ядро функциональности follow/unfollow завершено, и любой пользователь может читать (или не читать) сообщения любого другого пользователя, что вам стоит проверить и в вашем браузере и запустив набор тестов:</p>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> bundle <span class="nb">exec </span>rspec spec/
</pre></div>
</div>




<div class="label" id="sec-a_working_follow_button_with_ajax"></div>


<h3><a id="sec-11_2_5" href="following-users#sec-a_working_follow_button_with_ajax" class="heading"><span class="number">11.2.5</span> Реализация кнопки "читать" (follow) с Ajax</a></h3>


<p>Хотя наша реализация слежения за сообщениями пользователей является законченной и в своем нынешнем виде, нам осталось совсем немного подправить ее прежде чем заняться потоком сообщений. Вы могли заметить в <a class="ref" href="following-users#sec-a_working_follow_button_the_standard_way">Разделе&nbsp;11.2.4</a> что оба <code>create</code> и <code>destroy</code> действия в контроллере Relationships просто перенаправляют <em>обратно</em> к исходному профилю. Другими словами, пользователь начинает на странице профиля, подписывается на сообщения пользователя и немедленно перенаправляется на исходную страницу. Резонный вопрос - почему пользователь вообще должен покидать эту страницу?</p>

<p>Именно эту проблему решает <em>Ajax</em>, который позволяет веб страницам отправлять асинхронные запросы на сервер не покидая страницы.<sup class="footnote" id="fnref-11_8"><a href="#fn-11_8">8</a></sup> Поскольку практика добавления  Ajax в веб формы является довольно распространенной, Rails делает реализацию Ajax легкой. Действительно, обновление партиалов формы  follow/unfollow тривиально: просто заменим</p>

<div class="code"><div class="highlight"><pre><span class="n">form_for</span>
</pre></div>
</div>


<p>на</p>

<div class="code"><div class="highlight"><pre><span class="n">form_for</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">,</span> <span class="ss">remote:</span> <span class="kp">true</span>
</pre></div>
</div>


<p>и Rails <a href="http://catb.org/jargon/html/A/automagically.html">автомагически</a> будет использовать Ajax.<sup class="footnote" id="fnref-11_9"><a href="#fn-11_9">9</a></sup> Обновленные партиалы представлены в <a class="ref" href="following-users#code-follow_form_ajax">Листинге&nbsp;11.35</a> и <a class="ref" href="following-users#code-unfollow_form_ajax">Листинге&nbsp;11.36</a>.</p>

<div class="label" id="code-follow_form_ajax"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.35.</span> <span class="description">Форма для чтения сообщений пользователя использующая Ajax. <br /> <code>app/views/users/_follow.html.erb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span class="n">current_user</span><span class="o">.</span><span class="n">relationships</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="ss">followed_id:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">id</span><span class="p">),</span>
             <span class="ss">remote:</span> <span class="kp">true</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;div&gt;</span><span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">hidden_field</span> <span class="ss">:followed_id</span> <span class="cp">%&gt;</span><span class="nt">&lt;/div&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="s2">&quot;Follow&quot;</span><span class="p">,</span> <span class="ss">class:</span> <span class="s2">&quot;btn btn-large btn-primary&quot;</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
</div></div>




<div class="label" id="code-unfollow_form_ajax"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.36.</span> <span class="description">Форма для прекращения чтения сообщений пользователя использующая Ajax. <br /> <code>app/views/users/_unfollow.html.erb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span class="n">current_user</span><span class="o">.</span><span class="n">relationships</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">followed_id:</span> <span class="vi">@user</span><span class="p">),</span>
             <span class="ss">html:</span> <span class="p">{</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:delete</span> <span class="p">},</span>
             <span class="ss">remote:</span> <span class="kp">true</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="s2">&quot;Unfollow&quot;</span><span class="p">,</span> <span class="ss">class:</span> <span class="s2">&quot;btn btn-large&quot;</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
</div></div>


<p>HTML сгенерированный этим ERb не особенно относится к делу, но вам может быть любопытно, так что взгляните:</p>

<div class="code"><div class="highlight"><pre><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;/relationships/117&quot;</span> <span class="na">class=</span><span class="s">&quot;edit_relationship&quot;</span> <span class="na">data-remote=</span><span class="s">&quot;true&quot;</span>
      <span class="na">id=</span><span class="s">&quot;edit_relationship_117&quot;</span> <span class="na">method=</span><span class="s">&quot;post&quot;</span><span class="nt">&gt;</span>
  .
  .
  .
<span class="nt">&lt;/form&gt;</span>
</pre></div>
</div>


<p>Это устанавливает переменную <code>data-remote="true"</code> внутри тега формы, что говорит Rails о том, что форма будет обрабатываться JavaScript. Используя простое свойство HTML вместо вставки полного JavaScript кода (как в предыдущих версиях  Rails), Rails&nbsp;3 следует философии <a href="http://railscasts.com/episodes/205-unobtrusive-javascript"><em>ненавязчивого JavaScript</em></a>.</p>

<p>После обновления формы нам нужно уговорить контроллер Relationships отвечать на Ajax запросы. Тестирование Ajax является довольно сложным, и тщательное делание этого является большой темой со своими собственными правилами, но мы можем начать с кодом в <a class="ref" href="following-users#code-relationships_controller_spec_ajax">Листинге&nbsp;11.37</a>. Это использует <code>xhr</code> метод (от &ldquo;XmlHttpRequest&rdquo;) для выдачи Ajax запроса; сравните с <code>get</code>, <code>post</code>, <code>patch</code> и <code>delete</code> методами в предыдущих тестах. Затем мы проверяем что  <code>create</code> и <code>destroy</code> действия делают правильные вещи когда вызываются Ajax запросом. (Для написания более основательного набора тестов для насыщенных Ajax-ом приложений, взгляните на <a href="http://seleniumhq.org/">Selenium</a> и <a href="http://watir.com/">Watir</a>.)</p>

<div class="label" id="code-relationships_controller_spec_ajax"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.37.</span> <span class="description">Тесты для ответов контроллера Relationships на Ajax запросы. <br /> <code>spec/controllers/relationships_controller_spec.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>

<span class="n">describe</span> <span class="no">RelationshipsController</span> <span class="k">do</span>

  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">let</span><span class="p">(</span><span class="ss">:other_user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

  <span class="n">before</span> <span class="p">{</span> <span class="n">sign_in</span> <span class="n">user</span><span class="p">,</span> <span class="ss">no_capybara:</span> <span class="kp">true</span> <span class="p">}</span>

  <span class="n">describe</span> <span class="s2">&quot;creating a relationship with Ajax&quot;</span> <span class="k">do</span>

    <span class="n">it</span> <span class="s2">&quot;should increment the Relationship count&quot;</span> <span class="k">do</span>
      <span class="n">expect</span> <span class="k">do</span>
        <span class="n">xhr</span> <span class="ss">:post</span><span class="p">,</span> <span class="ss">:create</span><span class="p">,</span> <span class="ss">relationship:</span> <span class="p">{</span> <span class="ss">followed_id:</span> <span class="n">other_user</span><span class="o">.</span><span class="n">id</span> <span class="p">}</span>
      <span class="k">end</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="no">Relationship</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s2">&quot;should respond with success&quot;</span> <span class="k">do</span>
      <span class="n">xhr</span> <span class="ss">:post</span><span class="p">,</span> <span class="ss">:create</span><span class="p">,</span> <span class="ss">relationship:</span> <span class="p">{</span> <span class="ss">followed_id:</span> <span class="n">other_user</span><span class="o">.</span><span class="n">id</span> <span class="p">}</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_success</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">describe</span> <span class="s2">&quot;destroying a relationship with Ajax&quot;</span> <span class="k">do</span>

    <span class="n">before</span> <span class="p">{</span> <span class="n">user</span><span class="o">.</span><span class="n">follow!</span><span class="p">(</span><span class="n">other_user</span><span class="p">)</span> <span class="p">}</span>
    <span class="n">let</span><span class="p">(</span><span class="ss">:relationship</span><span class="p">)</span> <span class="p">{</span> <span class="n">user</span><span class="o">.</span><span class="n">relationships</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">followed_id:</span> <span class="n">other_user</span><span class="p">)</span> <span class="p">}</span>

    <span class="n">it</span> <span class="s2">&quot;should decrement the Relationship count&quot;</span> <span class="k">do</span>
      <span class="n">expect</span> <span class="k">do</span>
        <span class="n">xhr</span> <span class="ss">:delete</span><span class="p">,</span> <span class="ss">:destroy</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="n">relationship</span><span class="o">.</span><span class="n">id</span>
      <span class="k">end</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="no">Relationship</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s2">&quot;should respond with success&quot;</span> <span class="k">do</span>
      <span class="n">xhr</span> <span class="ss">:delete</span><span class="p">,</span> <span class="ss">:destroy</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="n">relationship</span><span class="o">.</span><span class="n">id</span>
      <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_success</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Код в <a class="ref" href="following-users#code-relationships_controller_spec_ajax">Листинге&nbsp;11.37</a> это наш первый пример тестов <em>контроллера</em>, которыми я ранее интенсивно пользовался (например в предыдущем издании этого учебника), но которым я сейчас предпочитаю интеграционные тесты. Однако в данном случае, метод <code>xhr</code> (по непонятным мне причинам) не доступен в интеграционных тестах. Хотя мы впервые используем <code>xhr</code>, в этой точке учебника вы, вероятно, уже можете понять из контекста чем занимается этот код:</p>

<div class="code"><div class="highlight"><pre><span class="n">xhr</span> <span class="ss">:post</span><span class="p">,</span> <span class="ss">:create</span><span class="p">,</span> <span class="ss">relationship:</span> <span class="p">{</span> <span class="ss">followed_id:</span> <span class="n">other_user</span><span class="o">.</span><span class="n">id</span> <span class="p">}</span>
</pre></div>
</div>


<p>Мы видим что <code>xhr</code> принимает в качестве аргумента символ для соответствующего метода HTTP, символ для действия и хэш представляющий собой содержимое <code>params</code> в самом контроллере. Как и в предыдущих примерах, мы используем <code>expect</code> для того чтобы обернуть операцию в блок и протестировать увеличение или уменьшение соответсвующего количества.</p>

<p>Как следует из тестов, код приложения использует те же <code>create</code> и <code>delete</code> действия для ответа на  Ajax запросы которые он выдает чтобы ответить на обычные <tt>POST</tt> и <tt>DELETE</tt> HTTP запросы. Все что нам нужно сделать это ответить на обычный HTTP запрос с переадресацией (как в <a class="ref" href="following-users#sec-a_working_follow_button_the_standard_way">Разделе&nbsp;11.2.4</a>) и ответить на  Ajax запрос с JavaScript. Код контроллера представлен в <a class="ref" href="following-users#code-relationships_controller_ajax">Листинге&nbsp;11.38</a>. (См. в <a class="ref" href="following-users#sec-following_exercises">Разделе&nbsp;11.5</a> пример показывающий более компактный способ выполнить то же самое.)</p>

<div class="label" id="code-relationships_controller_ajax"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.38.</span> <span class="description">Ответ на  Ajax запросы в контроллере Relationships. <br /> <code>app/controllers/relationships_controller.rb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">RelationshipsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:signed_in_user</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:relationship</span><span class="o">][</span><span class="ss">:followed_id</span><span class="o">]</span><span class="p">)</span>
    <span class="n">current_user</span><span class="o">.</span><span class="n">follow!</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
      <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="vi">@user</span> <span class="p">}</span>
      <span class="nb">format</span><span class="o">.</span><span class="n">js</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">Relationship</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">followed</span>
    <span class="n">current_user</span><span class="o">.</span><span class="n">unfollow!</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
      <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="vi">@user</span> <span class="p">}</span>
      <span class="nb">format</span><span class="o">.</span><span class="n">js</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Этот код использует <code>respond_to</code> чтобы принять соответствующее действие в зависимости от вида запроса. (Это <code>respond_to</code> никак не связано с <code>respond_to</code> используемым в примерах RSpec.) Синтаксис может запутать и  важно понимать, что в</p>

<div class="code"><div class="highlight"><pre><span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
  <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="vi">@user</span> <span class="p">}</span>
  <span class="nb">format</span><span class="o">.</span><span class="n">js</span>
<span class="k">end</span>
</pre></div>
</div>


<p>выполняется только <em>одна</em> из строк (в зависимости от характера запроса).</p>

<p>В случае Ajax запроса, Rails автоматически вызывает <em>JavaScript Embedded Ruby</em> (<code>.js.erb</code>) файл с тем же именем что и действие, т.е., <code>create.js.erb</code> или <code>destroy.js.erb</code>. Как вы можете догадаться, эти файлы позволяют смешивать JavaScript и Embedded Ruby для выполнения действий на текущей странице. Именно эти файлы нам нужны для создания и редактирования страницы профиля пользователя после начала слежения за сообщениями пользователя или после его прекращения.</p>

<p>Внутри JS-ERb файла, Rails автоматически обеспечивает <a href="http://jquery.com/">jQuery</a> JavaScript хелперы для манипуляции страницей при помощи <a href="http://www.w3.org/DOM/">Document Object Model (DOM)</a>. Библиотека jQuery предоставляет большое количество методов для манипуляции DOM, но здесь нам понадобятся только два. Во первых мы должны знать о синтаксисе знака доллара, используемого для доступа к DOM элементу опираясь на его уникальный CSS&nbsp;id. Например, для манипуляции элементом <code>follow_form</code>, мы используем синтаксис</p>

<div class="code"><div class="highlight"><pre><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#follow_form&quot;</span><span class="p">)</span>
</pre></div>
</div>


<p>(Вспомните из <a class="ref" href="following-users#code-follow_form_partial">Листинга&nbsp;11.23</a> что это  <code>div</code> который обертывает форму, а не сама форма.) Этот синтаксис, вдохновленный CSS, использует символ&nbsp;<code>#</code> для указания CSS&nbsp;id. Как вы можете догадаться, jQuery, как и CSS, использует точку&nbsp;<code>.</code> для манипуляций с CSS классами.</p>

<p>Второй метод который нам потребуется это <code>html</code>, который обновляет HTML внутри соответствующего элемента содержимым своего аргумента. Например, чтобы полностью заменить follow form на строку <code>"foobar"</code>, мы можем написать</p>

<div class="code"><div class="highlight"><pre><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#follow_form&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="s2">&quot;foobar&quot;</span><span class="p">)</span>
</pre></div>
</div>


<p>В отличие от простых JavaScript файлов, JS-ERb файлы позволяют также использовать Embedded Ruby, что мы применяем в <code>create.js.erb</code> файле для замены формы на партиал <code>unfollow</code> (это то, что должно быть видно после успешной подписки на сообщения пользователя) и обновления количества читаемых. Результат представлен в <a class="ref" href="following-users#code-create_js_erb">Листинг&nbsp;11.39</a>. Здесь используется функция <code>escape_javascript</code>, которая необходима для маскирования результатов при вставке HTML в файл JavaScript.</p>

<div class="label" id="code-create_js_erb"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.39.</span> <span class="description">JavaScript Embedded Ruby для создания взаимоотношения при чтении сообщений другого пользователя. <br /> <code>app/views/relationships/create.js.erb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#follow_form&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="s2">&quot;&lt;%= escape_javascript(render(&#39;users/unfollow&#39;)) %&gt;&quot;</span><span class="p">)</span>
<span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#followers&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="s1">&#39;&lt;%= @user.followers.count %&gt;&#39;</span><span class="p">)</span>
</pre></div>
</div></div>


<p>Файл <code>destroy.js.erb</code> аналогичен (<a class="ref" href="following-users#code-destroy_js_erb">Листинг&nbsp;11.40</a>).</p>

<div class="label" id="code-destroy_js_erb"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.40.</span> <span class="description">Ruby JavaScript (RJS) для уничтожения взаимоотношения при отказе от чтения сообщений другого пользователя. <br /> <code>app/views/relationships/destroy.js.erb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#follow_form&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="s2">&quot;&lt;%= escape_javascript(render(&#39;users/follow&#39;)) %&gt;&quot;</span><span class="p">)</span>
<span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#followers&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="s1">&#39;&lt;%= @user.followers.count %&gt;&#39;</span><span class="p">)</span>
</pre></div>
</div></div>


<p>Теперь вам следует перейти на страницу профиля пользователя и проверить, что вы можете следить и не следить за сообщениями пользователей без обновления страницы, а набор тестов должен позеленеть:</p>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> bundle <span class="nb">exec </span>rspec spec/
</pre></div>
</div>


<p>Использование Ajax в Rails является большой и стремительно развивающейся темой, и здесь мы лишь слегка коснулись ее, но (как и с остальными материалами в этом учебнике) наш подход дает вам хорошую основу для изучения более продвинутых ресурсов.</p>

<div class="label" id="sec-the_status_feed"></div>


<h2><a id="sec-11_3" href="following-users#sec-the_status_feed" class="heading"><span class="number">11.3</span> Поток сообщений</a></h2>


<p>Мы подошли к кульминации нашего примера приложения: потоку сообщений. Соответствено, этот раздел содержит некоторые из самых продвинутых материалов в данном учебнике. Полноценный поток сообщений опирается на свой прототип из <a class="ref" href="user-microposts#sec-a_proto_feed">Раздела&nbsp;10.3.3</a> и собирает массив микросообщений из микросообщений читаемых пользователей, совместно с собственными микросообщениями текущего пользователя. Чтобы совершить этот подвиг, нам понадобятся некоторые довольно продвинутые Rails, Ruby и даже SQL техники программирования.</p>

<p>Так как нам предстоит тяжелая работа, особенно важно понимать куда мы будем двигаться. Резюме окончательного потока сообщений пользователя, показанный на <a class="ref" href="following-users#fig-page_flow_home_page_feed_mockup">Рис.&nbsp;11.5</a>, вновь показан на <a class="ref" href="following-users#fig-home_page_feed_mockup">Рис.&nbsp;11.18</a>.</p>

<div class="label" id="fig-home_page_feed_mockup"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/page_flow_home_page_feed_mockup_bootstrap.png" alt="page_flow_home_page_feed_mockup_bootstrap" /></span></div><div class="caption"><span class="header">Рисунок 11.18: </span><span class="description">Набросок пользовательской страницы Home с потоком сообщений.&nbsp;<a href="http://railstutorial.org/images/figures/page_flow_home_page_feed_mockup_bootstrap-full.png">(полный размер)</a></span></div></div>




<div class="label" id="sec-motivation_and_strategy"></div>


<h3><a id="sec-11_3_1" href="following-users#sec-motivation_and_strategy" class="heading"><span class="number">11.3.1</span> Мотивация и стратегия</a></h3>


<p>Основная идея потока сообщений проста. <a class="ref" href="following-users#fig-user_feed">Рис.&nbsp;11.19</a> показывает пример таблицы базы данных <code>microposts</code> и результирующий поток сообщений. Цель потока заключается в вытягивании микросообщений чей user id соответствует пользователям, сообщения которых читает текущий пользователь (и id самого текущего пользователя), как указано стрелками на схеме.</p>

<div class="label" id="fig-user_feed"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/user_feed.png" alt="user_feed" /></span></div><div class="caption"><span class="header">Рисунок 11.19: </span><span class="description">Поток сообщений для пользователя (id 1) читающего сообщения пользователей  2, 7, 8 и 10.</span></div></div>


<p>Поскольку нам необходим способ найти все микросообщения пользователей, за которыми следит данный пользователь, мы запланируем реализацию метода называемого <code>from_users_followed_by</code>, который мы будем использовать следующим образом:</p>

<div class="code"><div class="highlight"><pre><span class="no">Micropost</span><span class="o">.</span><span class="n">from_users_followed_by</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</pre></div>
</div>


<p>Хотя мы пока не знаем как реализовать его, мы уже можем написать тесты для его функциональности. Ключевым моментом является проверка всех трех требований к потоку: микросообщения читаемых пользователей и самого пользователя должны быт включены в поток, но в него не должны попадать сообщения пользователей, от чтения которых пользователь отписался. Первые два требования уже представлены в наших тестах: <a class="ref" href="user-microposts#code-feed_specs">Листинг&nbsp;10.35</a> проверяет что собственные микросообщения пользователя представлены в потоке, в то время как микросообщений отписанных пользователей быть не должно. Теперь, когда мы знаем как следить за сообщениями пользователей, мы можем добавить третий тип тестов, в этот раз проверяющих что микросообщения читаемых пользователей представлены в потоке, как это показано в <a class="ref" href="following-users#code-full_feed_specs">Листинге&nbsp;11.41</a>.</p>

<div class="label" id="code-full_feed_specs"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.41.</span> <span class="description">Финальные тесты для потока сообщений. <br /> <code>spec/models/user_spec.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>

<span class="n">describe</span> <span class="no">User</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">describe</span> <span class="s2">&quot;micropost associations&quot;</span> <span class="k">do</span>
    <span class="n">before</span> <span class="p">{</span> <span class="vi">@user</span><span class="o">.</span><span class="n">save</span> <span class="p">}</span>
    <span class="n">let!</span><span class="p">(</span><span class="ss">:older_micropost</span><span class="p">)</span> <span class="k">do</span>
      <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:micropost</span><span class="p">,</span> <span class="ss">user:</span> <span class="vi">@user</span><span class="p">,</span> <span class="ss">created_at:</span> <span class="mi">1</span><span class="o">.</span><span class="n">day</span><span class="o">.</span><span class="n">ago</span><span class="p">)</span>
    <span class="k">end</span>
    <span class="n">let!</span><span class="p">(</span><span class="ss">:newer_micropost</span><span class="p">)</span> <span class="k">do</span>
      <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:micropost</span><span class="p">,</span> <span class="ss">user:</span> <span class="vi">@user</span><span class="p">,</span> <span class="ss">created_at:</span> <span class="mi">1</span><span class="o">.</span><span class="n">hour</span><span class="o">.</span><span class="n">ago</span><span class="p">)</span>
    <span class="k">end</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="n">describe</span> <span class="s2">&quot;status&quot;</span> <span class="k">do</span>
      <span class="n">let</span><span class="p">(</span><span class="ss">:unfollowed_post</span><span class="p">)</span> <span class="k">do</span>
        <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:micropost</span><span class="p">,</span> <span class="ss">user:</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">))</span>
      <span class="k">end</span>
      <span class="n">let</span><span class="p">(</span><span class="ss">:followed_user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>

      <span class="n">before</span> <span class="k">do</span>
        <span class="vi">@user</span><span class="o">.</span><span class="n">follow!</span><span class="p">(</span><span class="n">followed_user</span><span class="p">)</span>
        <span class="mi">3</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">followed_user</span><span class="o">.</span><span class="n">microposts</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">content:</span> <span class="s2">&quot;Lorem ipsum&quot;</span><span class="p">)</span> <span class="p">}</span>
      <span class="k">end</span>

      <span class="n">its</span><span class="p">(</span><span class="ss">:feed</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="kp">include</span><span class="p">(</span><span class="n">newer_micropost</span><span class="p">)</span> <span class="p">}</span>
      <span class="n">its</span><span class="p">(</span><span class="ss">:feed</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="kp">include</span><span class="p">(</span><span class="n">older_micropost</span><span class="p">)</span> <span class="p">}</span>
      <span class="n">its</span><span class="p">(</span><span class="ss">:feed</span><span class="p">)</span> <span class="p">{</span> <span class="n">should_not</span> <span class="kp">include</span><span class="p">(</span><span class="n">unfollowed_post</span><span class="p">)</span> <span class="p">}</span>
      <span class="n">its</span><span class="p">(</span><span class="ss">:feed</span><span class="p">)</span> <span class="k">do</span>
        <span class="n">followed_user</span><span class="o">.</span><span class="n">microposts</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">micropost</span><span class="o">|</span>
          <span class="n">should</span> <span class="kp">include</span><span class="p">(</span><span class="n">micropost</span><span class="p">)</span>
        <span class="k">end</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Сам поток сообщений просто перекладывает тяжелую работу на <code>Micropost.from_users_followed_by</code>, как это показано в <a class="ref" href="following-users#code-user_feed">Листинге&nbsp;11.42</a>.</p>

<div class="label" id="code-user_feed"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.42.</span> <span class="description">Добавление завершенного потока сообщений к модели User. <br /> <code>app/models/user.rb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord::Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">feed</span>
    <span class="no">Micropost</span><span class="o">.</span><span class="n">from_users_followed_by</span><span class="p">(</span><span class="nb">self</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>




<div class="label" id="sec-a_first_feed_implementation"></div>


<h3><a id="sec-11_3_2" href="following-users#sec-a_first_feed_implementation" class="heading"><span class="number">11.3.2</span> Первая реализация потока сообщений</a></h3>


<p>Пришло время реализовать <code>Micropost.from_users_followed_by</code>, который мы для простоты будем называть &ldquo;поток&rdquo;. Поскольку конечный результат довольно сложен, мы будем строить итоговую реализацию потока по кусочкам.</p>

<p>В первую очередь нужно  подумать о том, какой  вид запроса нам нужен. Что мы хотим сделать, это выбрать из таблицы <code>microposts</code> все микросообщения с id соответствующими пользователям, читаемыми данным пользователем (или  самому пользователю). Мы можем схематически написать это следующим образом:</p>

<div class="code"><div class="highlight"><pre><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">microposts</span>
<span class="k">WHERE</span> <span class="n">user_id</span> <span class="k">IN</span> <span class="p">(</span><span class="o">&lt;</span><span class="n">list</span> <span class="k">of</span> <span class="n">ids</span><span class="o">&gt;</span><span class="p">)</span> <span class="k">OR</span> <span class="n">user_id</span> <span class="o">=</span> <span class="o">&lt;</span><span class="k">user</span> <span class="n">id</span><span class="o">&gt;</span>
</pre></div>
</div>


<p>При написании этого кода мы предположили, что SQL поддерживает ключевое слово <code>IN</code>, что позволяет нам протестировать множественное включение. (К счастью это так.)</p>

<p>Вспомним из предварительной реализации потока в <a class="ref" href="user-microposts#sec-a_proto_feed">Разделе&nbsp;10.3.3</a> что Active Record использует <code>where</code> метод для осуществления вида выбора, показанного выше, что иллюстрирует <a class="ref" href="user-microposts#code-proto_status_feed">Листинг&nbsp;10.36</a>. Там наша выборка была очень простой; мы просто взяли все микросообщения с user id соответствующим текущему пользователю:</p>

<div class="code"><div class="highlight"><pre><span class="no">Micropost</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;user_id = ?&quot;</span><span class="p">,</span> <span class="nb">id</span><span class="p">)</span>
</pre></div>
</div>


<p>Здесь мы ожидаем, что он будет более сложным, чем то вроде</p>

<div class="code"><div class="highlight"><pre><span class="n">where</span><span class="p">(</span><span class="s2">&quot;user_id in (?) OR user_id = ?&quot;</span><span class="p">,</span> <span class="n">following_ids</span><span class="p">,</span> <span class="n">user</span><span class="p">)</span>
</pre></div>
</div>


<p>(Здесь мы в состоянии использовать, согласно Rails конвенции, <code>user</code> вместо <code>user.id</code>; Rails автоматически использует&nbsp;<code>id</code>. Мы также опустили впереди идущую часть <code>Micropost.</code> поскольку мы ожидаем что этот метод будет жить в самой модели Micropost.)</p>

<p>Мы видим из этих условий, что нам нужен массив  id пользователей, читаемых данным пользователем (или какой-то эквивалент). Один из способов сделать это заключается в использовании Ruby метода <code>map</code>, доступного на любом &ldquo;перечисляемом&rdquo; объекте, т.е., любом объекте (таком как Массив или Хэш), который состоит из коллекции элементов.<sup class="footnote" id="fnref-11_10"><a href="#fn-11_10">10</a></sup> Мы видели пример этого метода в <a class="ref" href="rails-flavored-ruby#sec-blocks">Разделе&nbsp;4.3.2</a>; он работает следующим образом:</p>

<div class="code"><div class="highlight"><pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="o">].</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span><span class="o">.</span><span class="n">to_s</span> <span class="p">}</span>
<span class="go">=&gt; [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;]</span>
</pre></div>
</div>


<p>Ситуации, подобные той, что показана выше, где такой же метод (например, <code>to_s</code>) вызывается на каждый элемент, настолько обычная вещь, что есть сокращенная запись, использующая <em>ампресанд</em>&nbsp;<code>&amp;</code> и символ, соответствующий методу:<sup class="footnote" id="fnref-11_11"><a href="#fn-11_11">11</a></sup></p>

<div class="code"><div class="highlight"><pre><span class="gp">&gt;&gt; </span><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="o">].</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span>
<span class="go">=&gt; [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;]</span>
</pre></div>
</div>


<p>Используя метод <code>join</code> (<a class="ref" href="rails-flavored-ruby#sec-arrays_and_ranges">Раздел&nbsp;4.3.1</a>), мы можем создать строку состоящую из  id объединив их через запятую-пробел:</p>

<div class="code"><div class="highlight"><pre><span class="gp">&gt;&gt; </span><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="o">].</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">)</span>
<span class="go">=&gt; &quot;1, 2, 3, 4&quot;</span>
</pre></div>
</div>


<p>Мы можем использовать вышеприведенный метод для построения необходимого массива id читаемых пользователей вызвав&nbsp;<code>id</code> на каждом элементе в <code>user.followed_users</code>. Например, для первого пользователя в базе данных этот массив выглядит следующим образом:</p>

<div class="code"><div class="highlight"><pre><span class="gp">&gt;&gt; </span><span class="no">User</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">followed_users</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:id</span><span class="p">)</span>
<span class="go">=&gt; [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,</span>
<span class="go">24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,</span>
<span class="go">43, 44, 45, 46, 47, 48, 49, 50, 51]</span>
</pre></div>
</div>


<p>Фактически, так как конструкции такого вида очень полезны, Active Record обеспечивает ее по умолчанию:</p>

<div class="code"><div class="highlight"><pre><span class="gp">&gt;&gt; </span><span class="no">User</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">followed_user_ids</span>
<span class="go">=&gt; [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,</span>
<span class="go">24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,</span>
<span class="go">43, 44, 45, 46, 47, 48, 49, 50, 51]</span>
</pre></div>
</div>


<p>Здесь метод <code>followed_user_ids</code> синтезирован библиотекой Active Record на основе ассоциации <code>has_many :followed_users</code> (<a class="ref" href="following-users#code-has_many_following_through_relationships">Листинг&nbsp;11.10</a>); в результате, для получения id соответствующих коллекции <code>user.followed_users</code>, нам достаточно добавить <code>_ids</code> к названию ассоциации. Строка id читаемых пользователей тогда будет выглядеть следующим образом:</p>

<div class="code"><div class="highlight"><pre><span class="gp">&gt;&gt; </span><span class="no">User</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">followed_user_ids</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">)</span>
<span class="go">=&gt; &quot;4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,</span>
<span class="go">24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,</span>
<span class="go">43, 44, 45, 46, 47, 48, 49, 50, 51&quot;</span>
</pre></div>
</div>


<p>Однако при вставке строки в SQL, вам нет надобности делать этого; интерполяция <code>?</code> заботится об этом за вас (и фактически устраняет некоторые несовместимости связанные с базой данных). Это означает что мы можем использовать</p>

<div class="code"><div class="highlight"><pre><span class="n">user</span><span class="o">.</span><span class="n">followed_user_ids</span>
</pre></div>
</div>


<p>само по себе.</p>

<p>В этой точке вы можете догадаться что код вроде</p>

<div class="code"><div class="highlight"><pre><span class="no">Micropost</span><span class="o">.</span><span class="n">from_users_followed_by</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</pre></div>
</div>


<p>будет включать в себя метод класса в <code>Micropost</code> классе (конструкция кратко упоминавшаяся в <a class="ref" href="rails-flavored-ruby#sec-constructors">Разделе&nbsp;4.4.1</a>). Предполагаемая реализация с этими строками представлена в <a class="ref" href="following-users#code-from_users_followed_by_first_cut">Листинге&nbsp;11.43</a>.</p>

<div class="label" id="code-from_users_followed_by_first_cut"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.43.</span> <span class="description">Первый дубль для  <code>from_users_followed_by</code> метода. <br /> <code>app/models/micropost.rb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">Micropost</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord::Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">from_users_followed_by</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
    <span class="n">followed_user_ids</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span class="n">followed_user_ids</span>
    <span class="n">where</span><span class="p">(</span><span class="s2">&quot;user_id IN (?) OR user_id = ?&quot;</span><span class="p">,</span> <span class="n">followed_user_ids</span><span class="p">,</span> <span class="n">user</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Хотя обсуждение ведущее к <a class="ref" href="following-users#code-from_users_followed_by_first_cut">Листингу&nbsp;11.43</a> было выдержано в гипотетических тонах, он действительно работает! Вы можете проверить это запустив набор тестов, которые должны пройти:</p>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> bundle <span class="nb">exec </span>rspec spec/
</pre></div>
</div>


<p>В большинстве приложений этой начальной реализации было бы вполне достаточно для большинства практических целей. Но это не финальная реализация; посмотрим, сможете ли вы догадаться почему, прежде чем перейти к следующему разделу. (<em>Намек:</em> А что если пользователь следит за сообщениями 5000 других пользователей?)</p>

<div class="label" id="sec-scopes_subselects_and_a_lambda"></div>


<h3><a id="sec-11_3_3" href="following-users#sec-scopes_subselects_and_a_lambda" class="heading"><span class="number">11.3.3</span> Подзапросы</a></h3>


<p>Как намекалось в последнем разделе, реализация потока сообщений в <a class="ref" href="following-users#sec-a_first_feed_implementation">Section&nbsp;11.3.2</a> не очень хорошо масштабируется при большом количестве микросообщений, что скорее всего произойдет если пользователь начнет читать сообщения, скажем, 5000  других пользователей. В этом разделе мы повторно реализуем ленту сообщений способом, который лучше масштабируется с количеством читаемых пользователей.</p>

<p>Проблема с кодом из <a class="ref" href="following-users#sec-a_first_feed_implementation">Раздела&nbsp;11.3.2</a> в том что</p>

<div class="code"><div class="highlight"><pre><span class="n">followed_user_ids</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span class="n">followed_user_ids</span>
</pre></div>
</div>


<p>вытягивает <em>всех</em> читаемых пользователей в память и создает массив длинной во весь список читаемых пользователей. Поскольку условие в <a class="ref" href="following-users#code-from_users_followed_by_first_cut">Листинге&nbsp;11.43</a> на самом деле лишь проверяет включение во множество, должен быть более эффективный способ для этого, да и SQL оптимизирован именно для таких множественных операций. Решение заключается в отправке поиска id читаемых пользователей в базу данных с помощью <em>подзапроса</em>.</p>

<p>Мы начнем с рефакторинга потока немного модифицированным кодом в <a class="ref" href="following-users#code-from_users_followed_by_second_cut">Листинге&nbsp;11.44</a>.</p>

<div class="label" id="code-from_users_followed_by_second_cut"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.44.</span> <span class="description">Улучшение <code>from_users_followed_by</code>. <br /> <code>app/models/micropost.rb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">Micropost</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord::Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Returns microposts from the users being followed by the given user.</span>
  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">from_users_followed_by</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
    <span class="n">followed_user_ids</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span class="n">followed_user_ids</span>
    <span class="n">where</span><span class="p">(</span><span class="s2">&quot;user_id IN (:followed_user_ids) OR user_id = :user_id&quot;</span><span class="p">,</span>
          <span class="ss">followed_user_ids:</span> <span class="n">followed_user_ids</span><span class="p">,</span> <span class="ss">user_id:</span> <span class="n">user</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>В качестве подготовки к следующему шагу мы заменили</p>

<div class="code"><div class="highlight"><pre><span class="n">where</span><span class="p">(</span><span class="s2">&quot;user_id IN (?) OR user_id = ?&quot;</span><span class="p">,</span> <span class="n">followed_user_ids</span><span class="p">,</span> <span class="n">user</span><span class="p">)</span>
</pre></div>
</div>


<p>на эквивалентное</p>

<div class="code"><div class="highlight"><pre><span class="n">where</span><span class="p">(</span><span class="s2">&quot;user_id IN (:followed_user_ids) OR user_id = :user_id&quot;</span><span class="p">,</span>
      <span class="ss">followed_user_ids:</span> <span class="n">followed_user_ids</span><span class="p">,</span> <span class="ss">user_id:</span> <span class="n">user</span><span class="p">)</span>
</pre></div>
</div>


<p>Синтаксис со знаком вопроса хорош, но когда мы хотим <em>ту же</em> переменную вставить более чем в одном месте, второй вариант синтаксиса является более удобным.</p>

<p>Обсуждение выше привело нас к тому что мы добавим <em>второе</em> вхождение <code>user_id</code> в SQL запросе. В частности, мы можем заменить Ruby код</p>

<div class="code"><div class="highlight"><pre><span class="n">followed_user_ids</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span class="n">followed_user_ids</span>
</pre></div>
</div>


<p>на фрагмент SQL</p>

<div class="code"><div class="highlight"><pre><span class="n">followed_user_ids</span> <span class="o">=</span> <span class="s2">&quot;SELECT followed_id FROM relationships</span>
<span class="s2">                     WHERE follower_id = :user_id&quot;</span>
</pre></div>
</div>


<p>Этот код содержит подзапрос SQL и внутренне вся выборка для пользователя&nbsp;1 будет выглядеть примерно так:</p>

<div class="code"><div class="highlight"><pre><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">microposts</span>
<span class="k">WHERE</span> <span class="n">user_id</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">followed_id</span> <span class="k">FROM</span> <span class="n">relationships</span>
                  <span class="k">WHERE</span> <span class="n">follower_id</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span>
      <span class="k">OR</span> <span class="n">user_id</span> <span class="o">=</span> <span class="mi">1</span>
</pre></div>
</div>


<p>Этот подзапрос организует всю логику для отправки в базу данных, что является более эффективным.<sup class="footnote" id="fnref-11_12"><a href="#fn-11_12">12</a></sup></p>

<p>С этим фундаментом мы готовы к эффективной релизации потока сообщений, как видно в <a class="ref" href="following-users#code-from_users_followed_by_final">Листинге&nbsp;11.45</a>. Обратите внимание, что, так как теперь это чистый SQL, <code>followed_user_ids</code> является <em>интерполированным</em>, а не маскированным. (На самом деле рабочими являются оба варианта, но мне кажется более логичным интерполировать в данном контексте.)</p>

<div class="label" id="code-from_users_followed_by_final"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.45.</span> <span class="description">Финальная реализация <code>from_users_followed_by</code>. <br /> <code>app/models/micropost.rb</code></span></div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">Micropost</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord::Base</span>
  <span class="n">belongs_to</span> <span class="ss">:user</span>
  <span class="n">default_scope</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">order</span><span class="p">(</span><span class="s1">&#39;created_at DESC&#39;</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">validates</span> <span class="ss">:content</span><span class="p">,</span> <span class="ss">presence:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">length:</span> <span class="p">{</span> <span class="ss">maximum:</span> <span class="mi">140</span> <span class="p">}</span>
  <span class="n">validates</span> <span class="ss">:user_id</span><span class="p">,</span> <span class="ss">presence:</span> <span class="kp">true</span>

  <span class="c1"># Returns microposts from the users being followed by the given user.</span>
  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">from_users_followed_by</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
    <span class="n">followed_user_ids</span> <span class="o">=</span> <span class="s2">&quot;SELECT followed_id FROM relationships</span>
<span class="s2">                         WHERE follower_id = :user_id&quot;</span>
    <span class="n">where</span><span class="p">(</span><span class="s2">&quot;user_id IN (</span><span class="si">#{</span><span class="n">followed_user_ids</span><span class="si">}</span><span class="s2">) OR user_id = :user_id&quot;</span><span class="p">,</span>
          <span class="ss">user_id:</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>


<p>Этот код представляет собой внушительную комбинацию Rails, Ruby, и SQL, но он делает свою работу и делает ее хорошо. (Конечно же, даже подзапрос не является универсальным решением для масштабирования. Для бОльших сайтов, вам, вероятно, потребуется генерировать поток асинхронно с помощью фонового процесса. Такие тонкости масштабирования выходят за рамки данного руководства.)</p>

<div class="label" id="sec-the_new_status_feed"></div>


<h3><a id="sec-11_3_4" href="following-users#sec-the_new_status_feed" class="heading"><span class="number">11.3.4</span> Новый поток сообщений</a></h3>


<p>С кодом в <a class="ref" href="following-users#code-from_users_followed_by_final">Листинге&nbsp;11.45</a>, наш поток сообщений завершен. Напомним, что код для Home страницы, представлен в <a class="ref" href="following-users#code-real_feed_instance_variable">Листинге&nbsp;11.46</a>; этот код создает пагинированный поток соответствущих микросообщений для использования в представлении, как видно в <a class="ref" href="following-users#fig-home_page_with_feed">Рис.&nbsp;11.20</a>.<sup class="footnote" id="fnref-11_13"><a href="#fn-11_13">13</a></sup> Отметим, что <code>paginate</code> метод фактически достигает цели в методе модели  Micropost в <a class="ref" href="following-users#code-from_users_followed_by_final">Листинге&nbsp;11.45</a>, организуя вытягивание только&nbsp;30 микросообщений за раз из базы данных. (Вы можете проверить это изучив SQL выражения в логах сервера разработки.)</p>

<div class="label" id="code-real_feed_instance_variable"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.46.</span> <span class="description">Действие <code>home</code> с пагинированным потоком. <br /> <code>app/controllers/static_pages_controller.rb</code></span>
</div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">StaticPagesController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">home</span>
    <span class="k">if</span> <span class="n">signed_in?</span>
      <span class="vi">@micropost</span>  <span class="o">=</span> <span class="n">current_user</span><span class="o">.</span><span class="n">microposts</span><span class="o">.</span><span class="n">build</span>
      <span class="vi">@feed_items</span> <span class="o">=</span> <span class="n">current_user</span><span class="o">.</span><span class="n">feed</span><span class="o">.</span><span class="n">paginate</span><span class="p">(</span><span class="ss">page:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:page</span><span class="o">]</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
</div></div>




<div class="label" id="fig-home_page_with_feed"></div>


<div class="figure"><div class="center"><span class="graphic"><img src="/images/figures/home_page_with_feed_bootstrap.png" alt="home_page_with_feed_bootstrap" /></span></div><div class="caption"><span class="header">Рисунок 11.20: </span><span class="description">Home страница с работающим потоком сообщений.&nbsp;<a href="http://railstutorial.org/images/figures/home_page_with_feed_bootstrap-full.png">(полный размер)</a></span></div></div>




<div class="label" id="sec-following_conclusion"></div>


<h2><a id="sec-11_4" href="following-users#sec-following_conclusion" class="heading"><span class="number">11.4</span> Заключение</a></h2>


<p>Добавив ленту сообщений, мы закончили ключевой пример приложения <em>Учебника Ruby on Rails</em>. Это приложение включает в себя примеры всех основных возможностей Rails, включая модели, представления, контроллеры, шаблоны, партиалы, фильтры, валидации, обратные вызовы, <code>has_many</code>/<code>belongs_to</code> и <code>has_many through</code> ассоциации, безопасность, тестирование и развертывание. Несмотря на этот внушительный список, вам предстоит еще очень многое узнать о Rails. В качестве первого шага на этом пути, этот раздел содержит некоторые рекомендуемые расширения основного приложения, а также рекомендации для дальнейшего обучения.</p>

<p>Прежде чем перейти к решению любого из предложенных расширений приложения, хорошо бы объединить ваши изменения:</p>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> git add .
<span class="gp">$</span> git commit -m <span class="s2">&quot;Add user following&quot;</span>
<span class="gp">$</span> git checkout master
<span class="gp">$</span> git merge following-users
</pre></div>
</div>


<p>Как обычно, если хотите, вы можете также отправить ваше приложение и развернуть его на сервере:</p>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> git push
<span class="gp">$</span> git push heroku
<span class="gp">$</span> heroku pg:reset DATABASE
<span class="gp">$</span> heroku run rake db:migrate
<span class="gp">$</span> heroku run rake db:populate
</pre></div>
</div>



<div class="label" id="sec-extensions_to_the_sample_application"></div>


<h3><a id="sec-11_4_1" href="following-users#sec-extensions_to_the_sample_application" class="heading"><span class="number">11.4.1</span> Расширения к примеру приложения</a></h3>


<p>Рекомендуемые расширения в этом разделе в основном вдохновлены основными функциями, общепринятыми для веб-приложений, такими как напоминание пароля и подтверждение адреса электронной почты, или функции характерные для нашего типа примера приложения, такие как поиск, ответы, обмен сообщениями. Реализация одного или более расширений приложения поможет вам сделать переход от выполнения примеров учебника к написанию собственных оригинальных приложений.</p>

<p>Не удивляйтесь, если по началу будет непросто; чистый лист новой фичи может быть немного пугающим. Чтобы помочь вам начать, я могу дать две большие рекомендации. Во-первых, пежде чем добавлять какую-либо функцию к  Rails приложению, взгляните на <a href="http://railscasts.com/episodes/archive">RailsCasts archive</a> чтобы посмотреть, не рассказал ли уже об этом Ryan Bates.<sup class="footnote" id="fnref-11_14"><a href="#fn-11_14">14</a></sup> Если он это сделал, просмотр соответствующего Railscast сэкономит вам массу времени. Во-вторых, всегда делайте обширный поиск в Google по вашей предполагаемой функции, чтобы найти соответствующее сообщения в блогах и пособиях. Разработка веб приложений это непростое дело и это поможет вам учиться на чужом опыте (и ошибках).</p>

<p>Многие из следующих функций являются довольно непростыми задачами, и я дал несколько подсказок по поводу средств, которые могут  вам понадобиться для их реализации. Даже с подсказками, они являются <em>намного</em> более трудными чем упражнения, которые приводились в конце каждой главы учебника, так что не расстраивайтесь, если вы не можете решить их без значительных усилий. Из-за нехватки времени я недоступен для личной помощи, но если есть достаточный интерес я мог бы выпустить автономную статью/скринкаст охватывающий эти расширения в будущем; перейдите на основной сайт Rails Tutorial <a href="http://railstutorial.org/">http://railstutorial.org/</a> и подпишитесь на ленту новостей, чтобы быть в курсе последних обновлений.</p>

<div class="label" id="sec-replies"></div>


<h4><a id="sec-11_4_1_1" href="following-users#sec-replies" class="heading">Реплики</a></h4>


<p>Твиттер позволяет пользователям делать &ldquo;@replies&rdquo;, которые являются микросообщениями, чьи первые символы являются логином пользователя предшествующим знаку&nbsp;<tt>@</tt>. Эти сообщения появляются только в потоке сообщений у пользователя задавшего вопрос или у пользователей читающих данного пользователя. Реализуйте упрощенную версию этого, ограничив появление @replies только в потоках сообщений получателя и отправителя. Это может подразумевать добавление <code>in_reply_to</code> столбца в таблицу <code>microposts</code> и дополнительного <code>including_replies</code> пространства к модели Micropost</p>

<p>Поскольку нашему приложению не хватает уникальных пользовательских логинов, вам также необходимо решить, каким способом представлять пользователей. Один из вариантов это использование комбинации id и имени, например <code>@1-michael-hartl</code>. Другой способ это <em>добавить</em> уникальное имя пользователя в процесс регистрации и затем использовать его в @replies.</p>

<div class="label" id="sec-messaging"></div>


<h4><a id="sec-11_4_1_2" href="following-users#sec-messaging" class="heading">Обмен сообщениями</a></h4>


<p>Твиттер поддерживает непосредственный (приватный) обмен сообщениями с помощью добавления префикса с буквой&nbsp;&ldquo;d&rdquo; к микросообщению. Реализуйте эту функцию для примера приложения. Решение, вероятно, подразумевает наличие модели Message и проверку новых микросообщений с помощью регулярных выражений.</p>

<div class="label" id="sec-follower_notifications"></div>


<h4><a id="sec-11_4_1_3" href="following-users#sec-follower_notifications" class="heading">Уведомления о новых читателях</a></h4>


<p>Реализуйте функцию, отправляющую каждому пользователю email уведомление когда у него появляется новый читатель. Затем сделайте уведомления необязательными, так чтобы пользователи могли отказаться при желании. Помимо всего прочего, добавление этой функции требует знания о том, как отправлять почту с помощью Rails. Начните с <a href="http://railscasts.com/episodes/206-action-mailer-in-rails-3">RailsCast on Action Mailer in Rails&nbsp;3</a>.</p>

<div class="label" id="sec-password_reminders"></div>


<h4><a id="sec-11_4_1_4" href="following-users#sec-password_reminders" class="heading">Напоминание пароля</a></h4>


<p>В настоящее время, если пользователи нашего приложения забудут свои пароли, они не смогут их восстановить. Из-за одностороннего безопасного хэширования паролей в <a class="ref" href="modeling-users#top">Главе&nbsp;6</a>, наше приложение не может отправить по email пароли пользователей, но оно может отправить ссылку на форму сброса пароля. Используя <a href="http://railscasts.com/episodes/274-remember-me-reset-password">RailsCast on Remember Me &amp; Reset Password</a> в качестве примера, исправьте это упущение.</p>

<div class="label" id="sec-signup_confirmation"></div>


<h4><a id="sec-11_4_1_5" href="following-users#sec-signup_confirmation" class="heading">Подтверждение регистрации</a></h4>


<p>Помимо регулярного выражения для электронной почты, пример приложения в настоящее время не имеет способа проверки валидности пользовательского email адреса. Добавьте шаг проверки email адреса в подтверждение регистрации пользователя. Новая функция должна создавать пользователей в неактивном состоянии, отправлять по email пользователям активационный URL, а затем активировать статус пользователя при посещении соответствующего URL. Для работы с активный/неактивный переходами вам может помочь прочтение <a href="http://www.google.com/search?q=state+machines+in+rails">state machines in Rails</a>.</p>

<div class="label" id="sec-rss_feed"></div>


<h4><a id="sec-11_4_1_6" href="following-users#sec-rss_feed" class="heading">RSS канал</a></h4>


<p>Реализовать для каждого пользователя RSS канал их микросообщений. Затем реализовать RSS канал для их лент сообщений, опционально ограничив доступ к этому каналу используя аутентификационную схему. <a href="http://railscasts.com/episodes/87-generating-rss-feeds">RailsCast on generating RSS feeds</a> поможет вам начать.</p>

<div class="label" id="sec-rest_api"></div>


<h4><a id="sec-11_4_1_7" href="following-users#sec-rest_api" class="heading">REST API</a></h4>


<p>Многие веб сайты раскрывают Application Programmer Interface (API) так что сторонние приложения могут  get, post, put и delete ресурсы приложения. Реализуйте такой REST API для примера приложения. Решение подразумевает добавление <code>respond_to</code> блоков (<a class="ref" href="following-users#sec-a_working_follow_button_with_ajax">Раздел&nbsp;11.2.5</a>) ко многим действиям  Application контроллера; они должны отвечать на запросы для XML. Позаботьтесь о безопасности; API должен быть доступен только авторизированным пользователям.</p>

<div class="label" id="sec-search"></div>


<h4><a id="sec-11_4_1_8" href="following-users#sec-search" class="heading">Поиск</a></h4>


<p>В настоящее время у пользователей нет другого способа найти друг-друга, кроме как просмотром списка пользователей или просматривая потоки сообщений других пользователей. Реализуйте функцию поиска чтобы исправить ситуацию. Затем добавьте другую поисковую функцию для микросообщений. <a href="http://railscasts.com/episodes/37-simple-search-form">RailsCast on simple search forms</a> поможет вам начать. Если вы используете шаред хостинг или выделенный сервер, я советую использовать <a href="http://freelancing-god.github.com/ts/en/">Thinking Sphinx</a> (см. <a href="http://railscasts.com/episodes/120-thinking-sphinx">RailsCast on Thinking Sphinx</a>). Если вы развернуты на Heroku, вы должны следовать инструкциям <a href="http://devcenter.heroku.com/articles/full-text-search">Heroku full text search</a>.</p>

<div class="label" id="sec-guide_to_further_resources"></div>


<h3><a id="sec-11_4_2" href="following-users#sec-guide_to_further_resources" class="heading"><span class="number">11.4.2</span> Руководство по дальнейшим ресурсам</a></h3>


<p>Существует огромное количество  Rails ресурсов в магазинах и в сети&nbsp;&mdash;&nbsp;предложений настолько много что это может ошеломить. Хорошие новости заключаются в том, что, если вы дошли до этого места учебника, вы готовы практически ко всему за его пределами. Вот несколько советов:</p>

<ul>
<li><a href="http://railstutorial.org/screencasts">The <em>Ruby on Rails Tutorial</em> screencasts</a>: я подготовил полноценный скринкаст курс основанный на этой книге. В дополнение к раскрытию всех материалов этой книги, скринкасты дополнены советами, трюками и демонстрациями типа смотри-как-это-делается, которые сложно зафиксировать в печатном варианте. Их можно приобрести через <a href="http://railstutorial.org/">сайт Ruby on Rails Tutorial</a>.</li>

<li><a href="http://railscasts.com/">RailsCasts</a>: трудно переоценить важность ресурса Railscasts, я советую начать с посещения <a href="http://railscasts.com/episodes/archive">архива эпизодов Railscasts</a> и клика по любой зацепившей вас теме.</li>

<li>Ruby и Rails книги: я рекомендую <a href="http://www.amazon.com/gp/product/1430223634"><em>Beginning Ruby</em></a> Петера Купера, <a href="http://www.amazon.com/gp/product/1933988657"><em>The Well-Grounded Rubyist</em></a> David&nbsp;A. Black, <a href="http://www.amazon.com/Eloquent-Ruby-Addison-Wesley-Professional-Series/dp/0321584104/"><em>Eloquent Ruby</em></a> Russ Olsen и <a href="http://www.amazon.com/gp/product/0672328844"><em>The Ruby Way</em></a> Хэла Фултона для дальнейшего изучения Ruby, и <a href="http://www.amazon.com/gp/product/0321601661"><em>The Rails&nbsp;3 Way</em></a> Оби Фернандеса, и <em>Rails&nbsp;3 in Action</em> (подождите второго издания) Ryan Bigg и Yehuda Katz для изучения Rails.</li>

<li><a href="http://peepcode.com/">PeepCode</a> и <a href="http://codeschool.com/">Code School</a>: скринкасты от PeepCode и интерактивные курсы в Code School неизменно высокого качества и я горячо рекомендую их.</li>

</ul>




<div class="label" id="sec-following_exercises"></div>


<h2><a id="sec-11_5" href="following-users#sec-following_exercises" class="heading"><span class="number">11.5</span> Упражнения</a></h2>




<ol>
<li>Добавьте тесты для уничтожения взаимоотношений связанных с данным пользователем (т.e., к реализации <code>dependent :destroy</code> в <a class="ref" href="following-users#code-user_relationships_association">Листинге&nbsp;11.4</a> и <a class="ref" href="following-users#code-user_reverse_relationships">Листинге&nbsp;11.16</a>). <em>Подсказка</em>: следуйте примеру в <a class="ref" href="user-microposts#code-micropost_dependency_test">Листинге&nbsp;10.12</a>.</li>

<li>Метод <code>respond_to</code> виденый в <a class="ref" href="following-users#code-relationships_controller_ajax">Листинге&nbsp;11.38</a> на самом деле может быть поднят из действий в сам контроллер Relationships, и <code>respond_to</code> блоки могут быть заменены на  Rails метод <code>respond_with</code>. Подтвердите, что результирующий код, показаный в <a class="ref" href="following-users#code-compact_respond_to">Листинге&nbsp;11.47</a>, является корректным, проверив что набор тестов все еще проходит. (Подробнее об этом методе см в Google поиске &ldquo;rails respond_with&rdquo;.)</li>
<li>Сделайте рефакторинг <a class="ref" href="following-users#code-show_follow_view">Листинга&nbsp;11.31</a> добавив партиалы для кода общего для страниц following/followers, страницы Home, и страницы показывающей пользователя.</li>
<li>Следуя модели в <a class="ref" href="following-users#code-stats_view_test">Листинге&nbsp;11.19</a>, напишите тесты для статистики на странице профиля.</li>
</ol>




<div class="label" id="code-compact_respond_to"></div>


<div class="codelisting">
<div class="listing"><span class="header">Листинг 11.47.</span> <span class="description">Компактный рефакторинг <a class="ref" href="following-users#code-relationships_controller_ajax">Листинга&nbsp;11.38</a>.</span>
</div>
<div class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">RelationshipsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:signed_in_user</span>

  <span class="n">respond_to</span> <span class="ss">:html</span><span class="p">,</span> <span class="ss">:js</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:relationship</span><span class="o">][</span><span class="ss">:followed_id</span><span class="o">]</span><span class="p">)</span>
    <span class="n">current_user</span><span class="o">.</span><span class="n">follow!</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
    <span class="n">respond_with</span> <span class="vi">@user</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">Relationship</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">followed</span>
    <span class="n">current_user</span><span class="o">.</span><span class="n">unfollow!</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
    <span class="n">respond_with</span> <span class="vi">@user</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</div></div>


<div class="navigation">  <a class="prev_page" href="user-microposts#top">
    &laquo;&nbsp;<span class="number">Глава 10</span> Микросообщения пользователей
  </a>
</div><div class="footnotes">
<ol>
<li id="fn-11_1">Фотографии для набросков взяты с <a href="http://www.flickr.com/photos/john_lustig/2518452221/">http://www.flickr.com/photos/john_lustig/2518452221/</a> и <a href="http://www.flickr.com/photos/30775272@N05/2884963755/">http://www.flickr.com/photos/30775272@N05/2884963755/</a>.&nbsp;<a class="arrow" href="#fnref-11_1">&uarr;</a></li>
<li id="fn-11_2">Первое издание этой книги использовало терминологию <code>user.following</code>, в которой даже я иногда путался. Благодарю читателя Cosmo Lee за то что он убедил меня изменить терминологию и за сформулированные советы о том как сделать это более понятным. (Однако не последовал его совету в точности, так что если вы все еще путаетесь - это не его вина.)&nbsp;<a class="arrow" href="#fnref-11_2">&uarr;</a></li>
<li id="fn-11_3">Для простоты, <a class="ref" href="following-users#fig-naive_user_has_many_following">Рис.&nbsp;11.6</a> подавляет <code>id</code> столбец таблицы <code>following</code>.&nbsp;<a class="arrow" href="#fnref-11_3">&uarr;</a></li>
<li id="fn-11_4">Более подробно об этом см. <a href="http://stackoverflow.com/questions/5359558/when-to-use-rspec-let">when to use let at Stack Overflow</a>.&nbsp;<a class="arrow" href="#fnref-11_4">&uarr;</a></li>
<li id="fn-11_5">Технически, Rails использует <code>underscore</code> метод для преобразования имени класса в id. Например, <code>"FooBar".underscore</code> является <code>"foo_bar"</code>, поэтому внешним ключом для объекта <code>FooBar</code> будет <code>foo_bar_id</code>. (Кстати, инверсией <code>underscore</code> является <code>camelize</code>, который конвертирует <code>camel_case</code> в <code>CamelCase</code>.)&nbsp;<a class="arrow" href="#fnref-11_5">&uarr;</a></li>
<li id="fn-11_6">Если вы заметили что <code>followed_id</code> также идентифицирует пользователя, и обеспокоены ассиметричным обращением с читателями и читаемыми, вы готовы к любым неожиданностям. Мы займемся этим вопросом в <a class="ref" href="following-users#sec-followers">Разделе&nbsp;11.1.5</a>.&nbsp;<a class="arrow" href="#fnref-11_6">&uarr;</a></li>
<li id="fn-11_7">Если у вас есть большой опыт моделирования конкретной предметной области, вы зачастую можете предугадать такие вспомогательные методы, и даже если нет, вы часто обнаруживаете себя за их написанием с целью почистить тесты. Однако в данном случае нормально если вы не угадали их. Разработка програмного обеспечения это обычно итеративный процесс &mdash; вы пишете код до тех пор пока он не начинает становиться уродливым, а затем вы рефакторите его &mdash; но, для краткости, изложение в учебнике немного сглажено.&nbsp;<a class="arrow" href="#fnref-11_7">&uarr;</a></li>
<li id="fn-11_8">Так как номинально это является акронимом <em>asynchronous JavaScript and XML</em>, Ajax иногда ошибочно пишут как &ldquo;AJAX&rdquo;, хотя на протяжении всей <a href="http://www.adaptivepath.com/ideas/essays/archives/000385.php">оригинальной Ajax статьи</a> используется написание  &ldquo;Ajax&rdquo;.&nbsp;<a class="arrow" href="#fnref-11_8">&uarr;</a></li>
<li id="fn-11_9">Это работает только если JavaScript включен в браузере, но изящно деградирует, работая в точности как в <a class="ref" href="following-users#sec-a_working_follow_button_the_standard_way">Разделе&nbsp;11.2.4</a> если JavaScript отключен.&nbsp;<a class="arrow" href="#fnref-11_9">&uarr;</a></li>
<li id="fn-11_10">Основное требование заключается в том, что перечисляемые объекты должны реализовывать <code>each</code> метод для перебора коллекции.&nbsp;<a class="arrow" href="#fnref-11_10">&uarr;</a></li>
<li id="fn-11_11">На самом деле такая нотация на самом деле изначально была расширением которое Rails вносил в ядро ​​языка Ruby; она была настолько полезной, что в настоящее время она включена в сам Ruby. Замечательно, правда?&nbsp;<a class="arrow" href="#fnref-11_11">&uarr;</a></li>
<li id="fn-11_12">Для более продвинутых способов создания необходимых подзапросов, см. сообщение в блоге <a href="http://pivotallabs.com/users/jsusser/blog/articles/567-hacking-a-subselect-in-activerecord">&ldquo;Hacking a subselect in ActiveRecord&rdquo;.</a>&nbsp;<a class="arrow" href="#fnref-11_12">&uarr;</a></li>
<li id="fn-11_13">Для того чтобы сделать поток сообщений на <a class="ref" href="following-users#fig-home_page_with_feed">Рис.&nbsp;11.20</a> более привлекательным, я добавил несколько дополнительных микросообщений вручную используя Rails консоль.&nbsp;<a class="arrow" href="#fnref-11_13">&uarr;</a></li>
<li id="fn-11_14">Единственная моя оговорка по поводу Railscasts&nbsp;&mdash;&nbsp;они обычно опускают тесты. Это, вероятно, необходимо для сохранения красоты и краткости эпизодов, но у вас может сформироваться неправильное представление о важности тестов. После просмотра соответствующего Railscast для получения представления о процессе, я советую писать новую фнкцию используя разработку через тестирование. (В этом контексте я рекомендую взглянуть на <a href="http://railscasts.com/episodes/275-how-i-test">the RailsCast on &ldquo;How I test&rdquo;</a>. Вы увидите, что Ryan Bates сам обычно использует TDD для разработки в реальной жизни и что, фактически, его стиль тестирования совпадает со стилем используемым в данном учебнике.)&nbsp;<a class="arrow" href="#fnref-11_14">&uarr;</a></li>
<li id="fn-11_15"><span class="c1"># позволю себе небольшой комментарий к переводу этой главы. В тексте очень часто употребляются различные формы слова follow (following, follower, followers и т.п.) в дословном переводе это означает "следовать" (слежение, следящий, следящие соответственно). Однако Twitter, (клоном которого является пример приложения, рассматриваемый в этом учебнике) вместо дословного перевода использует термины "Читает" (для following) и "Читают" (для followers) и лично мне термин "Читатели" вместо возможного дословного перевода (следователи, последователи и т.п.) нравится больше. И, несмотря на несколько казусов с этим связанных, в оставшейся части учебника  я постараюсь придерживаться именно этого варианта. <br/> P.s. Надеюсь данный комментарий не запутал вас окончательно. :)   </span>&nbsp;<a class="arrow" href="#fnref-11_15">&uarr;</a></li>
</ol>
</div>

    </div>
  <div id="book_bottom">
  </div>
</div>
</div><script type="text/javascript">
    var reformalOptions = {
        project_id: 36662,
        project_host: "RoR.reformal.ru",
        tab_orientation: "left",
        tab_indent: "50%",
        tab_bg_color: "#6b0508",
        tab_border_color: "#FFFFFF",
        tab_image_url: "http://tab.reformal.ru/T9GC0LfRi9Cy0Ysg0Lgg0L%252FRgNC10LTQu9C%252B0LbQtdC90LjRjw==/FFFFFF/4bfb34d91c8d7fb481972ca3c84aec38/left/0/tab.png",
        tab_border_width: 1
    };

    (function() {
        var script = document.createElement('script');
        script.type = 'text/javascript'; script.async = true;
        script.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'media.reformal.ru/widgets/v3/reformal.js';
        document.getElementsByTagName('head')[0].appendChild(script);
    })();
</script>
<div class="orphus center"><script src="/javascripts/orphus.js" type="text/javascript"></script></div><!-- Yandex.Metrika counter -->
<div style="display:none;"><script type="text/javascript">
(function(w, c) {
    (w[c] = w[c] || []).push(function() {
        try {
            w.yaCounter5083948 = new Ya.Metrika(5083948);
             yaCounter5083948.clickmap(true);
             yaCounter5083948.trackLinks(true);

        } catch(e) { }
    });
})(window, 'yandex_metrika_callbacks');
</script></div>
<script src="//mc.yandex.ru/metrika/watch.js" type="text/javascript" defer="defer"></script>
<noscript><div><img src="//mc.yandex.ru/watch/5083948" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
<!-- /Yandex.Metrika counter --></div></div></body></html>